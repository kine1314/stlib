cscope 15 /media/programs/workdir/stlib/trunk/vc_pro/kscope/stlib -q 0000004530 0000533493
	@/media/programs/workdir/stlib/trunk/include/st_arry.h

1 #i‚def 
__ST_ARRY_H__


2 
	#__ST_ARRY_H__


	)

3 
	~"°lib.h
"

5 
	gST_BEGIN_DECLS
;

7 
°_¨ry_ªcursive_mîge_s‹t
(
°öt
 
a
[],°öà
À·
,°öà
right
);

8 
°_¨ry_ôî©i⁄_mîge_s‹t
(
°öt
 
a
[], stöà
n
);

9 
°_¨ry_hód_s‹t
(
°öt
 
¨øy
[], stöà
n
);

10 
°_¨ry_qs‹t
(
°öt
 *
¨øy
,°öà
low
,°öà
high
);

11 
°_¨ry_shñl_s‹t
(
°öt
 
¨øy
[], stöà
n
);

12 
°_¨ry_£À˘_s‹t
(
°öt
 
¨øy
[], stöà
n
);

13 
°_¨ry_bubbÀ_s‹t
(
°öt
 
¨øy
[], stöà
n
);

14 
°_¨ry_ö£π_s‹t
(
°öt
 
¨øy
[], stöà
n
);

15 
°_¨ry_bö¨y_ö£π_s‹t
(
°öt
 
¨øy
[], stöà
n
);

16 
°_¨ry_ødix_s‹t
(
°öt
 
¨øy
[], stöà
n
);

17 
°_¨ry_tou∫amít_s‹t
(
°öt
 
¨øy
[], stöà
n
 );

19 
	gST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_asyncqueue.h

	@/media/programs/workdir/stlib/trunk/include/st_avltree.h

1 #i‚def 
__ST_AVLTREE_H__


2 
	#__ST_AVLTREE_H__


	)

4 
	~"°lib.h
"

6 
	gST_BEGIN_DECLS
;

14 
°öt
 
	tAVLEÀmTy≥
;

16 
	s_AVLNode


18 
AVLEÀmTy≥
 
	mnD©a
;

19 
_AVLNode
* 
	mpLe·
;

20 
_AVLNode
* 
	mpRight
;

21 
°öt
 
	mnHeight
;

22 }
	tAVLNode
, *
	tAVLTªe
;

25 
AVLTªe
 
°_av…ªe_ö£π
(
AVLEÀmTy≥
 
nD©a
, AVLTªê
pNode
);

28 
AVLTªe
 
°_av…ªe_dñëe
(AVLTªê
pRoŸ
, 
AVLEÀmTy≥
 
key
);

31 
°öt
 
°_av…ªe_föd
(
AVLEÀmTy≥
 
d©a
, 
AVLTªe
 
pRoŸ
);

34 
°_av…ªe_de°roy
(
AVLTªe
* 
µRoŸ
);

37 
°_av…ªe_åavî£
(
AVLTªe
 
pRoŸ
);

41 
	gST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_btree.h

1 #i‚def 
__ST_BTREE_H__


2 
	#__ST_BTREE_H__


	)

4 
	~"°lib.h
"

5 
	~"°_quíe.h
"

7 
	gST_BEGIN_DECLS
;

13 
	#STACK_INIT_SIZE
 10

14 
	#STACKINCREMENT
 2

15 
	#STCÀ¨Båì
 
°_båì_de°roy


	)

20 
	tTEÀmTy≥
;

22 
	$°öt
(*
	tVisôFunc
)(
	tTEÀmTy≥
 
	te
) ;

24 
	s_ST_BNODE


26 
TEÀmTy≥
 
d©a
;

27 
_ST_BNODE
 *
lchûd
, *
rchûd
;

28 }
	tST_BNODE
, *
	tST_BTREE
;

30 
ST_BTREE
 
	tQEÀmTy≥
;

31 
ST_BTREE
 
	tSEÀmTy≥
;

35 
	s_QNode


37 
QEÀmTy≥
 
d©a
;

38 
_QNode
 *
√xt
;

39 }
	tQNode
, *
	tQueuePå
;

42 
	s_LökQueue


44 
QueuePå
 
‰⁄t
 ;

45 
QueuePå
 
ª¨
;

46 }
	tLökQueue
;

51 
	s_SqSèck


53 
SEÀmTy≥
 *
ba£
;

54 
SEÀmTy≥
 *
t›
;

55 
°öt
 
°acksize
;

56 }
	tSqSèck
;

62 
°öt
 
	`°_båì_öô
(
ST_BTREE
 *
T
) ;

64 
	`°_båì_de°roy
(
ST_BTREE
 *
T
);

67 
	`°_båì_¸óã
(
ST_BTREE
 *
T
);

69 
°öt
 
	`°_båì_em±y
(
ST_BTREE
 
T
);

71 
°öt
 
	`°_båì_dïth
(
ST_BTREE
 
T
);

73 
TEÀmTy≥
 
	`°_båì_roŸ
(
ST_BTREE
 
T
);

75 
TEÀmTy≥
 
	`°_båì_vÆue
(
ST_BTREE
 
p
);

77 
	`°_båì_assign
(
ST_BTREE
 
p
,
TEÀmTy≥
 
vÆue
);

79 
TEÀmTy≥
 
	`°_båì_∑ª¡
(
ST_BTREE
 
T
,TEÀmTy≥ 
e
);

81 
ST_BTREE
 
	`°_båì_poöt
(ST_BTREE 
T
,
TEÀmTy≥
 
s
);

83 
TEÀmTy≥
 
	`°_båì_À·_chûd
(
ST_BTREE
 
T
,TEÀmTy≥ 
e
);

85 
TEÀmTy≥
 
	`°_båì_right_chûd
(
ST_BTREE
 
T
,TEÀmTy≥ 
e
);

87 
TEÀmTy≥
 
	`°_båì_À·_siblög
(
ST_BTREE
 
T
,TEÀmTy≥ 
e
);

89 
TEÀmTy≥
 
	`°_båì_right_siblög
(
ST_BTREE
 
T
,TEÀmTy≥ 
e
);

92 
°öt
 
	`°_båì_ö£π_chûd
(
ST_BTREE
 
p
, stöà
LR
,ST_BTREE 
c
);

94 
°öt
 
	`°_båì_dñëe_chûd
(
ST_BTREE
 
p
, stöà
LR
) ;

96 
	`°_båì_¥e‹dî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
);

98 
	`°_båì_¥e‹dî_åavî£_ôî©i⁄
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
);

100 
	`°_båì_mid‹dî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
);

102 
	`°_båì_mid‹dî_åavî£_ôî©i⁄
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
) ;

105 
°öt
 
	`°_båì_mid‹dî_ôî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
);

108 
°öt
 
	`°_båì_mid‹dî_ôî_åavî£2
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
);

110 
	`°_båì_pos‹dî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
);

112 
	`°_båì_pos‹dî_åavî£_ôî©i⁄
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
) ;

114 
	`°_båì_Àvñ_‹dî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
);

116 
	`°_båì_exch™ge_LR
(
ST_BTREE
 
T
);

118 
	`°_båì_ôî©i⁄_exch™ge_LR
(
ST_BTREE
 
T
);

120 
°öt
 
	`°_båì_Àaves_num
(
ST_BTREE
 
T
);

122 
°öt
 
	`°_båì_Àaves_num_ôî©i⁄
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
);

128 
°öt
 
	tBSTKeyTy≥
;

130 
	s_BSTEÀmTy≥


132 
BSTKeyTy≥
 
key
;

133 
°öt
 
Ÿhîs
;

134 } 
	tBSTEÀmTy≥
;

136 (*
	tVisôBST
)(
	tBSTEÀmTy≥
) ;

140 
	s_BSTNode


142 
BSTEÀmTy≥
 
d©a
;

143 
_BSTNode
 *
lchûd
,*
rchûd
;

144 }
	tBSTNode
,*
	tBSTªe
;

148 
°öt
 
	`°_b°ªe_öô
(
BSTªe
 *
DT
) ;

150 
	`°_b°ªe_de°roy
(
BSTªe
 *
DT
);

153 
BSTªe
 
	`°_b°ªe_£¨ch
(BSTªê
T
,
BSTKeyTy≥
 
key
);

157 
	`°_b°ªe_£¨ch1
(
BSTªe
 *
T
, 
BSTKeyTy≥
 
key
, BSTªê
f
, BSTªê*
p
, 
°öt
 *
Êag
) ;

160 
°öt
 
	`°_b°ªe_ö£π
(
BSTªe
 *
T
, 
BSTEÀmTy≥
 
e
);

162 
	`°_b°ªe_dñëe_node
(
BSTªe
 *
p
);

165 
°öt
 
	`°_b°ªe_dñëe_key
(
BSTªe
 *
T
,
BSTKeyTy≥
 
key
);

167 
	`°_b°ªe_dñëe_åavî£
(
BSTªe
 
DT
,
VisôBST
 
Visô
);

170 
ST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_dlist.h

1 #i‚def 
__ST_DLIST_H__


2 
	#__ST_DLIST_H__


	)

4 
	~"°lib.h
"

6 
	gST_BEGIN_DECLS
;

8 
	s_STDLIST


10 
°poöãr
 
	md©a
 ;

11 
_STDLIST
 *
	m√xt
 ;

12 
_STDLIST
 *
	m¥ev
 ;

13 }
	tSTDLIST
 ;

17 
STDLIST
* 
°_dli°_Æloc
() ;

18 
°_dli°_‰ì1
(
STDLIST
 *
li°
);

19 
°_dli°_‰ì
(
STDLIST
 *
li°
);

20 
STDLIST
* 
°_dli°_≠≥nd
(STDLIST *
li°
, 
°poöãr
 
d©a
);

21 
STDLIST
* 
°_dli°_¥ïíd
(STDLIST *
li°
, 
°poöãr
 
d©a
);

22 
STDLIST
* 
°_dli°_ö£π
(STDLIST *
li°
, 
°poöãr
 
d©a
, 
°öt
 
posôi⁄
);

23 
STDLIST
* 
°_dli°_ö£π_s‹ãd
(STDLIST *
li°
,

24 
°poöãr
 
d©a
,

25 
STCom∑ªFunc
 
func
);

26 
STDLIST
* 
°_dli°_ö£π_bef‹e
(STDLIST *
li°
,

27 
STDLIST
 *
siblög
,

28 
°poöãr
 
d©a
);

29 
STDLIST
* 
°_dli°_c⁄ˇt
(STDLIST *
li°1
, STDLIST *
li°2
);

30 
STDLIST
* 
°_dli°_ªmove
(STDLIST *
li°
, 
°c⁄°poöãr
 
d©a
) ;

31 
STDLIST
* 
°_dli°_ªmove_Æl
(STDLIST *
li°
, 
°c⁄°poöãr
 
d©a
) ;

32 
STDLIST
* 
°_dli°_ªmove_lök
(STDLIST *
li°
, STDLIST *
lök_
) ;

33 
STDLIST
* 
°_dli°_dñëe_lök
(STDLIST *
li°
, STDLIST *
lök_
) ;

34 
STDLIST
* 
°_dli°_ªvî£
(STDLIST *
li°
) ;

35 
STDLIST
* 
°_dli°_c›y
(STDLIST *
li°
) ;

36 
STDLIST
* 
°_dli°_¡h
(STDLIST *
li°
, 
°uöt
 
n
);

37 
STDLIST
* 
°_dli°_¡h_¥ev
(STDLIST *
li°
, 
°uöt
 
n
);

38 
°poöãr
 
°_dli°_¡h_d©a
(
STDLIST
 *
li°
, 
°uöt
 
n
);

39 
STDLIST
* 
°_dli°_föd
(STDLIST *
li°
, 
°c⁄°poöãr
 
d©a
);

40 
STDLIST
* 
°_dli°_föd_cu°om
(STDLIST *
li°
,

41 
°c⁄°poöãr
 
d©a
,

42 
STCom∑ªFunc
 
func
);

43 
°öt
 
°_dli°_posôi⁄
(
STDLIST
 *
li°
, STDLIST *
Œök
);

44 
°öt
 
°_dli°_ödex
(
STDLIST
 *
li°
,

45 
°c⁄°poöãr
 
d©a
);

46 
STDLIST
* 
°_dli°_fú°
(STDLIST *
li°
);

47 
STDLIST
* 
°_dli°_œ°
(STDLIST *
li°
);

48 
°uöt
 
°_dli°_Àngth
(
STDLIST
 *
li°
);

49 
°_dli°_f‹óch
(
STDLIST
 *
li°
,

50 
STFunc
 
func
,

51 
°poöãr
 
u£r_d©a
);

52 
STDLIST
* 
°_dli°_s‹t
(STDLIST *
li°
,

53 
STCom∑ªFunc
 
com∑ª_func
) ;

54 
STDLIST
* 
°_dli°_s‹t_wôh_d©a
(STDLIST *
li°
,

55 
STCom∑ªD©aFunc
 
com∑ª_func
,

56 
°poöãr
 
u£r_d©a
) ;

59 
	#°_dli°_¥evious
(
li°
Ë(÷i°Ë? (((
GLi°
 *)÷i°))->
¥ev
Ë: 
NULL
)

	)

60 
	#°_dli°_√xt
(
li°
Ë(÷i°Ë? (((
GLi°
 *)÷i°))->
√xt
Ë: 
NULL
)

	)

62 
	gST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_drlist.h

1 #i‚def 
__ST_DRLIST_H__


2 
	#__ST_DRLIST_H__


	)

4 
	~"°lib.h
"

6 
	gST_BEGIN_DECLS
;

10 
	#ST_LIST_POISON1
 ((*Ë0x00100100)

	)

11 
	#ST_LIST_POISON2
 ((*Ë0x00200200)

	)

13 
	s_°_li°_hód


15 
_°_li°_hód
 *
	m√xt
;

16 
_°_li°_hód
 *
	m¥ev
;

17 }
	t°_li°_hód
;

19 
	s_°_hli°_node


21 
_°_hli°_node
 *
	m√xt
;

22 
_°_hli°_node
 **
	mµªv
;

23 }
	t°_hli°_node
 ;

25 
	s_°_hli°_hód


27 
_°_hli°_node
 *
	mfú°
;

28 }
	t°_hli°_hód
 ;

31 
	#ST_LIST_HEAD_INIT
(
«me
Ë{ &“ame), &“ameË}

	)

32 
	#ST_LIST_HEAD
(
«me
Ë\

	)

33 
°_li°_hód
 
	g«me
 = 
	$ST_LIST_HEAD_INIT
(
«me
)

39 
°ölöe
 
	$ST_INIT_LIST_HEAD
(
°_li°_hód
 *
li°
)

41 
li°
->
√xt
 =Üist;

42 
li°
->
¥ev
 =Üist;

43 
	}
}

51 
°ölöe
 
	$__°_li°_add
(
°_li°_hód
 *
√w
,

52 
°_li°_hód
 *
¥ev
,

53 
°_li°_hód
 *
√xt
)

55 
√xt
->
¥ev
 = 
√w
;

56 
√w
->
√xt
 =Çext;

57 
√w
->
¥ev
 =Örev;

58 
¥ev
->
√xt
 = 
√w
;

59 
	}
}

70 
°ölöe
 
	$°_li°_add
(
°_li°_hód
 *
√w
, st_li°_hód *
hód
)

72 
	`__°_li°_add
(
√w
, 
hód
, hód->
√xt
);

73 
	}
}

84 
°ölöe
 
	$°_li°_add_èû
(
°_li°_hód
 *
√w
, st_li°_hód *
hód
)

86 
	`__°_li°_add
(
√w
, 
hód
->
¥ev
, head);

87 
	}
}

96 
°ölöe
 
	$__°_li°_dñ
(
°_li°_hód
 * 
¥ev
, st_li°_hód * 
√xt
)

98 
√xt
->
¥ev
 =Örev;

99 
¥ev
->
√xt
 =Çext;

100 
	}
}

108 
°ölöe
 
	$__°_li°_dñ_íåy
(
°_li°_hód
 *
íåy
)

110 
	`__°_li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

111 
	}
}

113 
°ölöe
 
	$°_li°_dñ
(
°_li°_hód
 *
íåy
)

115 
	`__°_li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

116 
íåy
->
√xt
 = 
ST_LIST_POISON1
;

117 
íåy
->
¥ev
 = 
ST_LIST_POISON2
;

118 
	}
}

127 
°ölöe
 
	$°_li°_ª∂a˚
(
°_li°_hód
 *
ﬁd
,

128 
°_li°_hód
 *
√w
)

130 
√w
->
√xt
 = 
ﬁd
->next;

131 
√w
->
√xt
->
¥ev
 =Çew;

132 
√w
->
¥ev
 = 
ﬁd
->prev;

133 
√w
->
¥ev
->
√xt
 =Çew;

134 
	}
}

136 
°ölöe
 
	$°_li°_ª∂a˚_öô
(
°_li°_hód
 *
ﬁd
,

137 
°_li°_hód
 *
√w
)

139 
	`°_li°_ª∂a˚
(
ﬁd
, 
√w
);

140 
	`ST_INIT_LIST_HEAD
(
ﬁd
);

141 
	}
}

150 
°ölöe
 
	$°_li°_dñ_öô
(
°_li°_hód
 *
íåy
)

152 
	`__°_li°_dñ_íåy
(
íåy
);

153 
	`ST_INIT_LIST_HEAD
(
íåy
);

154 
	}
}

167 
°ölöe
 
	$°_li°_move
(
°_li°_hód
 *
li°
, st_li°_hód *
hód
)

169 
	`__°_li°_dñ_íåy
(
li°
);

170 
	`°_li°_add
(
li°
, 
hód
);

171 
	}
}

183 
°ölöe
 
	$°_li°_move_èû
(
°_li°_hód
 *
li°
,

184 
°_li°_hód
 *
hód
)

186 
	`__°_li°_dñ_íåy
(
li°
);

187 
	`°_li°_add_èû
(
li°
, 
hód
);

188 
	}
}

195 
°ölöe
 
°öt
 
	$°_li°_is_œ°
(c⁄° 
°_li°_hód
 *
li°
,

196 c⁄° 
°_li°_hód
 *
hód
)

198  
li°
->
√xt
 =
hód
;

199 
	}
}

206 
°ölöe
 
°öt
 
	$°_li°_em±y
(c⁄° 
°_li°_hód
 *
hód
)

208  
hód
->
√xt
 == head;

209 
	}
}

225 
°ölöe
 
°öt
 
	$°_li°_em±y_ˇªful
(c⁄° 
°_li°_hód
 *
hód
)

227 
°_li°_hód
 *
√xt
 = 
hód
->next;

228  (
√xt
 =
hód
Ë&& (√xà=hód->
¥ev
);

229 
	}
}

235 
°ölöe
 
	$°_li°_rŸ©e_À·
(
°_li°_hód
 *
hód
)

237 
°_li°_hód
 *
fú°
;

239 i‡(!
	`°_li°_em±y
(
hód
)) {

240 
fú°
 = 
hód
->
√xt
;

241 
	`°_li°_move_èû
(
fú°
, 
hód
);

243 
	}
}

249 
°ölöe
 
°öt
 
	$°_li°_is_söguœr
(c⁄° 
°_li°_hód
 *
hód
)

251  !
	`°_li°_em±y
(
hód
Ë&& (hód->
√xt
 =hód->
¥ev
);

252 
	}
}

254 
°ölöe
 
	$__°_li°_cut_posôi⁄
(
°_li°_hód
 *
li°
,

255 
°_li°_hód
 *
hód
, st_li°_hód *
íåy
)

257 
°_li°_hód
 *
√w_fú°
 = 
íåy
->
√xt
;

258 
li°
->
√xt
 = 
hód
->next;

259 
li°
->
√xt
->
¥ev
 =Üist;

260 
li°
->
¥ev
 = 
íåy
;

261 
íåy
->
√xt
 = 
li°
;

262 
hód
->
√xt
 = 
√w_fú°
;

263 
√w_fú°
->
¥ev
 = 
hód
;

264 
	}
}

280 
°ölöe
 
	$°_li°_cut_posôi⁄
(
°_li°_hód
 *
li°
,

281 
°_li°_hód
 *
hód
, st_li°_hód *
íåy
)

283 i‡(
	`°_li°_em±y
(
hód
))

285 i‡(
	`°_li°_is_söguœr
(
hód
) &&

286 (
hód
->
√xt
 !
íåy
 && head !=Éntry))

288 i‡(
íåy
 =
hód
)

289 
	`ST_INIT_LIST_HEAD
(
li°
);

291 
	`__°_li°_cut_posôi⁄
(
li°
, 
hód
, 
íåy
);

292 
	}
}

294 
°ölöe
 
	$__°_li°_•li˚
(c⁄° 
°_li°_hód
 *
li°
,

295 
°_li°_hód
 *
¥ev
,

296 
°_li°_hód
 *
√xt
)

298 
°_li°_hód
 *
fú°
 = 
li°
->
√xt
;

299 
°_li°_hód
 *
œ°
 = 
li°
->
¥ev
;

301 
fú°
->
¥ev
 =Örev;

302 
¥ev
->
√xt
 = 
fú°
;

304 
œ°
->
√xt
 =Çext;

305 
√xt
->
¥ev
 = 
œ°
;

306 
	}
}

314 
°ölöe
 
	$°_li°_•li˚
(c⁄° 
°_li°_hód
 *
li°
,

315 
°_li°_hód
 *
hód
)

317 i‡(!
	`°_li°_em±y
(
li°
))

318 
	`__°_li°_•li˚
(
li°
, 
hód
, hód->
√xt
);

319 
	}
}

327 
°ölöe
 
	$°_li°_•li˚_èû
(
°_li°_hód
 *
li°
,

328 
°_li°_hód
 *
hód
)

330 i‡(!
	`°_li°_em±y
(
li°
))

331 
	`__°_li°_•li˚
(
li°
, 
hód
->
¥ev
, head);

332 
	}
}

341 
°ölöe
 
	$°_li°_•li˚_öô
(
°_li°_hód
 *
li°
,

342 
°_li°_hód
 *
hód
)

344 i‡(!
	`°_li°_em±y
(
li°
)) {

345 
	`__°_li°_•li˚
(
li°
, 
hód
, hód->
√xt
);

346 
	`ST_INIT_LIST_HEAD
(
li°
);

348 
	}
}

358 
°ölöe
 
	$°_li°_•li˚_èû_öô
(
°_li°_hód
 *
li°
,

359 
°_li°_hód
 *
hód
)

361 i‡(!
	`°_li°_em±y
(
li°
)) {

362 
	`__°_li°_•li˚
(
li°
, 
hód
->
¥ev
, head);

363 
	`ST_INIT_LIST_HEAD
(
li°
);

365 
	}
}

375 
	#°_li°_íåy
(
±r
, 
ty≥
, 
membî
Ë\

	)

376 
	$°_c⁄èöî_of
(
±r
, 
ty≥
, 
membî
)

386 
	#°_li°_fú°_íåy
(
±r
, 
ty≥
, 
membî
Ë\

	)

387 
	`°_li°_íåy
((
±r
)->
√xt
, 
ty≥
, 
membî
)

396 
	#°_li°_f‹_óch
(
pos
, 
hód
Ë\

	)

397 
pos
 = (
hód
)->
√xt
;Öos != (head);Öos =Öos->next)

407 
	#__°_li°_f‹_óch
(
pos
, 
hód
Ë\

	)

408 
pos
 = (
hód
)->
√xt
;Öos != (head);Öos =Öos->next)

416 
	#°_li°_f‹_óch_¥ev
(
pos
, 
hód
Ë\

	)

417 
pos
 = (
hód
)->
¥ev
;Öos != (head);Öos =Öos->prev)

425 
	#°_li°_f‹_óch_ß„
(
pos
, 
n
, 
hód
Ë\

	)

426 
pos
 = (
hód
)->
√xt
, 
n
 =Öos->next;Öos != (head); \

427 
pos
 = 
n
,Ç =Öos->
√xt
)

435 
	#°_li°_f‹_óch_¥ev_ß„
(
pos
, 
n
, 
hód
Ë\

	)

436 
pos
 = (
hód
)->
¥ev
, 
n
 =Öos->prev; \

437 
pos
 !(
hód
); \

438 
pos
 = 
n
,Ç =Öos->
¥ev
)

447 
	#°_li°_f‹_óch_íåy
(
pos
, 
hód
, 
membî
Ë\

	)

448 
pos
 = 
	`°_li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
); \

449 &
pos
->
membî
 !(
hód
); \

450 
pos
 = 
	`°_li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member))

458 
	#°_li°_f‹_óch_íåy_ªvî£
(
pos
, 
hód
, 
membî
Ë\

	)

459 
pos
 = 
	`°_li°_íåy
((
hód
)->
¥ev
, 
	`ty≥of
(*pos), 
membî
); \

460 &
pos
->
membî
 !(
hód
); \

461 
pos
 = 
	`°_li°_íåy
’os->
membî
.
¥ev
, 
	`ty≥of
(*pos), member))

474 
	#°_li°_¥ï¨e_íåy
(
pos
, 
hód
, 
membî
Ë\

	)

475 ((
pos
Ë? : 
	`°_li°_íåy
(
hód
, 
	`ty≥of
(*pos), 
membî
))

488 
	#°_li°_f‹_óch_íåy_c⁄töue
(
pos
, 
hód
, 
membî
Ë\

	)

489 
pos
 = 
	`°_li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

490 &
pos
->
membî
 !(
hód
); \

491 
pos
 = 
	`°_li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member))

502 
	#°_li°_f‹_óch_íåy_c⁄töue_ªvî£
(
pos
, 
hód
, 
membî
Ë\

	)

503 
pos
 = 
	`°_li°_íåy
’os->
membî
.
¥ev
, 
	`ty≥of
(*pos), member); \

504 &
pos
->
membî
 !(
hód
); \

505 
pos
 = 
	`°_li°_íåy
’os->
membî
.
¥ev
, 
	`ty≥of
(*pos), member))

515 
	#°_li°_f‹_óch_íåy_‰om
(
pos
, 
hód
, 
membî
Ë\

	)

516 ; &
pos
->
membî
 !(
hód
); \

517 
pos
 = 
	`°_li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member))

527 
	#°_li°_f‹_óch_íåy_ß„
(
pos
, 
n
, 
hód
, 
membî
Ë\

	)

528 
pos
 = 
	`°_li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
), \

529 
n
 = 
	`°_li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

530 &
pos
->
membî
 !(
hód
); \

531 
pos
 = 
n
,Ç = 
	`°_li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), member))

543 
	#°_li°_f‹_óch_íåy_ß„_c⁄töue
(
pos
, 
n
, 
hód
, 
membî
Ë\

	)

544 
pos
 = 
	`°_li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member), \

545 
n
 = 
	`°_li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

546 &
pos
->
membî
 !(
hód
); \

547 
pos
 = 
n
,Ç = 
	`°_li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), member))

559 
	#°_li°_f‹_óch_íåy_ß„_‰om
(
pos
, 
n
, 
hód
, 
membî
Ë\

	)

560 
n
 = 
	`°_li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

561 &
pos
->
membî
 !(
hód
); \

562 
pos
 = 
n
,Ç = 
	`°_li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), member))

574 
	#°_li°_f‹_óch_íåy_ß„_ªvî£
(
pos
, 
n
, 
hód
, 
membî
Ë\

	)

575 
pos
 = 
	`°_li°_íåy
((
hód
)->
¥ev
, 
	`ty≥of
(*pos), 
membî
), \

576 
n
 = 
	`°_li°_íåy
(
pos
->
membî
.
¥ev
, 
	`ty≥of
(*pos), member); \

577 &
pos
->
membî
 !(
hód
); \

578 
pos
 = 
n
,Ç = 
	`°_li°_íåy
“->
membî
.
¥ev
, 
	`ty≥of
(*n), member))

592 
	#°_li°_ß„_ª£t_√xt
(
pos
, 
n
, 
membî
Ë\

	)

593 
n
 = 
	`°_li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member)

607 
	#ST_HLIST_HEAD_INIT
 { .
fú°
 = 
NULL
 
	}

	)
}

608 
	#ST_HLIST_HEAD
(
«me
Ë
°_hli°_hód
Çamê{ .
fú°
 = 
NULL
 }

	)

609 
	#ST_INIT_HLIST_HEAD
(
±r
Ë(’å)->
fú°
 = 
NULL
)

	)

610 
	$ST_INIT_HLIST_NODE
(
°_hli°_node
 *
h
)

612 
h
->
√xt
 = 
ST_LIST_POISON1
;

613 
h
->
µªv
 = 
ST_LIST_POISON2
;

614 
	}
}

616 
°ölöe
 
°öt
 
	$°_hli°_unhashed
(c⁄° 
°_hli°_node
 *
h
)

618  !
h
->
µªv
;

619 
	}
}

621 
°ölöe
 
°öt
 
	$°_hli°_em±y
(c⁄° 
°_hli°_hód
 *
h
)

623  !
h
->
fú°
;

624 
	}
}

626 
°ölöe
 
	$__°_hli°_dñ
(
°_hli°_node
 *
n
)

628 
°_hli°_node
 *
√xt
 = 
n
->next;

629 
°_hli°_node
 **
µªv
 = 
n
->pprev;

630 *
µªv
 = 
√xt
;

631 i‡(
√xt
)

632 
√xt
->
µªv
 =Öprev;

633 
	}
}

635 
°ölöe
 
	$hli°_dñ
(
°_hli°_node
 *
n
)

637 
	`__°_hli°_dñ
(
n
);

638 
n
->
√xt
 = 
ST_LIST_POISON1
;

639 
n
->
µªv
 = 
ST_LIST_POISON2
;

640 
	}
}

642 
°ölöe
 
	$°_hli°_dñ_öô
(
°_hli°_node
 *
n
)

644 i‡(!
	`°_hli°_unhashed
(
n
)) {

645 
	`__°_hli°_dñ
(
n
);

646 
	`ST_INIT_HLIST_NODE
(
n
);

648 
	}
}

650 
°ölöe
 
	$°_hli°_add_hód
(
°_hli°_node
 *
n
, 
°_hli°_hód
 *
h
)

652 
°_hli°_node
 *
fú°
 = 
h
->first;

653 
n
->
√xt
 = 
fú°
;

654 i‡(
fú°
)

655 
fú°
->
µªv
 = &
n
->
√xt
;

656 
h
->
fú°
 = 
n
;

657 
n
->
µªv
 = &
h
->
fú°
;

658 
	}
}

661 
°ölöe
 
	$°_hli°_add_bef‹e
(
°_hli°_node
 *
n
,

662 
°_hli°_node
 *
√xt
)

664 
n
->
µªv
 = 
√xt
->pprev;

665 
n
->
√xt
 =Çext;

666 
√xt
->
µªv
 = &
n
->next;

667 *(
n
->
µªv
) =Ç;

668 
	}
}

670 
°ölöe
 
	$°_hli°_add_a·î
(
°_hli°_node
 *
n
,

671 
°_hli°_node
 *
√xt
)

673 
√xt
->√xà
n
->next;

674 
n
->
√xt
 =Çext;

675 
√xt
->
µªv
 = &
n
->next;

677 if(
√xt
->next)

678 
√xt
->√xt->
µªv
 = &next->next;

679 
	}
}

682 
°ölöe
 
	$°_hli°_add_Áke
(
°_hli°_node
 *
n
)

684 
n
->
µªv
 = &n->
√xt
;

685 
	}
}

691 
°ölöe
 
	$°_hli°_move_li°
(
°_hli°_hód
 *
ﬁd
,

692 
°_hli°_hód
 *
√w
)

694 
√w
->
fú°
 = 
ﬁd
->first;

695 i‡(
√w
->
fú°
)

696 
√w
->
fú°
->
µªv
 = &new->first;

697 
ﬁd
->
fú°
 = 
NULL
;

698 
	}
}

700 
	#°_hli°_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`°_c⁄èöî_of
’å,ty≥,membî)

	)

702 
	#°_hli°_f‹_óch
(
pos
, 
hód
Ë\

	)

703 
	gpos
 = (
hód
)->
fú°
;Öo†;Öo†
pos
->
√xt
)

705 
	#°_hli°_f‹_óch_ß„
(
pos
, 
n
, 
hód
Ë\

	)

706 
	gpos
 = (
hód
)->
fú°
;Öo†&& ({ 
	gn
 = 
pos
->
√xt
; 1; }); \

707 
	gpos
 = 
n
)

716 
	#°_hli°_f‹_óch_íåy
(
ços
, 
pos
, 
hód
, 
membî
Ë\

	)

717 
	gpos
 = (
hód
)->
fú°
; \

718 
	gpos
 && \

719 ({ 
	gços
 = 
°_hli°_íåy
(
pos
, 
ty≥of
(*
ços
), 
membî
); 1;}); \

720 
	gpos
 = 
pos
->
√xt
)

728 
	#°_hli°_f‹_óch_íåy_c⁄töue
(
ços
, 
pos
, 
membî
Ë\

	)

729 
	gpos
 = (
pos
)->
√xt
; \

730 
	gpos
 && \

731 ({ 
	gços
 = 
°_hli°_íåy
(
pos
, 
ty≥of
(*
ços
), 
membî
); 1;}); \

732 
	gpos
 = 
pos
->
√xt
)

740 
	#°_hli°_f‹_óch_íåy_‰om
(
ços
, 
pos
, 
membî
Ë\

	)

741 ; 
	gpos
 && \

742 ({ 
	gços
 = 
°_hli°_íåy
(
pos
, 
ty≥of
(*
ços
), 
membî
); 1;}); \

743 
	gpos
 = 
pos
->
√xt
)

753 
	#°_hli°_f‹_óch_íåy_ß„
(
ços
, 
pos
, 
n
, 
hód
, 
membî
Ë\

	)

754 
	gpos
 = (
hód
)->
fú°
; \

755 
	gpos
 && ({ 
	gn
 = 
pos
->
√xt
; 1; }) && \

756 ({ 
	gços
 = 
°_hli°_íåy
(
pos
, 
ty≥of
(*
ços
), 
membî
); 1;}); \

757 
	gpos
 = 
n
)

763 
ST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_gtree.h

1 #i‚def 
__ST_GTREE_H__


2 
	#__ST_GTREE_H__


	)

4 
	~"°lib.h
"

6 
	gST_BEGIN_DECLS
;

11 
	mST_IN_ORDER
,

12 
	mST_PRE_ORDER
,

13 
	mST_POST_ORDER
,

14 
	mST_LEVEL_ORDER


15 } 
	tSTGTøvî£Ty≥
;

17 
	s_STGTªeNode


19 
°poöãr
 
	mkey
;

20 
°poöãr
 
	mvÆue
;

21 
_STGTªeNode
 *
	mÀ·
;

22 
_STGTªeNode
 *
	mright
;

23 
°öt8
 
	mbÆ™˚
;

24 
°uöt8
 
	mÀ·_chûd
;

25 
°uöt8
 
	mright_chûd
;

26 }
	tSTGTªeNode
;

28 
	s_STGTªe


30 
STGTªeNode
 *
	mroŸ
;

31 
STCom∑ªD©aFunc
 
	mkey_com∑ª
;

32 
STDe°royNŸify
 
	mkey_de°roy_func
;

33 
STDe°royNŸify
 
	mvÆue_de°roy_func
;

34 
°poöãr
 
	mkey_com∑ª_d©a
;

35 
°uöt
 
	m¬odes
;

36 }
	tSTGTªe
;

38 
	$°boﬁ
 (*
	tSTGTøvî£Func
Ë(
	t°poöãr
 
	tkey
,

39 
	t°poöãr
 
	tvÆue
,

40 
	t°poöãr
 
	td©a
);

45 
STGTªe
* 
	`°_åì_√w
 (
STCom∑ªFunc
 
key_com∑ª_func
);

46 
STGTªe
* 
	`°_åì_√w_wôh_d©a
 (
STCom∑ªD©aFunc
 
key_com∑ª_func
,

47 
°poöãr
 
key_com∑ª_d©a
);

48 
STGTªe
* 
	`°_åì_√w_fuŒ
 (
STCom∑ªD©aFunc
 
key_com∑ª_func
,

49 
°poöãr
 
key_com∑ª_d©a
,

50 
STDe°royNŸify
 
key_de°roy_func
,

51 
STDe°royNŸify
 
vÆue_de°roy_func
);

52 
	`°_åì_de°roy
 (
STGTªe
 *
åì
);

53 
	`°_åì_ö£π
 (
STGTªe
 *
åì
,

54 
°poöãr
 
key
,

55 
°poöãr
 
vÆue
);

56 
	`°_åì_ª∂a˚
 (
STGTªe
 *
åì
,

57 
°poöãr
 
key
,

58 
°poöãr
 
vÆue
);

59 
°boﬁ
 
	`°_åì_ªmove
 (
STGTªe
 *
åì
,

60 
°c⁄°poöãr
 
key
);

61 
°boﬁ
 
	`°_åì_°ól
 (
STGTªe
 *
åì
,

62 
°c⁄°poöãr
 
key
);

63 
°poöãr
 
	`°_åì_lookup
 (
STGTªe
 *
åì
,

64 
°c⁄°poöãr
 
key
);

65 
°boﬁ
 
	`°_åì_lookup_exãnded
 (
STGTªe
 *
åì
,

66 
°c⁄°poöãr
 
lookup_key
,

67 
°poöãr
 *
‹i°_key
,

68 
°poöãr
 *
vÆue
);

69 
	`°_åì_f‹óch
 (
STGTªe
 *
åì
,

70 
STGTøvî£Func
 
func
,

71 
°poöãr
 
u£r_d©a
);

74 
	`°_åì_åavî£
 (
STGTªe
 *
åì
,

75 
STGTøvî£Func
 
åavî£_func
,

76 
STGTøvî£Ty≥
 
åavî£_ty≥
,

77 
°poöãr
 
u£r_d©a
);

80 
°poöãr
 
	`°_åì_£¨ch
 (
STGTªe
 *
åì
,

81 
STCom∑ªFunc
 
£¨ch_func
,

82 
°c⁄°poöãr
 
u£r_d©a
);

83 
°öt
 
	`°_åì_height
 (
STGTªe
 *
åì
);

84 
°öt
 
	`°_åì_¬odes
 (
STGTªe
 *
åì
);

86 
ST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_hash.h

	@/media/programs/workdir/stlib/trunk/include/st_huffmantree.h

	@/media/programs/workdir/stlib/trunk/include/st_log.h

1 #i‚def 
__ST_LOG_H__


2 
	#__ST_LOG_H__


	)

4 
	~"°lib.h
"

6 
	gST_BEGIN_DECLS
;

8 
	#ST_DEBUG_LEVEL_GATE
 4

	)

10 
	#ST_DEBUG_LEVEL_NOCHECK
 0

	)

11 
	#ST_DEBUG_LEVEL_CHECK_ALL
 1

	)

12 
	#ST_DEBUG_LEVEL_LOG_ERRORS
 2

	)

13 
	#ST_DEBUG_LEVEL_LOG_WARNINGS
 3

	)

14 
	#ST_DEBUG_LEVEL_LOG_ALL
 4

	)

17 #if(
ST_DEBUG_LEVEL_GATE
 == 0)

19 #ñif(
ST_DEBUG_LEVEL_GATE
 == 1)

20 
	#__ERR


	)

21 
	#__ASSERT


	)

22 #ñif(
ST_DEBUG_LEVEL_GATE
 == 2)

23 
	#__ERR


	)

24 
	#__ASSERT


	)

25 #ñif(
ST_DEBUG_LEVEL_GATE
 == 3)

26 
	#__ERR


	)

27 
	#__ASSERT


	)

28 
	#__WRN


	)

29 #ñif(
ST_DEBUG_LEVEL_GATE
 == 4)

30 
	#__ERR


	)

31 
	#__ASSERT


	)

32 
	#__WRN


	)

33 
	#__MSG


	)

34 
	#__HERE


	)

35 
	#__INF


	)

36 
	#__LOG


	)

39 #i‡
deföed
(
WIN32
)

42 #ifde‡
__ASSERT


43 
	#__a°
(
c⁄dôi⁄
Ë(if(!c⁄dôi⁄Ë\

	)

44 
Ârötf
(
°dîr
, "AST:L%d(%s): c⁄dôi⁄Éº!", 
__LINE__
, 
__FILE__
), 
	$exô
( 1 ) )

46 
	#__a°
(
c⁄dôi⁄
)

	)

49 #ifde‡
__MSG


50 
	#__msg
 
¥ötf


	)

53 #ifde‡
__ERR


54 
	#__îr
 
¥ötf


	)

57 #ifde‡
__ERR


58 
	#__w∫
 
¥ötf


	)

61 #ifde‡
__HERE


62 
	#__hîe__


	)

63 
	#__waô__


	)

66 #ifde‡
__INF


67 
	#__öf
 
¥ötf


	)

77 #ifde‡
__ASSERT


78 
	#__a°
(
c⁄dôi⁄
Ë(if(!c⁄dôi⁄Ë\

	)

79 
	`Ârötf
(
°dîr
, "AST:L%d(%s): c⁄dôi⁄Éº!", 
__LINE__
, 
__FILE__
), 
	$exô
( 1 ) )

81 
	#__a°
(
c⁄dôi⁄
)

	)

84 #ifde‡
__MSG


85 
	#__msg
(...Ë(
	`Ârötf
(
°dîr
, "MSG:L%d(%s):", 
__LINE__
, 
__FILE__
), \

	)

86 
	$Ârötf
(
°dîr
, 
__VA_ARGS__
) )

88 
	#__msg
(...)

	)

91 #ifde‡
__ERR


92 
	#__îr
(...Ë(
	`Ârötf
(
°dîr
, "ERR:L%d(%s):", 
__LINE__
, 
__FILE__
), \

	)

93 
	`Ârötf
(
°dîr
, 
__VA_ARGS__
), 
	$exô
( 1 ))

95 
	#__îr
(...)

	)

98 #ifde‡
__WRN


99 
	#__w∫
(...Ë(
	`Ârötf
(
°dîr
, "WRN:L%d(%s):", 
__LINE__
, 
__FILE__
), \

	)

100 
	$Ârötf
(
°dîr
, 
__VA_ARGS__
) )

102 
	#__w∫
(...)

	)

105 #ifde‡
__HERE


106 
	#__hîe__
 
	`Ârötf
(
°dîr
, "@L%d(%s)\n", 
__LINE__
, 
__FILE__
);

	)

107 
	#__waô__
 (
	`Ârötf
(
°dîr
, "@L%d(%s)’ªs†™y key:\n", 
__LINE__
, 
__FILE__
), \

	)

108 
	$__gëc
())

110 
	#__hîe__


	)

111 
	#__waô__


	)

115 #ifde‡
__INF


116 
	#__öf
(...Ë
	`Ârötf
(
°dîr
, 
__VA_ARGS__
)

	)

118 
	#__öf
(...)

	)

124 #ifde‡
__LOG


125 
	#__log
(
a
Ë
°_exã∫Æ_log
 
	)
a

127 
	#__log
(
a
)

	)

131 
ST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_qsort.h

1 #i‚def 
__ST_QSORT_H__


2 
	#__ST_QSORT_H__


	)

3 
	gST_BEGIN_DECLS
;

5 
	~"°lib.h
"

7 
°_qs‹t_wôh_d©a
 (
°c⁄°poöãr
 
pba£
,

8 
°öt
 
tŸÆ_ñems
,

9 
°uöt32
 
size
,

10 
STCom∑ªD©aFunc
 
com∑ª_func
,

11 
°poöãr
 
u£r_d©a
);

15 
	gST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_quene.h

1 #i‚def 
__ST_QUEUE_H__


2 
	#__ST_QUEUE_H__


	)

4 
	gST_BEGIN_DECLS
;

6 
	~"°lib.h
"

7 
	~"°_dli°.h
"

8 
	~"°_log.h
"

12 
	s_STQueue


14 
STDLIST
 *
	mhód
;

15 
STDLIST
 *
	mèû
;

16 
°uöt
 
	mÀngth
;

17 }
	tSTQueue
;

20 
	#ST_QUEUE_INIT
 { 
NULL
, NULL, 0 }

	)

26 
STQueue
* 
°_queue_√w
() ;

27 
°_queue_‰ì
(
STQueue
 *
queue
) ;

28 
°_queue_öô
(
STQueue
 *
queue
) ;

29 
°_queue_˛ór
(
STQueue
 *
queue
);

30 
°boﬁ
 
°_queue_is_em±y
(
STQueue
 *
queue
) ;

31 
°uöt
 
°_queue_gë_Àngth
(
STQueue
 *
queue
);

32 
°_queue_ªvî£
(
STQueue
 *
queue
);

33 
STQueue
* 
°_queue_c›y
(STQueuê*
queue
);

34 
°_queue_f‹óch
(
STQueue
 *
queue
,

35 
STFunc
 
func
,

36 
°poöãr
 
u£r_d©a
);

37 
STDLIST
* 
°_queue_föd
(
STQueue
 *
queue
,

38 
°c⁄°poöãr
 
d©a
);

39 
STDLIST
* 
°_queue_föd_cu°om
(
STQueue
 *
queue
,

40 
°c⁄°poöãr
 
d©a
,

41 
STCom∑ªFunc
 
func
);

42 
°_queue_s‹t
(
STQueue
 *
queue
,

43 
STCom∑ªD©aFunc
 
com∑ª_func
,

44 
°poöãr
 
u£r_d©a
);

46 
°_queue_push_hód
(
STQueue
 *
queue
,

47 
°poöãr
 
d©a
);

48 
°_queue_push_èû
(
STQueue
 *
queue
,

49 
°poöãr
 
d©a
);

50 
°_queue_push_¡h
(
STQueue
 *
queue
,

51 
°poöãr
 
d©a
,

52 
°öt
 
n
);

53 
°poöãr
 
°_queue_p›_hód
(
STQueue
 *
queue
);

54 
°poöãr
 
°_queue_p›_èû
(
STQueue
 *
queue
);

55 
°poöãr
 
°_queue_p›_¡h
(
STQueue
 *
queue
,

56 
°uöt
 
n
);

57 
°poöãr
 
°_queue_≥ek_hód
(
STQueue
 *
queue
);

58 
°poöãr
 
°_queue_≥ek_èû
(
STQueue
 *
queue
);

59 
°poöãr
 
°_queue_≥ek_¡h
(
STQueue
 *
queue
,

60 
°uöt
 
n
);

61 
°öt
 
°_queue_ödex
(
STQueue
 *
queue
,

62 
°c⁄°poöãr
 
d©a
);

63 
°_queue_ªmove
(
STQueue
 *
queue
,

64 
°c⁄°poöãr
 
d©a
);

65 
°_queue_ªmove_Æl
(
STQueue
 *
queue
,

66 
°c⁄°poöãr
 
d©a
);

67 
°_queue_ö£π_bef‹e
(
STQueue
 *
queue
,

68 
STDLIST
 *
siblög
,

69 
°poöãr
 
d©a
);

70 
°_queue_ö£π_a·î
(
STQueue
 *
queue
,

71 
STDLIST
 *
siblög
,

72 
°poöãr
 
d©a
);

73 
°_queue_ö£π_s‹ãd
(
STQueue
 *
queue
,

74 
°poöãr
 
d©a
,

75 
STCom∑ªD©aFunc
 
func
,

76 
°poöãr
 
u£r_d©a
);

78 
°_queue_push_hód_lök
(
STQueue
 *
queue
,

79 
STDLIST
 *
lök_
);

80 
°_queue_push_èû_lök
(
STQueue
 *
queue
,

81 
STDLIST
 *
lök_
);

82 
°_queue_push_¡h_lök
(
STQueue
 *
queue
,

83 
°öt
 
n
,

84 
STDLIST
 *
lök_
);

85 
STDLIST
* 
°_queue_p›_hód_lök
(
STQueue
 *
queue
);

86 
STDLIST
* 
°_queue_p›_èû_lök
(
STQueue
 *
queue
);

87 
STDLIST
* 
°_queue_p›_¡h_lök
(
STQueue
 *
queue
,

88 
°uöt
 
n
);

89 
STDLIST
* 
°_queue_≥ek_hód_lök
(
STQueue
 *
queue
);

90 
STDLIST
* 
°_queue_≥ek_èû_lök
(
STQueue
 *
queue
);

91 
STDLIST
* 
°_queue_≥ek_¡h_lök
(
STQueue
 *
queue
,

92 
°uöt
 
n
);

93 
°öt
 
°_queue_lök_ödex
(
STQueue
 *
queue
,

94 
STDLIST
 *
lök_
);

95 
°_queue_u∆ök
(
STQueue
 *
queue
,

96 
STDLIST
 *
lök_
);

97 
°_queue_dñëe_lök
(
STQueue
 *
queue
,

98 
STDLIST
 *
lök_
);

104 
	#isDy«mic
 1

	)

106 
	#MAXSIZE
 10

	)

108 
	s_STQueueA


110 #if 
isDy«mic


111 
°öt
* 
	mpD©a
 ;

113 
°öt
 
	mpD©a
[
MAXSIZE
];

115 
°öt
 
	m‰⁄t
, 
	mª¨
, 
	mÀngth
 ;

116 
°öt
 
	mmaxSize
 ;

117 }
	tSTQueueA
 ;

119 
STQueueA
* 
°_¨øy_queue_√w
();

120 
°_¨øy_queue_‰ì
(
STQueueA
* 
queue
);

121 #if 
isDy«mic


122 
°_¨øy_queue_dy«mic_öô
(
STQueueA
* 
queue
, 
°öt
 
maxSize
);

123 
°_¨øy_queue_dy«mic_dñëe
(
STQueueA
* 
queue
);

125 
°_¨øy_queue_öô
(
STQueueA
* 
queue
) ;

126 
°_¨øy_queue_dñëe
(
STQueueA
* 
queue
);

128 
°_¨øy_queue_˛ór
(
STQueueA
* 
queue
);

129 
°öt
 
°_¨øy_queue_em±y
(
STQueueA
* 
queue
);

130 
°öt
 
°_¨øy_queue_≥ek
(
STQueueA
* 
queue
);

132 
°öt
 
°_¨øy_queue_push
(
STQueueA
* 
queue
, stöà
d©a
) ;

133 
°öt
 
°_¨øy_queue_p›
(
STQueueA
* 
queue
);

134 
°_¨øy_queue_dump
(
STQueueA
* 
queue
);

141 
	gST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_rbtree.h

1 #i‚def 
__ST_RBTREE_H__


2 
	#__ST_RBTREE_H__


	)

4 
	~"°lib.h
"

13 
	gST_BEGIN_DECLS
;

15 
	#INFINITY
 (~(1 << 31))

	)

16 
	#NEGATIVE_INFINITY
 (1 << 31)

	)

20 
	ecﬁ‹Ty≥
 {
	mRed
, 
	mBœck
} 
	tCﬁ‹Ty≥
 ;

21 
°öt
 
	tRBIãm
 ;

22 
	s_RBNode


24 
RBIãm
 
	môem
 ;

25 
_RBNode
 * 
	mÀ·
, * 
	mright
 ;

26 
Cﬁ‹Ty≥
 
	mcﬁ‹
 ;

27 } 
	tRBNode
 ;

28 
	s_RBTªe


30 
RBNode
 * 
	mroŸ
 ;

31 
°öt
 
	mcuºít
 ;

32 }
	tRBTªe
, *
	tpRBTªe
 ;

36 
RBNode
 * 
	gRBNuŒNode
 = 
NULL
 ;

37 
RBNode
 * 
	gCuºít
, * 
	gSiblög
, * 
	gP¨ít
, * 
	gGrP¨ít
, * 
	gGrGrP¨ít
 ;

45 
°boﬁ
 
°_rbåì_¸óã
 (
pRBTªe
 * c⁄° 
¥bt
) ;

51 
°boﬁ
 
°_rbåì_em±y
 (c⁄° 
pRBTªe
 * c⁄° 
¥bt
) ;

57 
°boﬁ
 
°_rbåì_ö£π
 (
pRBTªe
 * c⁄° 
¥bt
, c⁄° 
RBIãm
 
ôem
) ;

63 
°boﬁ
 
°_rbåì_dñëe
 (
pRBTªe
 * c⁄° 
¥bt
, c⁄° 
RBIãm
 
ôem
) ;

69 
°_rbåì_åavî£
 (c⁄° 
pRBTªe
 * c⁄° 
¥bt
, (* 
pfun
Ë(c⁄° 
RBNode
 * c⁄° 
≤
)) ;

75 
	`°_rbåì_ªÀa£
 (c⁄° 
pRBTªe
 * c⁄° 
¥bt
) ;

79 
°öt
 
	tRBKey_t
;

80 
°öt
 
	td©a_t
;

82 
	ecﬁ‹_t


84 
RED
 = 0,

85 
BLACK
 = 1

86 }
	tcﬁ‹_t
;

88 
	srb_node_t


90 
rb_node_t
 *
À·
, *
right
, *
∑ª¡
;

91 
RBKey_t
 
key
;

92 
d©a_t
 
d©a
;

93 
cﬁ‹_t
 
cﬁ‹
;

94 }
	trb_node_t
;

98 
rb_node_t
* 
	`°_rbt_ö£π
(
RBKey_t
 
key
, 
d©a_t
 
d©a
,Ñb_node_t* 
roŸ
);

100 
rb_node_t
* 
	`°_rbt_£¨ch
(
RBKey_t
 
key
,Ñb_node_t* 
roŸ
);

102 
rb_node_t
* 
	`°_rbt_îa£
(
RBKey_t
 
key
,Ñb_node_t* 
roŸ
);

104 
	`rb_åavî£
(
rb_node_t
* 
roŸ
);

109 
ST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_rbtree_bsd.h

1 #i‚def 
__ST_RBTREE_BSD_H__


2 
	#__ST_RBTREE_BSD_H__


	)

4 
	gST_BEGIN_DECLS
;

6 
	#rb_node
(
a_ty≥
) \

8 
a_ty≥
 *
rbn_À·
; \

9 
a_ty≥
 *
rbn_right_ªd
; \

10 }

	)

13 
	#rb_åì
(
a_ty≥
) \

15 
a_ty≥
 *
rbt_roŸ
; \

16 
a_ty≥
 
rbt_nû
; \

17 }

	)

21 
	#rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
a_node
) \

22 ((
a_node
)->
a_fõld
.
rbn_À·
)

	)

23 
	#rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
a_node
, 
a_À·
) do { \

24 (
a_node
)->
a_fõld
.
rbn_À·
 = 
a_À·
; \

25 } 0)

	)

28 
	#rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
a_node
) \

29 ((
a_ty≥
 *Ë(((
öçå_t
Ë(
a_node
)->
a_fõld
.
rbn_right_ªd
) \

30 & ((
ssize_t
)-2)))

	)

31 
	#rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
a_node
, 
a_right
) do { \

32 (
a_node
)->
a_fõld
.
rbn_right_ªd
 = (
a_ty≥
 *Ë(((
uöçå_t
Ë
a_right
) \

33 | (((
uöçå_t
Ë(
a_node
)->
a_fõld
.
rbn_right_ªd
Ë& ((
size_t
)1))); \

34 

	)

37 
	#rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
a_node
) \

38 ((
boﬁ
Ë(((
uöçå_t
Ë(
a_node
)->
a_fõld
.
rbn_right_ªd
) \

39 & ((
size_t
)1)))

	)

40 
	#rbp_cﬁ‹_£t
(
a_ty≥
, 
a_fõld
, 
a_node
, 
a_ªd
) do { \

41 (
a_node
)->
a_fõld
.
rbn_right_ªd
 = (
a_ty≥
 *Ë((((
öçå_t
) \

42 (
a_node
)->
a_fõld
.
rbn_right_ªd
Ë& ((
ssize_t
)-2)) \

43 | ((
ssize_t
)
a_ªd
)); \

44 } 0)

	)

45 
	#rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, 
a_node
) do { \

46 (
a_node
)->
a_fõld
.
rbn_right_ªd
 = (
a_ty≥
 *Ë(((
uöçå_t
) \

47 (
a_node
)->
a_fõld
.
rbn_right_ªd
Ë| ((
size_t
)1)); \

48 } 0)

	)

49 
	#rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, 
a_node
) do { \

50 (
a_node
)->
a_fõld
.
rbn_right_ªd
 = (
a_ty≥
 *Ë(((
öçå_t
) \

51 (
a_node
)->
a_fõld
.
rbn_right_ªd
Ë& ((
ssize_t
)-2)); \

52 } 0)

	)

56 
	#rbp_node_√w
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
a_node
) do { \

57 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, (
a_node
), &(
a_åì
)->
rbt_nû
); \

58 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, (
a_node
), &(
a_åì
)->
rbt_nû
); \

59 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

60 } 0)

	)

63 
	#rbp_bœck_height
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
r_height
) do { \

64 
a_ty≥
 *
rbp_bh_t
; \

65 
rbp_bh_t
 = (
a_åì
)->
rbt_roŸ
, (
r_height
) = 0; \

66 
rbp_bh_t
 !&(
a_åì
)->
rbt_nû
; \

67 
rbp_bh_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
,Ñbp_bh_t)) { \

68 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_bh_t
Ë=
Ál£
) { \

69 (
r_height
)++; \

72 } 0)

	)

74 
	#rbp_fú°
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
a_roŸ
, 
r_node
) do { \

75 (
r_node
Ë(
a_roŸ
); \

76 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, (
r_node
)Ë!&(
a_åì
)->
rbt_nû
; \

77 (
r_node
Ë
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, (r_node))) { \

79 } 0)

	)

81 
	#rbp_œ°
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
a_roŸ
, 
r_node
) do { \

82 (
r_node
Ë(
a_roŸ
); \

83 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, (
r_node
)Ë!&(
a_åì
)->
rbt_nû
; \

84 (
r_node
Ë
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, (r_node))) { \

86 } 0)

	)

88 
	#rbp_√xt
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_node
, 
r_node
) do { \

89 i‡(
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)) \

90 !&(
a_åì
)->
rbt_nû
) { \

91 
	`rbp_fú°
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
	`rbp_right_gë
(a_type, \

92 
a_fõld
, (
a_node
)), (
r_node
)); \

94 
a_ty≥
 *
rbp_n_t
 = (
a_åì
)->
rbt_roŸ
; \

95 
	`as£π
(
rbp_n_t
 !&(
a_åì
)->
rbt_nû
); \

96 (
r_node
Ë&(
a_åì
)->
rbt_nû
; \

97 
åue
) { \

98 
rbp_n_cmp
 = (
a_cmp
)((
a_node
), 
rbp_n_t
); \

99 i‡(
rbp_n_cmp
 < 0) { \

100 (
r_node
Ë
rbp_n_t
; \

101 
rbp_n_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
,Ñbp_n_t); \

102 } i‡(
rbp_n_cmp
 > 0) { \

103 
rbp_n_t
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
,Ñbp_n_t); \

107 
	`as£π
(
rbp_n_t
 !&(
a_åì
)->
rbt_nû
); \

110 } 0)

	)

113 
	#rbp_¥ev
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_node
, 
r_node
) do { \

114 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)Ë!&(
a_åì
)->
rbt_nû
) { \

115 
	`rbp_œ°
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
	`rbp_À·_gë
(a_type, \

116 
a_fõld
, (
a_node
)), (
r_node
)); \

118 
a_ty≥
 *
rbp_p_t
 = (
a_åì
)->
rbt_roŸ
; \

119 
	`as£π
(
rbp_p_t
 !&(
a_åì
)->
rbt_nû
); \

120 (
r_node
Ë&(
a_åì
)->
rbt_nû
; \

121 
åue
) { \

122 
rbp_p_cmp
 = (
a_cmp
)((
a_node
), 
rbp_p_t
); \

123 i‡(
rbp_p_cmp
 < 0) { \

124 
rbp_p_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
,Ñbp_p_t); \

125 } i‡(
rbp_p_cmp
 > 0) { \

126 (
r_node
Ë
rbp_p_t
; \

127 
rbp_p_t
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
,Ñbp_p_t); \

131 
	`as£π
(
rbp_p_t
 !&(
a_åì
)->
rbt_nû
); \

134 } 0)

	)

137 
	#rb_fú°
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
r_node
) do { \

138 
	`rbp_fú°
(
a_ty≥
, 
a_fõld
, 
a_åì
, (a_åì)->
rbt_roŸ
, (
r_node
)); \

139 i‡((
r_node
Ë=&(
a_åì
)->
rbt_nû
) { \

140 (
r_node
Ë
NULL
; \

142 } 0)

	)

144 
	#rb_œ°
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
r_node
) do { \

145 
	`rbp_œ°
(
a_ty≥
, 
a_fõld
, 
a_åì
, (a_åì)->
rbt_roŸ
, 
r_node
); \

146 i‡((
r_node
Ë=&(
a_åì
)->
rbt_nû
) { \

147 (
r_node
Ë
NULL
; \

149 } 0)

	)

151 
	#rb_√xt
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_node
, 
r_node
) do { \

152 
	`rbp_√xt
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, (
a_node
), (
r_node
)); \

153 i‡((
r_node
Ë=&(
a_åì
)->
rbt_nû
) { \

154 (
r_node
Ë
NULL
; \

156 } 0)

	)

158 
	#rb_¥ev
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_node
, 
r_node
) do { \

159 
	`rbp_¥ev
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, (
a_node
), (
r_node
)); \

160 i‡((
r_node
Ë=&(
a_åì
)->
rbt_nû
) { \

161 (
r_node
Ë
NULL
; \

163 } 0)

	)

165 
	#rb_£¨ch
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_key
, 
r_node
) do { \

166 
rbp_£_cmp
; \

167 (
r_node
Ë(
a_åì
)->
rbt_roŸ
; \

168 (
r_node
Ë!&(
a_åì
)->
rbt_nû
 \

169 && (
rbp_£_cmp
 = (
a_cmp
)((
a_key
), (
r_node
))) != 0) { \

170 i‡(
rbp_£_cmp
 < 0) { \

171 (
r_node
Ë
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, (r_node)); \

173 (
r_node
Ë
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, (r_node)); \

176 i‡((
r_node
Ë=&(
a_åì
)->
rbt_nû
) { \

177 (
r_node
Ë
NULL
; \

179 } 0)

	)

185 
	#rb_n£¨ch
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_key
, 
r_node
) do { \

186 
a_ty≥
 *
rbp_ns_t
 = (
a_åì
)->
rbt_roŸ
; \

187 (
r_node
Ë
NULL
; \

188 
rbp_ns_t
 !&(
a_åì
)->
rbt_nû
) { \

189 
rbp_ns_cmp
 = (
a_cmp
)((
a_key
), 
rbp_ns_t
); \

190 i‡(
rbp_ns_cmp
 < 0) { \

191 (
r_node
Ë
rbp_ns_t
; \

192 
rbp_ns_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
,Ñbp_ns_t); \

193 } i‡(
rbp_ns_cmp
 > 0) { \

194 
rbp_ns_t
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
,Ñbp_ns_t); \

196 (
r_node
Ë
rbp_ns_t
; \

200 } 0)

	)

206 
	#rb_p£¨ch
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_key
, 
r_node
) do { \

207 
a_ty≥
 *
rbp_ps_t
 = (
a_åì
)->
rbt_roŸ
; \

208 (
r_node
Ë
NULL
; \

209 
rbp_ps_t
 !&(
a_åì
)->
rbt_nû
) { \

210 
rbp_ps_cmp
 = (
a_cmp
)((
a_key
), 
rbp_ps_t
); \

211 i‡(
rbp_ps_cmp
 < 0) { \

212 
rbp_ps_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
,Ñbp_ps_t); \

213 } i‡(
rbp_ps_cmp
 > 0) { \

214 (
r_node
Ë
rbp_ps_t
; \

215 
rbp_ps_t
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
,Ñbp_ps_t); \

217 (
r_node
Ë
rbp_ps_t
; \

221 } 0)

	)

223 
	#rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, 
a_node
, 
r_node
) do { \

224 (
r_node
Ë
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

225 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, (
a_node
), \

226 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, (
r_node
))); \

227 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, (
r_node
), (
a_node
)); \

228 } 0)

	)

230 
	#rbp_rŸ©e_right
(
a_ty≥
, 
a_fõld
, 
a_node
, 
r_node
) do { \

231 (
r_node
Ë
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

232 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, (
a_node
), \

233 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, (
r_node
))); \

234 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, (
r_node
), (
a_node
)); \

235 } 0)

	)

237 
	#rbp_À™_À·
(
a_ty≥
, 
a_fõld
, 
a_node
, 
r_node
) do { \

238 
boﬁ
 
rbp_Œ_ªd
; \

239 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, (
a_node
), (
r_node
)); \

240 
rbp_Œ_ªd
 = 
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

241 
	`rbp_cﬁ‹_£t
(
a_ty≥
, 
a_fõld
, (
r_node
), 
rbp_Œ_ªd
); \

242 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

243 } 0)

	)

245 
	#rbp_À™_right
(
a_ty≥
, 
a_fõld
, 
a_node
, 
r_node
) do { \

246 
boﬁ
 
rbp_Ã_ªd
; \

247 
	`rbp_rŸ©e_right
(
a_ty≥
, 
a_fõld
, (
a_node
), (
r_node
)); \

248 
rbp_Ã_ªd
 = 
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

249 
	`rbp_cﬁ‹_£t
(
a_ty≥
, 
a_fõld
, (
r_node
), 
rbp_Ã_ªd
); \

250 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

251 } 0)

	)

253 
	#rbp_move_ªd_À·
(
a_ty≥
, 
a_fõld
, 
a_node
, 
r_node
) do { \

254 
a_ty≥
 *
rbp_mæ_t
, *
rbp_mæ_u
; \

255 
rbp_mæ_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

256 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, 
rbp_mæ_t
); \

257 
rbp_mæ_t
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

258 
rbp_mæ_u
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_mæ_t
); \

259 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_mæ_u
)) { \

260 
	`rbp_rŸ©e_right
(
a_ty≥
, 
a_fõld
, 
rbp_mæ_t
, 
rbp_mæ_u
); \

261 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, (
a_node
), 
rbp_mæ_u
); \

262 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, (
a_node
), (
r_node
)); \

263 
rbp_mæ_t
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

264 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_mæ_t
)) { \

265 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, 
rbp_mæ_t
); \

266 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

267 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, (
a_node
), 
rbp_mæ_t
); \

268 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, (
r_node
), 
rbp_mæ_t
); \

270 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

273 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

274 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, (
a_node
), (
r_node
)); \

276 } 0)

	)

278 
	#rbp_move_ªd_right
(
a_ty≥
, 
a_fõld
, 
a_node
, 
r_node
) do { \

279 
a_ty≥
 *
rbp_mº_t
; \

280 
rbp_mº_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

281 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_mº_t
)) { \

282 
a_ty≥
 *
rbp_mº_u
, *
rbp_mº_v
; \

283 
rbp_mº_u
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
rbp_mº_t
); \

284 
rbp_mº_v
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_mº_u
); \

285 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_mº_v
)) { \

286 
	`rbp_cﬁ‹_£t
(
a_ty≥
, 
a_fõld
, 
rbp_mº_u
, \

287 
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, (
a_node
))); \

288 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, 
rbp_mº_v
); \

289 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, 
rbp_mº_t
, 
rbp_mº_u
); \

290 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, (
a_node
), 
rbp_mº_u
); \

291 
	`rbp_rŸ©e_right
(
a_ty≥
, 
a_fõld
, (
a_node
), (
r_node
)); \

292 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, (
a_node
), 
rbp_mº_t
); \

293 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, (
r_node
), 
rbp_mº_t
); \

295 
	`rbp_cﬁ‹_£t
(
a_ty≥
, 
a_fõld
, 
rbp_mº_t
, \

296 
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, (
a_node
))); \

297 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, 
rbp_mº_u
); \

298 
	`rbp_rŸ©e_right
(
a_ty≥
, 
a_fõld
, (
a_node
), (
r_node
)); \

299 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, (
a_node
), 
rbp_mº_t
); \

300 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, (
r_node
), 
rbp_mº_t
); \

302 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, (
a_node
)); \

304 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, 
rbp_mº_t
); \

305 
rbp_mº_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
,Ñbp_mrr_t); \

306 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_mº_t
)) { \

307 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, 
rbp_mº_t
); \

308 
	`rbp_rŸ©e_right
(
a_ty≥
, 
a_fõld
, (
a_node
), (
r_node
)); \

309 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, (
a_node
), 
rbp_mº_t
); \

310 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, (
r_node
), 
rbp_mº_t
); \

312 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, (
a_node
), (
r_node
)); \

315 } 0)

	)

317 
	#rb_ö£π
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_node
) do { \

318 
a_ty≥
 
rbp_i_s
; \

319 
a_ty≥
 *
rbp_i_g
, *
rbp_i_p
, *
rbp_i_c
, *
rbp_i_t
, *
rbp_i_u
; \

320 
rbp_i_cmp
 = 0; \

321 
rbp_i_g
 = &(
a_åì
)->
rbt_nû
; \

322 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, &
rbp_i_s
, (
a_åì
)->
rbt_roŸ
); \

323 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, &
rbp_i_s
, &(
a_åì
)->
rbt_nû
); \

324 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, &
rbp_i_s
); \

325 
rbp_i_p
 = &
rbp_i_s
; \

326 
rbp_i_c
 = (
a_åì
)->
rbt_roŸ
; \

331 
rbp_i_c
 !&(
a_åì
)->
rbt_nû
) { \

332 
rbp_i_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_c
); \

333 
rbp_i_u
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_t
); \

334 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_t
) \

335 && 
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_u
)) { \

341 
	`rbp_rŸ©e_right
(
a_ty≥
, 
a_fõld
, 
rbp_i_c
, 
rbp_i_t
); \

343 
rbp_i_u
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_t
); \

344 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, 
rbp_i_u
); \

345 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
Ë=
rbp_i_c
) { \

346 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
, 
rbp_i_t
); \

347 
rbp_i_c
 = 
rbp_i_t
; \

352 
	`as£π
(
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
) \

353 =
rbp_i_c
); \

354 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
, 
rbp_i_t
); \

355 
	`rbp_À™_À·
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
, 
rbp_i_u
); \

356 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_g
Ë=
rbp_i_p
) { \

357 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_i_g
, 
rbp_i_u
); \

359 
	`as£π
(
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_g
) \

360 =
rbp_i_p
); \

361 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_i_g
, 
rbp_i_u
); \

363 
rbp_i_p
 = 
rbp_i_u
; \

364 
rbp_i_cmp
 = (
a_cmp
)((
a_node
), 
rbp_i_p
); \

365 i‡(
rbp_i_cmp
 < 0) { \

366 
rbp_i_c
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
); \

368 
	`as£π
(
rbp_i_cmp
 > 0); \

369 
rbp_i_c
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
); \

374 
rbp_i_g
 = 
rbp_i_p
; \

375 
rbp_i_p
 = 
rbp_i_c
; \

376 
rbp_i_cmp
 = (
a_cmp
)((
a_node
), 
rbp_i_c
); \

377 i‡(
rbp_i_cmp
 < 0) { \

378 
rbp_i_c
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
,Ñbp_i_c); \

380 
	`as£π
(
rbp_i_cmp
 > 0); \

381 
rbp_i_c
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
,Ñbp_i_c); \

385 
	`rbp_node_√w
(
a_ty≥
, 
a_fõld
, 
a_åì
, (
a_node
)); \

386 i‡(
rbp_i_cmp
 > 0) { \

387 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
, (
a_node
)); \

388 
	`rbp_À™_À·
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
, 
rbp_i_t
); \

389 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_g
Ë=
rbp_i_p
) { \

390 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_i_g
, 
rbp_i_t
); \

391 } i‡(
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
rbp_i_g
Ë=
rbp_i_p
) { \

392 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_i_g
, 
rbp_i_t
); \

395 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_i_p
, (
a_node
)); \

398 (
a_åì
)->
rbt_roŸ
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, &
rbp_i_s
); \

399 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, (
a_åì
)->
rbt_roŸ
); \

400 } 0)

	)

403 
	#rb_ªmove
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_node
) do { \

404 
a_ty≥
 
rbp_r_s
; \

405 
a_ty≥
 *
rbp_r_p
, *
rbp_r_c
, *
rbp_r_xp
, *
rbp_r_t
, *
rbp_r_u
; \

406 
rbp_r_cmp
; \

407 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, &
rbp_r_s
, (
a_åì
)->
rbt_roŸ
); \

408 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, &
rbp_r_s
, &(
a_åì
)->
rbt_nû
); \

409 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, &
rbp_r_s
); \

410 
rbp_r_p
 = &
rbp_r_s
; \

411 
rbp_r_c
 = (
a_åì
)->
rbt_roŸ
; \

412 
rbp_r_xp
 = &(
a_åì
)->
rbt_nû
; \

418 
rbp_r_cmp
 = (
a_cmp
)((
a_node
), 
rbp_r_c
); \

419 i‡(
rbp_r_cmp
 < 0) { \

420 
rbp_r_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
); \

421 
rbp_r_u
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
); \

422 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
Ë=
Ál£
 \

423 && 
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_u
Ë=
Ál£
) { \

425 
	`rbp_move_ªd_À·
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, 
rbp_r_t
); \

426 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
); \

427 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, 
rbp_r_t
); \

428 
rbp_r_c
 = 
rbp_r_t
; \

431 
rbp_r_p
 = 
rbp_r_c
; \

432 
rbp_r_c
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
,Ñbp_r_c); \

435 i‡(
rbp_r_cmp
 == 0) { \

436 
	`as£π
((
a_node
Ë=
rbp_r_c
); \

437 i‡(
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
) \

438 =&(
a_åì
)->
rbt_nû
) { \

440 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
) \

441 !&(
a_åì
)->
rbt_nû
) { \

442 
	`rbp_À™_right
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, 
rbp_r_t
); \

443 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
, \

444 &(
a_åì
)->
rbt_nû
); \

446 
rbp_r_t
 = &(
a_åì
)->
rbt_nû
; \

448 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, 
rbp_r_t
); \

454 
rbp_r_xp
 = 
rbp_r_p
; \

455 
rbp_r_cmp
 = 1; \

458 i‡(
rbp_r_cmp
 == 1) { \

459 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
	`rbp_À·_gë
(a_type, \

460 
a_fõld
, 
	`rbp_right_gë
(
a_ty≥
,á_fõld, 
rbp_r_c
))) \

461 =
Ál£
) { \

462 
rbp_r_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
); \

463 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
)) { \

465 
	`rbp_move_ªd_right
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

466 
rbp_r_t
); \

469 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
); \

470 
rbp_r_u
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
); \

471 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_u
)) { \

472 
	`rbp_bœck_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_u
); \

473 
	`rbp_rŸ©e_right
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

474 
rbp_r_t
); \

475 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

476 
rbp_r_u
); \

477 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
, \

478 
rbp_r_u
); \

480 
	`rbp_ªd_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
); \

481 
	`rbp_rŸ©e_À·
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

482 
rbp_r_t
); \

485 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, 
rbp_r_t
); \

486 
rbp_r_c
 = 
rbp_r_t
; \

489 
rbp_r_p
 = 
rbp_r_c
; \

490 
rbp_r_c
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
,Ñbp_r_c); \

494 i‡(
rbp_r_cmp
 != 0) { \

495 
åue
) { \

496 
	`as£π
(
rbp_r_p
 !&(
a_åì
)->
rbt_nû
); \

497 
rbp_r_cmp
 = (
a_cmp
)((
a_node
), 
rbp_r_c
); \

498 i‡(
rbp_r_cmp
 < 0) { \

499 
rbp_r_t
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
); \

500 i‡(
rbp_r_t
 =&(
a_åì
)->
rbt_nû
) { \

504 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_xp
) \

505 =(
a_node
)) { \

506 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_xp
, \

507 
rbp_r_c
); \

509 
	`as£π
(
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, \

510 
rbp_r_xp
Ë=(
a_node
)); \

511 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_xp
, \

512 
rbp_r_c
); \

514 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

515 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, (
a_node
))); \

516 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

517 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, (
a_node
))); \

518 
	`rbp_cﬁ‹_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

519 
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, (
a_node
))); \

520 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
) \

521 =
rbp_r_c
) { \

522 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, \

523 &(
a_åì
)->
rbt_nû
); \

525 
	`as£π
(
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
) \

526 =
rbp_r_c
); \

527 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, \

528 &(
a_åì
)->
rbt_nû
); \

532 
rbp_r_u
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
); \

533 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
Ë=
Ál£
 \

534 && 
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_u
Ë=
Ál£
) { \

535 
	`rbp_move_ªd_À·
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

536 
rbp_r_t
); \

537 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
) \

538 =
rbp_r_c
) { \

539 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, 
rbp_r_t
); \

541 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, \

542 
rbp_r_t
); \

544 
rbp_r_c
 = 
rbp_r_t
; \

546 
rbp_r_p
 = 
rbp_r_c
; \

547 
rbp_r_c
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
,Ñbp_r_c); \

552 i‡(
rbp_r_cmp
 == 0) { \

553 
	`as£π
((
a_node
Ë=
rbp_r_c
); \

554 i‡(
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
) \

555 =&(
a_åì
)->
rbt_nû
) { \

557 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
) \

558 !&(
a_åì
)->
rbt_nû
) { \

559 
	`rbp_À™_right
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

560 
rbp_r_t
); \

561 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
, \

562 &(
a_åì
)->
rbt_nû
); \

564 
rbp_r_t
 = &(
a_åì
)->
rbt_nû
; \

566 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
) \

567 =
rbp_r_c
) { \

568 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, \

569 
rbp_r_t
); \

571 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, \

572 
rbp_r_t
); \

581 
rbp_r_xp
 = 
rbp_r_p
; \

584 
rbp_r_t
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
); \

585 
rbp_r_u
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_t
); \

586 i‡(
	`rbp_ªd_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_u
Ë=
Ál£
) { \

587 
	`rbp_move_ªd_right
(
a_ty≥
, 
a_fõld
, 
rbp_r_c
, \

588 
rbp_r_t
); \

589 i‡(
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
) \

590 =
rbp_r_c
) { \

591 
	`rbp_À·_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, 
rbp_r_t
); \

593 
	`rbp_right_£t
(
a_ty≥
, 
a_fõld
, 
rbp_r_p
, \

594 
rbp_r_t
); \

596 
rbp_r_c
 = 
rbp_r_t
; \

598 
rbp_r_p
 = 
rbp_r_c
; \

599 
rbp_r_c
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
,Ñbp_r_c); \

605 (
a_åì
)->
rbt_roŸ
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, &
rbp_r_s
); \

606 } 0)

	)

617 
	#rb_wøp
(
a_©å
, 
a_¥efix
, 
a_åì_ty≥
, 
a_ty≥
, 
a_fõld
, 
a_cmp
) \

618 
a_©å
 \

619 
a_¥efix
##
	`√w
(
a_åì_ty≥
 *
åì
) { \

620 
	`rb_√w
(
a_ty≥
, 
a_fõld
, 
åì
); \

622 
a_©å
 
a_ty≥
 * \

623 
a_¥efix
##
	`fú°
(
a_åì_ty≥
 *
åì
) { \

624 
a_ty≥
 *
ªt
; \

625 
	`rb_fú°
(
a_ty≥
, 
a_fõld
, 
åì
, 
ªt
); \

626  (
ªt
); \

628 
a_©å
 
a_ty≥
 * \

629 
a_¥efix
##
	`œ°
(
a_åì_ty≥
 *
åì
) { \

630 
a_ty≥
 *
ªt
; \

631 
	`rb_œ°
(
a_ty≥
, 
a_fõld
, 
åì
, 
ªt
); \

632  (
ªt
); \

634 
a_©å
 
a_ty≥
 * \

635 
a_¥efix
##
	`√xt
(
a_åì_ty≥
 *
åì
, 
a_ty≥
 *
node
) { \

636 
a_ty≥
 *
ªt
; \

637 
	`rb_√xt
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
åì
, 
node
, 
ªt
); \

638  (
ªt
); \

640 
a_©å
 
a_ty≥
 * \

641 
a_¥efix
##
	`¥ev
(
a_åì_ty≥
 *
åì
, 
a_ty≥
 *
node
) { \

642 
a_ty≥
 *
ªt
; \

643 
	`rb_¥ev
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
åì
, 
node
, 
ªt
); \

644  (
ªt
); \

646 
a_©å
 
a_ty≥
 * \

647 
a_¥efix
##
	`£¨ch
(
a_åì_ty≥
 *
åì
, 
a_ty≥
 *
key
) { \

648 
a_ty≥
 *
ªt
; \

649 
	`rb_£¨ch
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
åì
, 
key
, 
ªt
); \

650  (
ªt
); \

652 
a_©å
 
a_ty≥
 * \

653 
a_¥efix
##
	`n£¨ch
(
a_åì_ty≥
 *
åì
, 
a_ty≥
 *
key
) { \

654 
a_ty≥
 *
ªt
; \

655 
	`rb_n£¨ch
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
åì
, 
key
, 
ªt
); \

656  (
ªt
); \

658 
a_©å
 
a_ty≥
 * \

659 
a_¥efix
##
	`p£¨ch
(
a_åì_ty≥
 *
åì
, 
a_ty≥
 *
key
) { \

660 
a_ty≥
 *
ªt
; \

661 
	`rb_p£¨ch
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
åì
, 
key
, 
ªt
); \

662  (
ªt
); \

664 
a_©å
 \

665 
a_¥efix
##
	`ö£π
(
a_åì_ty≥
 *
åì
, 
a_ty≥
 *
node
) { \

666 
	`rb_ö£π
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
åì
, 
node
); \

668 
a_©å
 \

669 
a_¥efix
##
	`ªmove
(
a_åì_ty≥
 *
åì
, 
a_ty≥
 *
node
) { \

670 
	`rb_ªmove
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
åì
, 
node
); \

671 }

	)

701 
	#rb_f‹óch_begö
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
a_v¨
) { \

703 
rbp_f_height
; \

704 
	`rbp_bœck_height
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
rbp_f_height
); \

705 
rbp_f_height
 *= 3; \

708 
a_ty≥
 *
rbp_f_∑th
[
rbp_f_height
]; \

709 
a_ty≥
 *
rbp_f_node
; \

710 
boﬁ
 
rbp_f_syn˚d
 = 
Ál£
; \

711 
rbp_f_dïth
 = 0; \

712 i‡((
a_åì
)->
rbt_roŸ
 !&◊_åì)->
rbt_nû
) { \

713 
rbp_f_∑th
[
rbp_f_dïth
] = (
a_åì
)->
rbt_roŸ
; \

714 
rbp_f_dïth
++; \

715 (
rbp_f_node
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, \

716 
rbp_f_∑th
[
rbp_f_dïth
-1])Ë!&(
a_åì
)->
rbt_nû
) { \

717 
rbp_f_∑th
[
rbp_f_dïth
] = 
rbp_f_node
; \

718 
rbp_f_dïth
++; \

722 
rbp_f_dïth
 > 0) { \

723 (
a_v¨
Ë
rbp_f_∑th
[
rbp_f_dïth
-1];

	)

727 
	#rb_f‹óch_√xt
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_node
) \

729 
rbp_f_dïth
 = 0; \

730 i‡(
a_node
 !
NULL
) { \

731 i‡((
a_åì
)->
rbt_roŸ
 !&◊_åì)->
rbt_nû
) { \

732 
rbp_f_∑th
[
rbp_f_dïth
] = (
a_åì
)->
rbt_roŸ
; \

733 
rbp_f_dïth
++; \

734 
rbp_f_node
 = 
rbp_f_∑th
[0]; \

735 
åue
) { \

736 
rbp_f_cmp
 = (
a_cmp
)((
a_node
), \

737 
rbp_f_∑th
[
rbp_f_dïth
-1]); \

738 i‡(
rbp_f_cmp
 < 0) { \

739 
rbp_f_node
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, \

740 
rbp_f_∑th
[
rbp_f_dïth
-1]); \

741 } i‡(
rbp_f_cmp
 > 0) { \

742 
rbp_f_node
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, \

743 
rbp_f_∑th
[
rbp_f_dïth
-1]); \

747 
	`as£π
(
rbp_f_node
 !&(
a_åì
)->
rbt_nû
); \

748 
rbp_f_∑th
[
rbp_f_dïth
] = 
rbp_f_node
; \

749 
rbp_f_dïth
++; \

753 
rbp_f_syn˚d
 = 
åue
;

	)

756 
	#rb_f‹óch_íd
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
a_v¨
) \

757 i‡(
rbp_f_syn˚d
) { \

758 
rbp_f_syn˚d
 = 
Ál£
; \

762 i‡((
rbp_f_node
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, \

763 
rbp_f_∑th
[
rbp_f_dïth
-1])Ë!&(
a_åì
)->
rbt_nû
) { \

766 
rbp_f_∑th
[
rbp_f_dïth
] = 
rbp_f_node
; \

767 
rbp_f_dïth
++; \

768 (
rbp_f_node
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, \

769 
rbp_f_∑th
[
rbp_f_dïth
-1])Ë!&(
a_åì
)->
rbt_nû
) { \

770 
rbp_f_∑th
[
rbp_f_dïth
] = 
rbp_f_node
; \

771 
rbp_f_dïth
++; \

775  \

	)

777 
	grbp_f_dïth
--;Ñbp_f_depth > 0;Ñbp_f_depth--) { \

778 i‡(
rbp_À·_gë
(
a_ty≥
, 
a_fõld
, \

779 
rbp_f_∑th
[
rbp_f_dïth
-1]) \

780 =
rbp_f_∑th
[
rbp_f_dïth
]) { \

789 
	#rb_f‹óch_ªvî£_begö
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
a_v¨
) { \

791 
rbp_‰_height
; \

792 
	`rbp_bœck_height
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
rbp_‰_height
); \

793 
rbp_‰_height
 *= 3; \

796 
a_ty≥
 *
rbp_‰_∑th
[
rbp_‰_height
]; \

797 
a_ty≥
 *
rbp_‰_node
; \

798 
boﬁ
 
rbp_‰_syn˚d
 = 
Ál£
; \

799 
rbp_‰_dïth
 = 0; \

800 i‡((
a_åì
)->
rbt_roŸ
 !&◊_åì)->
rbt_nû
) { \

801 
rbp_‰_∑th
[
rbp_‰_dïth
] = (
a_åì
)->
rbt_roŸ
; \

802 
rbp_‰_dïth
++; \

803 (
rbp_‰_node
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, \

804 
rbp_‰_∑th
[
rbp_‰_dïth
-1])Ë!&(
a_åì
)->
rbt_nû
) { \

805 
rbp_‰_∑th
[
rbp_‰_dïth
] = 
rbp_‰_node
; \

806 
rbp_‰_dïth
++; \

810 
rbp_‰_dïth
 > 0) { \

811 (
a_v¨
Ë
rbp_‰_∑th
[
rbp_‰_dïth
-1];

	)

814 
	#rb_f‹óch_ªvî£_¥ev
(
a_ty≥
, 
a_fõld
, 
a_cmp
, 
a_åì
, 
a_node
) \

816 
rbp_‰_dïth
 = 0; \

817 i‡(
a_node
 !
NULL
) { \

818 i‡((
a_åì
)->
rbt_roŸ
 !&◊_åì)->
rbt_nû
) { \

819 
rbp_‰_∑th
[
rbp_‰_dïth
] = (
a_åì
)->
rbt_roŸ
; \

820 
rbp_‰_dïth
++; \

821 
rbp_‰_node
 = 
rbp_‰_∑th
[0]; \

822 
åue
) { \

823 
rbp_‰_cmp
 = (
a_cmp
)((
a_node
), \

824 
rbp_‰_∑th
[
rbp_‰_dïth
-1]); \

825 i‡(
rbp_‰_cmp
 < 0) { \

826 
rbp_‰_node
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, \

827 
rbp_‰_∑th
[
rbp_‰_dïth
-1]); \

828 } i‡(
rbp_‰_cmp
 > 0) { \

829 
rbp_‰_node
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, \

830 
rbp_‰_∑th
[
rbp_‰_dïth
-1]); \

834 
	`as£π
(
rbp_‰_node
 !&(
a_åì
)->
rbt_nû
); \

835 
rbp_‰_∑th
[
rbp_‰_dïth
] = 
rbp_‰_node
; \

836 
rbp_‰_dïth
++; \

840 
rbp_‰_syn˚d
 = 
åue
;

	)

842 
	#rb_f‹óch_ªvî£_íd
(
a_ty≥
, 
a_fõld
, 
a_åì
, 
a_v¨
) \

843 i‡(
rbp_‰_syn˚d
) { \

844 
rbp_‰_syn˚d
 = 
Ál£
; \

847 i‡(
rbp_‰_dïth
 == 0) { \

853 i‡((
rbp_‰_node
 = 
	`rbp_À·_gë
(
a_ty≥
, 
a_fõld
, \

854 
rbp_‰_∑th
[
rbp_‰_dïth
-1])Ë!&(
a_åì
)->
rbt_nû
) { \

857 
rbp_‰_∑th
[
rbp_‰_dïth
] = 
rbp_‰_node
; \

858 
rbp_‰_dïth
++; \

859 (
rbp_‰_node
 = 
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, \

860 
rbp_‰_∑th
[
rbp_‰_dïth
-1])Ë!&(
a_åì
)->
rbt_nû
) { \

861 
rbp_‰_∑th
[
rbp_‰_dïth
] = 
rbp_‰_node
; \

862 
rbp_‰_dïth
++; \

868 
rbp_‰_dïth
--;Ñbp_fr_depth > 0;Ñbp_fr_depth--) { \

869 i‡(
	`rbp_right_gë
(
a_ty≥
, 
a_fõld
, \

870 
rbp_‰_∑th
[
rbp_‰_dïth
-1]) \

871 =
rbp_‰_∑th
[
rbp_‰_dïth
]) { \

878 }

	)

883 
	gST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_rbtree_lk.h

1 #i‚def 
__ST_RBTREE_LK_H__


2 
	#__ST_RBTREE_LK_H__


	)

3 
	~"°lib.h
"

4 
	gST_BEGIN_DECLS
;

12 
	srb_node


14 
	mrb_∑ª¡_cﬁ‹
;

15 
	#RB_RED
 0

	)

16 
	#RB_BLACK
 1

	)

17 
rb_node
 *
	mrb_right
;

18 
rb_node
 *
	mrb_À·
;

20 #i‡!
deföed
(
WIN32
)

21 
__©åibuã__
((
Æig√d
(())));

34 
	srb_roŸ


36 
rb_node
 *
	mrb_node
;

40 
	#rb_∑ª¡
(
r
Ë((
rb_node
 *)(‘)->
rb_∑ª¡_cﬁ‹
 & ~3))

	)

42 
	#rb_cﬁ‹
(
r
Ë(‘)->
rb_∑ª¡_cﬁ‹
 & 1)

	)

43 
	#rb_is_ªd
(
r
Ë(!
	`rb_cﬁ‹
‘))

	)

44 
	#rb_is_bœck
(
r
Ë
	`rb_cﬁ‹
‘)

	)

45 
	#rb_£t_ªd
(
r
Ëdÿ{ (r)->
rb_∑ª¡_cﬁ‹
 &~1; } 0)

	)

46 
	#rb_£t_bœck
(
r
Ëdÿ{ (r)->
rb_∑ª¡_cﬁ‹
 |1; } 0)

	)

49 
°ölöe
 
	$rb_£t_∑ª¡
(
rb_node
 *
rb
, rb_nodê*
p
)

51 
rb
->
rb_∑ª¡_cﬁ‹
 = (rb->rb_∑ª¡_cﬁ‹ & 3Ë| ()
p
;

52 
	}
}

53 
°ölöe
 
	$rb_£t_cﬁ‹
(
rb_node
 *
rb
, 
cﬁ‹
)

55 
rb
->
rb_∑ª¡_cﬁ‹
 = (rb->rb_∑ª¡_cﬁ‹ & ~1Ë| 
cﬁ‹
;

56 
	}
}

58 
	#RB_ROOT
 (
rb_roŸ
Ë{ 
NULL
, }

	)

59 
	#rb_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
’å,Åy≥, membî)

	)

61 
	#RB_EMPTY_ROOT
(
roŸ
Ë(‘oŸ)->
rb_node
 =
NULL
)

	)

62 
	#RB_EMPTY_NODE
(
node
Ë(
	`rb_∑ª¡
“odeË=node)

	)

63 
	#RB_CLEAR_NODE
(
node
Ë(
	`rb_£t_∑ª¡
“ode,Çode))

	)

83 
rb_ö£π_cﬁ‹
(
rb_node
 *, 
rb_roŸ
 *);

91 
rb_îa£
(
rb_node
 *, 
rb_roŸ
 *);

99 
rb_node
 *
rb_√xt
(const rb_node *);

101 
rb_node
 *
rb_¥ev
(const rb_node *);

103 
rb_node
 *
rb_fú°
(c⁄° 
rb_roŸ
 *);

105 
rb_node
 *
rb_œ°
(c⁄° 
rb_roŸ
 *);

109 
rb_ª∂a˚_node
(
rb_node
 *
vi˘im
, rb_nodê*
√w
,

110 
rb_roŸ
 *
roŸ
);

122 
°ölöe
 
	$rb_lök_node
(
rb_node
 * 
node
, rb_nodê* 
∑ª¡
,

123 
rb_node
 ** 
rb_lök
)

125 
node
->
rb_∑ª¡_cﬁ‹
 = ()
∑ª¡
;

126 
node
->
rb_À·
 =Çode->
rb_right
 = 
NULL
;

128 *
rb_lök
 = 
node
;

129 
	}
}

133 
	gST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_slist.h

1 #i‚def 
__ST_SLIST_H__


2 
	#__ST_SLIST_H__


	)

4 
	~"°lib.h
"

6 
	gST_BEGIN_DECLS
;

10 
	s_STSLi°


12 *
	md©a
 ;

13 
_STSLi°
 *
	m√xt
 ;

14 }
	tSTSLi°
 ;

21 
STSLi°
 *
°_¶i°_Æloc
();

22 
°_¶i°_‰ì
(
STSLi°
 *
li°
);

23 
STSLi°
* 
°_¶i°_≠≥nd
(STSLi° *
li°
, 
°poöãr
 
d©a
);

24 
STSLi°
* 
°_¶i°_¥ïíd
(STSLi° *
li°
, 
°poöãr
 
d©a
);

25 
STSLi°
* 
°_¶i°_ö£π
(STSLi° *
li°
, 
°poöãr
 
d©a
, 
°öt
 
posôi⁄
);

26 
STSLi°
* 
°_¶i°_ö£π_s‹ãd
(STSLi° *
li°
,

27 
°poöãr
 
d©a
,

28 
STCom∑ªFunc
 
func
);

30 
STSLi°
* 
°_¶i°_ö£π_s‹ãd_wôh_d©a
 (STSLi° *
li°
,

31 
°poöãr
 
d©a
,

32 
STCom∑ªD©aFunc
 
func
,

33 
°poöãr
 
u£r_d©a
);

35 
STSLi°
* 
°_¶i°_c⁄ˇt
(STSLi° *
li°1
, STSLi° *
li°2
);

36 
STSLi°
* 
°_¶i°_ªmove
(STSLi° *
li°
, 
°c⁄°poöãr
 
d©a
) ;

37 
STSLi°
* 
°_¶i°_ªmove_Æl
(STSLi° *
li°
, 
°c⁄°poöãr
 
d©a
) ;

39 
STSLi°
* 
°_¶i°_ªmove_lök
(STSLi° *
li°
, STSLi° *
lök_
) ;

40 
STSLi°
* 
°_¶i°_dñëe_lök
(STSLi° *
li°
, STSLi° *
lök_
) ;

41 
STSLi°
* 
°_¶i°_ªvî£
(STSLi° *
li°
);

42 
STSLi°
* 
°_¶i°_c›y
(STSLi° *
li°
) ;

43 
STSLi°
* 
°_¶i°_¡h
(STSLi° *
li°
, 
°uöt
 
n
);

44 
STSLi°
* 
°_¶i°_föd
(STSLi° *
li°
, 
°c⁄°poöãr
 
d©a
);

45 
°öt
 
°_¶i°_posôi⁄
(
STSLi°
 *
li°
, STSLi° *
Œök
);

46 
STSLi°
* 
°_¶i°_œ°
(STSLi° *
li°
);

47 
°uöt
 
°_¶i°_Àngth
(
STSLi°
 *
li°
);

48 
°_¶i°_f‹óch
(
STSLi°
 *
li°
,

49 
STFunc
 
func
,

50 
°poöãr
 
u£r_d©a
);

51 
STSLi°
* 
°_¶i°_s‹t
(STSLi° *
li°
,

52 
STCom∑ªFunc
 
com∑ª_func
) ;

53 
STSLi°
* 
°_¶i°_s‹t_wôh_d©a
(STSLi° *
li°
,

54 
STCom∑ªD©aFunc
 
com∑ª_func
,

55 
°poöãr
 
u£r_d©a
) ;

56 
STSLi°
* 
°_¶i°_mîge_2_li°
(STSLi° *
li°1
, STSLi° *
li°2
);

57 
STSLi°
* 
°_¶i°_ªcursive_mîge_2_li°
(STSLi° *
li°1
, STSLi° *
li°2
);

58 
°poöãr
 
°_¶i°_¡h_d©a
(
STSLi°
 *
li°
, 
°uöt
 
n
);

59 
°_dump_li°
(
STSLi°
 *
hód
);

96 
STSLi°
* 
°_¶i°_dúe˘_ö£π_s‹t
(STSLi°* 
li°
);

97 
STSLi°
* 
°_¶i°_£À˘_s‹t
(STSLi°* 
li°
);

98 
°_¶i°_shñl_s‹t
(
STSLi°
* 
li°
);

99 
STSLi°
* 
°_¶i°_quick_s‹t
(STSLi°* 
phód
, STSLi° *
≥nd
);

100 
°_¶i°_quick_s‹t2
(
STSLi°
 **
hód
, STSLi° *
íd
);

101 
STSLi°
* 
°_¶i°_ôî©i⁄_mîge_s‹t
(STSLi°* 
li°
);

102 
STSLi°
* 
°_¶i°_bubbÀ_s‹t
(STSLi°* 
li°
);

106 
STSLi°
* 
°_¶i°_ødix_s‹t
(STSLi°* 
li°
, 
°öt
 
ødix
);

110 
	#°_¶i°_√xt
(
¶i°
Ë((¶i°Ë? (((
STSLi°
 *)(¶i°))->
√xt
Ë: 
NULL
)

	)

112 
	gST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_splaytree.h

1 #i‚def 
__ST_SPLAYTREE_H__


2 
	#__ST_SPLAYTREE_H__


	)

8 
	~"°lib.h
"

10 
	gST_BEGIN_DECLS
;

12 
°öt
 
	tSPYIãm
 ;

13 
	s_SPYNode


15 
SPYIãm
 
	môem
 ;

16 
_SPYNode
 * 
	mÀ·
, * 
	mright
 ;

17 
°öt
 
	mÀ·SubTªeCou¡
, 
	mrightSubTªeCou¡
 ;

18 } 
	tSPYNode
 ;

19 
	s_S∂ayTªe


21 
SPYNode
 * 
	mroŸ
 ;

22 
°öt
 
	mcuºít
 ;

23 }
	tS∂ayNode
, * 
	tS∂ayTªe
 ;

27 
SPYNode
 * 
	gNuŒNode
 = 
NULL
 ;

35 
°boﬁ
 
°_•œy_åì_¸óã
 (
S∂ayTªe
 * c⁄° 
p°
) ;

41 
°boﬁ
 
°_•œy_åì_em±y
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
) ;

47 
°boﬁ
 
°_•œy_åì_ö£π
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, c⁄° 
SPYIãm
 * c⁄° 
pi
) ;

53 
SPYNode
 * 
°_•œy_åì_ªåõve
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
) ;

59 
°boﬁ
 
°_•œy_åì_föd
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, c⁄° 
SPYIãm
 * c⁄° 
pi
) ;

65 
SPYNode
 * 
°_•œy_åì_föd_kthmö
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, 
k
) ;

71 
SPYNode
 * 
°_•œy_åì_föd_kthmax
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, 
k
) ;

77 
SPYNode
 * 
°_•œy_åì_föd_mö
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
) ;

83 
SPYNode
 * 
°_•œy_åì_föd_max
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
) ;

89 
°boﬁ
 
°_•œy_åì_dñëe
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, c⁄° 
SPYIãm
 * c⁄° 
pi
) ;

95 
°_•œy_åì_åavî£
 (c⁄° 
SPYNode
 * c⁄° 
¥
, (* 
pfun
Ë(c⁄° SPYNodê* c⁄° 
≤
)) ;

101 
	`°_•œy_åì_ªÀa£
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
) ;

108 
ST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_stack.h

1 #i‚def 
__ST_STACK_H__


2 
	#__ST_STACK_H__


	)

4 
	gST_BEGIN_DECLS
;

6 
	~"°lib.h
"

7 
	~"°_dli°.h
"

8 
	~"°_¶i°.h
"

9 
	~"°_log.h
"

15 
	s_ST_STACK_LIST


17 
STSLi°
* 
	mpD©a
 ;

18 
°öt
 
	mt›
 ;

19 }
	tST_STACK_LIST
 ;

22 
ST_STACK_LIST
* 
°_°ack_li°_Æloc
();

23 
°_°ack_li°_‰ì
(
ST_STACK_LIST
* 
°ack
);

24 
°boﬁ
 
°_°ack_li°_push
(
ST_STACK_LIST
* 
°ack
, 
°öt
 
d©a
);

25 
°öt
 
°_°ack_li°_p›
(
ST_STACK_LIST
* 
°ack
) ;

26 
°_°ack_li°_dump
(
ST_STACK_LIST
* 
°ack
);

33 
	s_ST_STACK_NODE


35 
°öt
* 
	mpD©a
 ;

36 
°öt
 
	mÀngth
 ;

37 
°öt
 
	mt›
 ;

38 }
	tST_STACK_NODE
 ;

41 
ST_STACK_NODE
* 
°_°ack_Æloc
(
°öt
 
num
);

42 
°boﬁ
 *
°_°ack_‰ì
(c⁄° 
ST_STACK_NODE
* 
pSèckNode
);

43 
°boﬁ
 *
°_°ack_push
(
ST_STACK_NODE
* 
pSèckNode
, 
°öt
 
d©a
);

44 
°boﬁ
 *
°_°ack_p›
(
ST_STACK_NODE
* 
pSèckNode
, 
°öt
* 
d©a
);

45 
°öt
 
°_cou¡_°ack
(
ST_STACK_NODE
* 
pSèckNode
);

46 
°_°ack_dump
(
ST_STACK_NODE
* 
pSèckNode
);

50 
	gST_END_DECLS
;

	@/media/programs/workdir/stlib/trunk/include/st_treaptree.h

1 #i‚def 
__ST_TREAP_TREE_H__


2 
	#__ST_TREAP_TREE_H__


	)

4 
	~"°lib.h
"

6 
	gST_BEGIN_DECLS
;

38 
°öt
 
	tTREÀmTy≥
;

40 
	s_Tª≠Node


42 
TREÀmTy≥
 
	mEÀmít
;

43 
_Tª≠Node
* 
	mLe·
;

44 
_Tª≠Node
* 
	mRight
;

45 
°öt
 
	mPri‹ôy
;

46 }
	tTª≠Node
, *
	tTª≠
, *
	tPosôi⁄
;

48 
Tª≠
 
°_åóp_åì_de°roy
–Tª≠ 
T
 );

49 
Posôi⁄
 
°_åóp_åì_föd
–
TREÀmTy≥
 
X
, 
Tª≠
 
T
 );

50 
Posôi⁄
 
°_åóp_åì_föd_mö
–
Tª≠
 
T
 );

51 
Posôi⁄
 
°_åóp_åì_föd_max
–
Tª≠
 
T
 );

52 
Tª≠
 
°_åóp_åì_öô
( );

53 
Tª≠
 
°_åóp_åì_ö£π
–
TREÀmTy≥
 
X
, Tª≠ 
T
 );

54 
Tª≠
 
°_åóp_åì_ªmove
–
TREÀmTy≥
 
X
, Tª≠ 
T
 );

55 
TREÀmTy≥
 
°_åóp_åì_ªåõve
–
Posôi⁄
 
P
 );

56 
°_åóp_åì_åavî£
–
Tª≠
 
T
 );

58 
Posôi⁄
 
TRNuŒNode
;

60 
	gST_END_DECLS
 ;

	@/media/programs/workdir/stlib/trunk/include/stlib.h

1 #i‚def 
__ST_LIB_H__


2 
	#__ST_LIB_H__


	)

7 #ifde‡ 
__˝lu•lus


8 
	#ST_BEGIN_DECLS
 "C" {

	)

9 
	#ST_END_DECLS
 }

	)

11 
	#ST_BEGIN_DECLS


	)

12 
	#ST_END_DECLS


	)

20 #i‚de‡
NULL


21 #ifde‡
__˝lu•lus


22 
	#NULL
 (0L)

	)

24 
	#NULL
 ((*Ë0)

	)

28 
	~<as£π.h
>

29 
	#°_as£π
 
as£π


	)

31 #if 
deföed
(
WIN32
)

32 
	#°ölöe


	)

34 
	#°ölöe
 
ölöe


	)

38 
	t°öt8
 ;

39 
	t°uöt8
 ;

40 
	t°öt16
 ;

41 
	t°uöt16
 ;

42 
	t°öt32
 ;

43 
	t°uöt32
 ;

44 
	t°öt
 ;

45 
	t°uöt
 ;

46 
°uöt
 
	t°size_t
 ;

47 
°öt
 
	t°boﬁ
;

49 
	t°Êﬂt
;

50 
	t°doubÀ
;

52 * 
	t°poöãr
;

53 c⁄° * 
	t°c⁄°poöãr
;

56 #i‚def 
FALSE


57 
	#FALSE
 (0)

	)

60 #i‚def 
TRUE


61 
	#TRUE
 (!
FALSE
)

	)

64 #unde‡
MAX


65 
	#MAX
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

67 #unde‡
MIN


68 
	#MIN
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

70 #unde‡
ABS


71 
	#ABS
(
a
Ë((◊Ë< 0Ë? -◊Ë: (a))

	)

73 #unde‡
CLAMP


74 
	#CLAMP
(
x
, 
low
, 
high
Ë(((xË> (high)Ë? (highË: (((xË< (low)Ë? (lowË: (x)))

	)

77 
	$°öt
 (*
	tSTCom∑ªFunc
)(
	t°c⁄°poöãr
 
	ta
,°c⁄°poöã∏
	tb
);

78 
	$°öt
 (*
	tSTCom∑ªD©aFunc
)(
	t°c⁄°poöãr
 
	ta
, stc⁄°poöã∏
	tb
, 
	t°poöãr
 
	tu£r_d©a
);

79 (*
	tSTFunc
)(
	t°poöãr
 
	td©a
, sçoöã∏
	tu£r_d©a
);

80 (*
	tSTDe°royNŸify
Ë(
	t°poöãr
 
	td©a
);

82 
	#°off£tof
(
TYPE
, 
MEMBER
Ë((Ë&((TYPE *)0)->MEMBER)

	)

83 
	#°_c⁄èöî_of
(
±r
, 
ty≥
, 
membî
Ë({ \

	)

84 c⁄° 
	`ty≥of
–((
ty≥
 *)0)->
membî
 ) *
__m±r
 = (
±r
); \

85 (
ty≥
 *)–(*)
__m±r
 - 
	`°off£tof
—y≥,
membî
Ë);
	}
})

	@/media/programs/workdir/stlib/trunk/src/st_arry.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~"°_¨ry.h
"

8 
	$°_dump_¨øy
(
°öt
 
a
[], stöà
n
)

10 
°öt
 
i
 ;

12 
i
 = 0 ; i < 
n
 ; ++i)

14 
	`¥ötf
("%ÿ %d\n", (
°uöt
)
a
,á[
i
]);

16 
	`¥ötf
("\n");

17 
	}
}

19 
	$sw≠
(
°öt
 **
a
,°öà**
b
)

21 
°öt
 
ãmp
;

22 
ãmp
=*
a
;

23 *
a
=*
b
;

24 *
b
=
ãmp
;

25 
	}
}

38 
	$c›yAºay
(
°öt
 
sour˚
[], stöà
de°
[],°öà
Àn
,°öà
fú°
)

40 
°öt
 
i
;

41 
°öt
 
j
=
fú°
;

42 
i
=0;i<
Àn
;i++)

44 
de°
[
j
] = 
sour˚
[
i
];

45 
j
++;

48 
	}
}

51 
	$mîge
(
°öt
 
a
[],°öà
À·
,°öà
right
)

53 
°öt
 
begö1
 = 
À·
;

54 
°öt
 
mid
 = (
À·
+
right
)/2 ;

55 
°öt
 
begö2
 = 
mid
+1;

56 
°öt
 
k
=0;

57 
°öt
 
√wAºayLí
 = 
right
-
À·
+1;

58 
°öt
 *
b
 = (°öt*)
	`mÆloc
(
√wAºayLí
*(stint));

60 
begö1
<=
mid
 && 
begö2
<=
right
)

63 if(
a
[
begö1
]<˜[
begö2
])

64 
b
[
k
++] = 
a
[
begö1
++];

66 
b
[
k
++] = 
a
[
begö2
++];

68 
begö1
<=
mid
)

69 
b
[
k
++] = 
a
[
begö1
++];

70 
begö2
<=
right
)

71 
b
[
k
++] = 
a
[
begö2
++];

72 
	`c›yAºay
(
b
,
a
,
√wAºayLí
,
À·
);

73 
	`‰ì
(
b
);

74 
	}
}

94 
	$°_¨ry_ªcursive_mîge_s‹t
(
°öt
 
a
[],°öà
À·
,°öà
right
)

96 
°öt
 
i
;

98 if(
À·
 < 
right
)

100 
i
 = (
À·
+
right
)/2;

101 
	`°_¨ry_ªcursive_mîge_s‹t
(
a
,
À·
,
i
);

102 
	`°_¨ry_ªcursive_mîge_s‹t
(
a
,
i
+1,
right
);

105 
	`mîge
(
a
,
À·
,
right
);

107 
	}
}

111 
	$i_mîge
(
°öt
 *
a
,°öà
m
,°öà
n
,°öà*
b
,°öà
i
,°öà
j
)

113 
°öt
 
begö
 = 
m
,
h
 = m,
k
 = 
i
;

115 
h
 <
n
 && 
k
 <
j
)

117 if(
a
[
h
] <a[
k
])

119 
b
[
begö
++] = 
a
[
h
++];

123 
b
[
begö
++] = 
a
[
k
++];

126 
h
 <
n
)

128 
b
[
begö
++] = 
a
[
h
++];

130 
k
 <
j
)

132 
b
[
begö
++] = 
a
[
k
++];

134 
	}
}

137 
	$i_mîgóŒ
(
°öt
 *
a
,°öà*
b
,°öà
Àn
,°öà
n
)

140 
°öt
 
i
 = 0;

141 (
i
 + 2*
Àn
Ë<
n
)

143 
	`i_mîge
(
a
,
i
,i+
Àn
-1,
b
,i+len,i + 2*len -1);

144 
i
 = i + 2*
Àn
;

146 if((
i
 + 
Àn
Ë> 
n
)

148 
i
 < 
n
)

150 
b
[
i
] = 
a
[i];

151 
i
++;

156 
	`i_mîge
(
a
,
i
,i+
Àn
-1,
b
,i+Àn,
n
-1);

158 
	}
}

161 
	$°_¨ry_ôî©i⁄_mîge_s‹t
(
°öt
 
a
[], stöà
n
)

163 
°öt
 
Àn
 = 1;

164 
°öt
 *
ãmp
;

166 
ãmp
 = (
°öt
 *)
	`mÆloc
(
n
*(stint));

168 
Àn
 < 
n
)

170 
	`i_mîgóŒ
(
a
,
ãmp
,
Àn
,
n
);

171 
Àn
 =Üen * 2;

172 
	`i_mîgóŒ
(
ãmp
,
a
,
Àn
,
n
);

173 
Àn
 =Üen * 2;

175 
	`‰ì
(
ãmp
);

176 
ãmp
 = 
NULL
 ;

177 
	}
}

195 
	$maxHópify2
(
°öt
 
a
[], stöà
roŸIndex
,°öà
maxHópIndex
)

197 
°öt
 
lChûd
 = 
roŸIndex
*2+1;

198 
°öt
 
rChûd
 = (
roŸIndex
+1)*2;

199 
°öt
 
œrge°
 = 
roŸIndex
;

200 if(
lChûd
 <
maxHópIndex
 && 
a
[lChûd] >á[
roŸIndex
])

201 
œrge°
 = 
lChûd
;

202 if(
rChûd
 <
maxHópIndex
 && 
a
[rChûd] >á[
œrge°
])

203 
œrge°
 = 
rChûd
;

204 if(
œrge°
 !
roŸIndex
)

206 
	`sw≠
(&
a
[
œrge°
],&a[
roŸIndex
]);

207 
	`maxHópify2
(
a
,
œrge°
,
maxHópIndex
);

209 
	}
}

216 
	$°_¨ry_hód_s‹t
(
°öt
 
a
[],°öà
Àn
)

218 
°öt
 
i
=0;

219 
°öt
 
maxHópIndex
 = 
Àn
-1;

221 
i
=(
maxHópIndex
-1)/2;i>=0;i--)

223 
	`maxHópify2
(
a
,
i
,
maxHópIndex
);

225 
i
=
maxHópIndex
;i>=1;i--)

227 
	`sw≠
(&
a
[0],&a[
i
]);

229 
	`maxHópify2
(
a
,0,
i
-1);

231 
	}
}

233 
°öt
 
	$∑πôi⁄
(
°öt
* 
¨øy
,°öà
low
,°öà
high
)

235 
°öt
 
i
=0;

236 
°öt
 
pivŸ
 = 
¨øy
[
low
];

237 
low
 < 
high
)

239 
low
<
high
 && 
¨øy
[high] >
pivŸ
 )

241 
high
--;

243 if(
low
 < 
high
)

245 
¨øy
[
low
++] =áºay[
high
];

248 
low
<
high
 && 
¨øy
[low] <
pivŸ
)

250 
low
++;

252 if(
low
 < 
high
)

254 
¨øy
[
high
--] =áºay[
low
];

257 
¨øy
[
low
] = 
pivŸ
;

258 #i‡
ST_DBG_


259 
	`¥ötf
("∑πôi⁄---ándÖivŸ i†%d \n",
pivŸ
);

260 ;
i
<5;i++)

262 
	`¥ötf
("%d ",
¨øy
[
i
]);

264 
	`¥ötf
("\n");

266  
low
;

267 
	}
}

269 
	$°_¨ry_qs‹t
(
°öt
 *
¨øy
,°öà
low
,°öà
high
)

271 
°öt
 
i
;

272 if(
low
 < 
high
)

274 
i
 = 
	`∑πôi⁄
(
¨øy
,
low
,
high
);

275 
	`°_¨ry_qs‹t
(
¨øy
, 
low
, 
i
-1);

276 
	`°_¨ry_qs‹t
(
¨øy
, 
i
+1, 
high
);

278 
	}
}

281 
	$°_¨ry_shñl_s‹t
(
°öt
 
a
[], stöà
Àn
)

283 
°öt
 
°ï
;

284 
°öt
 
i
,
j
;

285 
°öt
 
ãmp
;

286 
°ï
=
Àn
/2; step>0;step/=2)

290 
i
=
°ï
;i<
Àn
;i++)

292 
ãmp
 = 
a
[
i
];

293 
j
=
i
-
°ï
;(j>=0 && 
ãmp
 < 
a
[j]);j-=step)

295 
a
[
j
+
°ï
] =á[j];

297 
a
[
j
+
°ï
] = 
ãmp
;

301 
	}
}

305 
	$°_¨ry_£À˘_s‹t
(
°öt
 
¨øy
[], stöà
n
)

307 
°öt
 
mö_ödex
;

308 
°öt
 
i
, 
j
 ;

309 
i
=0;i<
n
-1;i++)

311 
mö_ödex
=
i
;

312 
j
=
i
+1;j<
n
;j++)

313 if(
¨øy
[
j
]<¨øy[
mö_ödex
])

314 
mö_ödex
=
j
;

316 if(
mö_ödex
!=
i
)

318 
°öt
 
ãmp
;

319 
ãmp
=
¨øy
[
i
];

320 
¨øy
[
i
]˜ºay[
mö_ödex
];

321 
¨øy
[
mö_ödex
]=
ãmp
;

324 
	}
}

327 
	$°_¨ry_bubbÀ_s‹t
(
°öt
 
¨øy
[], stöà
n
)

329 
°öt
 
i
,
j
,
Êag
,
ãmp
;

330 
i
 = 0; i < 
n
-1; i++)

332 
Êag
 = 1;

333 
j
 = 0; j < 
n
-
i
-1; j++)

335 if(
¨øy
[
j
] >árray[j+1])

337 
ãmp
 = 
¨øy
[
j
];

338 
¨øy
[
j
] =árray[j+1];

339 
¨øy
[
j
+1] = 
ãmp
;

340 
Êag
 = 0;

343 if(1 =
Êag
)

347 
	}
}

353 
	$°_¨ry_ö£π_s‹t
(
°öt
 
¨r
[], stöà
n
)

355 
°öt
 
i
 ;

357 
i
=1;i<
n
;i++)

359 
°öt
 
ãmp
=
¨r
[
i
];

360 
°öt
 
j
=
i
-1;

361 
j
>=0 && 
¨r
[j]>
ãmp
)

363 
¨r
[
j
+1]=arr[j];

364 
j
--;

366 
¨r
[
j
+1]=
ãmp
;

368 
	}
}

375 
	$°_¨ry_bö¨y_ö£π_s‹t
(
°öt
 
¨øy
[], stöà
n
)

377 
°öt
 
i
,
j
,
low
,
high
,
mid
;

378 
i
=1;i<=
n
;i++)

380 
¨øy
[0] =áºay[
i
];

381 
low
 = 1;

382 
high
 = 
i
-1;

383 
low
 <
high
)

385 
mid
 = (
low
 + 
high
)/2;

386 if(
¨øy
[0] >áºay[
mid
])

387 
low
 = 
mid
 + 1;

389 
high
 = 
mid
 - 1;

391 
j
 = 
i
-1;j >
high
 + 1;j--)

392 
¨øy
[
j
+1] =árray[j];

394 
¨øy
[
high
+1] =árray[0];

396 
	}
}

399 
	$°_¨ry_ødix_s‹t
(
°öt
 
¨øy
[], stöà
í
)

401 
°öt
 
ãmp
[10][10]={0} ;

402 
°öt
 
‹dî
[10]={0} ;

403 
°öt
 
i
, 
j
, 
k
, 
n
, 
lsd
;

404 
k
 = 0;

405 
n
 = 1;

407 
	`¥ötf
("ƒ„ ‰»Îµƒ≈≈–Ú–Ú¡– «: \n");

408 
i
 = 0; i < 
í
; i++)

410 
	`¥ötf
("%d ", 
¨øy
[
i
]);

412 
	`putch¨
('\n');

414 
n
 <= 100)

416 
°öt
 
r
= 0;

417 
°öt
 
m
= 1;

419 
i
 = 0; i < 
í
; i++)

421 
lsd
 = ((
¨øy
[
i
]/
n
)%
í
);

422 
ãmp
[
lsd
][
‹dî
[lsd]] = 
¨øy
[
i
];

423 
‹dî
[
lsd
]++;

425 
m
=
n
;

426 
m
!=0)

428 
m
=m/10;

429 
r
++;

431 
	`¥ötf
("\nµ⁄%dÃÀ≈≈–ÚΩ·π˚:\n",
r
);

432 
i
 = 0; i < 
í
; i++)

434 i‡(
‹dî
[
i
] != 0)

436 
j
 = 0 ; j<
‹dî
[
i
] ; j++)

438 
¨øy
[
k
] = 
ãmp
[
i
][
j
];

439 
	`¥ötf
("%d ", 
¨øy
[
k
]);

440 
k
++;

442 
‹dî
[
i
] = 0;

445 
	`¥ötf
("\n");

446 
n
 *= 10;

447 
k
 = 0;

449 
	`¥ötf
("\n◊Ó∫Ûµƒ≈≈–ÚΩ·π˚ «:\n");

451 
i
 = 0; i <
í
; i++)

453 
	`¥ötf
("%d ", 
¨øy
[
i
]);

455 
	`putch¨
('\n');

459 
	}
}

461 
	#M
 50

	)

463 
	#MIN_VALUE
 -10000

	)

472 
	$°_¨ry_tou∫amít_s‹t
(
°öt
 
¨r
[],°öà
n
)

474 
°öt
 *
åì
 = 
NULL
;

475 
°öt
 
ba£Size
;

478 
°öt
 
i
;

479 
°öt
 
max
;

480 
°öt
 
maxIndex
;

481 
°öt
 
åìSize
;

484 
åì
 = (
°öt
 *)
	`mÆloc
((°öt)*
M
);

485 
ba£Size
 = 1;

486 
ba£Size
 < 
n
)

488 
ba£Size
 *= 2;

492 
åìSize
 = 
ba£Size
 * 2 - 1;

498 
i
 = 0;ò< 
n
;i++)

500 
åì
[
åìSize
 - 
i
] = 
¨r
[i];

504 ;
i
 < 
ba£Size
;i++)

506 
åì
[
åìSize
 - 
i
] = 
MIN_VALUE
;

510 
i
 = 
åìSize
;i > 1;i -= 2)

515 
åì
[
i
 / 2] = (tree[i] >Åree[i - 1] ?Åree[i] :Åree[i - 1]);

518 
n
 =Ç - 1;

522 
n
 != -1)

524 
max
 = 
åì
[1];

525 
¨r
[
n
--] = 
max
;

526 
maxIndex
 = 
åìSize
;

529 
åì
[
maxIndex
] !
max
)

531 
maxIndex
--;

533 
åì
[
maxIndex
] = 
MIN_VALUE
;

537 
maxIndex
 > 1)

539 i‡(
maxIndex
 % 2 == 0)

542 
åì
[
maxIndex
 / 2] = (tree[maxIndex] >Åree[maxIndex + 1] ?Åree[maxIndex] :Åree[maxIndex + 1]);

547 
åì
[
maxIndex
 / 2] = (tree[maxIndex] >Åree[maxIndex - 1] ?Åree[maxIndex] :Åree[maxIndex - 1]);

549 
maxIndex
 /= 2;

552 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_asyncqueue.c

	@/media/programs/workdir/stlib/trunk/src/st_avltree.c

1 
	~<°dio.h
>

2 
	~<mÆloc.h
>

3 
	~"°_av…ªe.h
"

4 
	~"°_log.h
"

8 
°öt
 
	$Height
(
AVLTªe
 
pNode
)

10 i‡(
NULL
 =
pNode
)

13  
pNode
->
nHeight
;

14 
	}
}

23 
AVLTªe
 
	$SögÀRŸ©eWôhLe·
(
AVLTªe
 
pNode
)

25 
AVLTªe
 
pNode1
;

28 
pNode1
 = 
pNode
->
pLe·
;

29 
pNode
->
pLe·
 = 
pNode1
->
pRight
;

30 
pNode1
->
pRight
 = 
pNode
;

33 
pNode
->
nHeight
 = 
	`MAX
(
	`Height
’Node->
pLe·
), Height’Node->
pRight
)) + 1;

34 
pNode1
->
nHeight
 = 
	`MAX
(
	`Height
’Node1->
pLe·
), 
pNode
->nHeight) + 1;

37  
pNode1
;

38 
	}
}

48 
AVLTªe
 
	$SögÀRŸ©eWôhRight
(
AVLTªe
 
pNode
)

50 
AVLTªe
 
pNode1
;

52 
pNode1
 = 
pNode
->
pRight
;

53 
pNode
->
pRight
 = 
pNode1
->
pLe·
;

54 
pNode1
->
pLe·
 = 
pNode
;

57 
pNode
->
nHeight
 = 
	`MAX
(
	`Height
’Node->
pLe·
), Height’Node->
pRight
)) + 1;

58 
pNode1
->
nHeight
 = 
	`MAX
(
	`Height
’Node1->
pRight
), 
pNode
->nHeight) + 1;

60  
pNode1
;

61 
	}
}

64 
AVLTªe
 
	$DoubÀRŸ©eWôhLe·
(
AVLTªe
 
pNode
)

66 
pNode
->
pLe·
 = 
	`SögÀRŸ©eWôhRight
(pNode->pLeft);

68  
	`SögÀRŸ©eWôhLe·
(
pNode
);

69 
	}
}

71 
AVLTªe
 
	$DoubÀRŸ©eWôhRight
(
AVLTªe
 
pNode
)

73 
pNode
->
pRight
 = 
	`SögÀRŸ©eWôhLe·
(pNode->pRight);

75  
	`SögÀRŸ©eWôhRight
(
pNode
);

76 
	}
}

79 
AVLTªe
 
	$RŸ©e
(
AVLTªe
 
T
)

81 if(
	`Height
(
T
->
pLe·
Ë- Height(T->
pRight
) == 2){

82 if(
	`Height
(
T
->
pLe·
->pLe·Ë>Height(T->pLe·->
pRight
)){

83 
T
 = 
	`SögÀRŸ©eWôhLe·
(T);

86 
T
 = 
	`DoubÀRŸ©eWôhLe·
(T);

89 if(
	`Height
(
T
->
pRight
Ë- Height(T->
pLe·
) ==2){

90 if(
	`Height
(
T
->
pRight
->pRightË>Height(T->pRight->
pLe·
)){

91 
T
 = 
	`SögÀRŸ©eWôhRight
(T);

94 
T
 = 
	`DoubÀRŸ©eWôhRight
(T);

97  
T
;

98 
	}
}

102 
AVLTªe
 
	$°_av…ªe_ö£π
(
AVLEÀmTy≥
 
nD©a
, 
AVLTªe
 
pNode
)

104 i‡(
NULL
 =
pNode
)

106 
pNode
 = (
AVLTªe
)
	`mÆloc
((
AVLNode
));

107 if(
NULL
 =
pNode
)

109 
	`__îr
("alloc mem forÅree failed !\n");

110 
	`exô
(0);

112 
pNode
->
nD©a
 =ÇData;

113 
pNode
->
nHeight
 = 0;

114 
pNode
->
pLe·
 =ÖNode->
pRight
 = 
NULL
;

116 i‡(
nD©a
 < 
pNode
->nData)

118 
pNode
->
pLe·
 = 
	`°_av…ªe_ö£π
(
nD©a
,ÖNode->pLeft);

119 i‡(
	`Height
(
pNode
->
pLe·
Ë- Height’Node->
pRight
) == 2)

121 
	`__msg
("l[%d]\n", 
	`Height
(
pNode
->
pLe·
Ë- Height’Node->
pRight
));

122 i‡(
nD©a
 < 
pNode
->
pLe·
->nData)

125 
pNode
 = 
	`SögÀRŸ©eWôhLe·
(pNode);

130 
pNode
 = 
	`DoubÀRŸ©eWôhLe·
(pNode);

134 i‡(
nD©a
 > 
pNode
->nData)

136 
pNode
->
pRight
 = 
	`°_av…ªe_ö£π
(
nD©a
,ÖNode->pRight);

137 i‡(
	`Height
(
pNode
->
pRight
Ë- Height’Node->
pLe·
) == 2)

139 
	`__msg
("r[%d]\n", 
	`Height
(
pNode
->
pRight
Ë- Height’Node->
pLe·
));

140 i‡(
nD©a
 > 
pNode
->
pRight
->nData)

143 
pNode
 = 
	`SögÀRŸ©eWôhRight
(pNode);

148 
pNode
 = 
	`DoubÀRŸ©eWôhRight
(pNode);

153 
pNode
->
nHeight
 = 
	`MAX
(
	`Height
’Node->
pLe·
), Height’Node->
pRight
)) + 1;

155  
pNode
;

156 
	}
}

160 
AVLTªe
 
	$°_av…ªe_dñëe
(
AVLTªe
 
pRoŸ
, 
AVLEÀmTy≥
 
key
)

162 if(
NULL
 =
pRoŸ
)

163  
NULL
 ;

165 if(
key
 =
pRoŸ
->
nD©a
)

168 if(
NULL
 =
pRoŸ
->
pLe·
)

170 
AVLTªe
 
ãmp
 = 
pRoŸ
 ;

171 
pRoŸ
 =ÖRoŸ->
pLe·
 ;

172 
	`‰ì
(
ãmp
) ;

176 
AVLTªe
 
ãmp
 = 
pRoŸ
 ;

177 
ãmp
->
pLe·
 !
NULL
)

179 
ãmp
 =Åemp->
pLe·
;

181 
pRoŸ
->
nD©a
 = 
ãmp
->nData;

182 
pRoŸ
->
pRight
 = 
	`°_av…ªe_dñëe
’RoŸ->pRight, 
ãmp
->
nD©a
);

183 
pRoŸ
->
nHeight
 = 
	`MAX
(
	`Height
’RoŸ->
pLe·
), Height’RoŸ->
pRight
)) + 1;

184 
	`‰ì
(
ãmp
) ;

186  
pRoŸ
 ;

189 
AVLTªe
 
q
, 
s
;

191 if(
NULL
 =(
pRoŸ
)->
pRight
)

193 
q
 = 
pRoŸ
;

194 
pRoŸ
 = (pRoŸ)->
pLe·
;

195 
	`‰ì
(
q
);

197 if(
NULL
 =(
pRoŸ
)->
pLe·
)

199 
q
 = 
pRoŸ
;

200 
pRoŸ
 = (pRoŸ)->
pRight
;

201 
	`‰ì
(
q
);

205 
q
 = 
pRoŸ
;

206 
s
 = (
pRoŸ
)->
pLe·
;

207 
s
->
pRight
)

209 
q
 = 
s
;

210 
s
 = s->
pRight
;

213 (
pRoŸ
)->
nD©a
 = 
s
->nData;

214 if(
q
 !
pRoŸ
)

215 
q
->
pRight
 = 
s
->
pLe·
;

217 
q
->
pLe·
 = 
s
->pLeft;

218 
	`‰ì
(
s
);

219 
s
->
pLe·
 = s->
pRight
 = 
NULL
 ;

220 
s
 = 
NULL
 ;

222  
pRoŸ
 ;

225 if(
key
 < 
pRoŸ
->
nD©a
)

227 
pRoŸ
->
pLe·
 = 
	`°_av…ªe_dñëe
’RoŸ->pLe·, 
key
);

231 
pRoŸ
->
pRight
 = 
	`°_av…ªe_dñëe
’RoŸ->pRight, 
key
);

234 
pRoŸ
->
nHeight
 = 
	`MAX
(
	`Height
’RoŸ->
pLe·
), Height’RoŸ->
pRight
)) + 1;

235 if(
pRoŸ
->
pLe·
 !
NULL
){

236 
pRoŸ
->
pLe·
 = 
	`RŸ©e
(pRoot->pLeft);

238 if(
pRoŸ
->
pRight
 !
NULL
){

239 
pRoŸ
->
pRight
 = 
	`RŸ©e
(pRoot->pRight);

241 
pRoŸ
 = 
	`RŸ©e
(pRoot);

244  
pRoŸ
;

246 
	}
}

253 
°öt
 
	$°_av…ªe_föd
(
AVLEÀmTy≥
 
d©a
, 
AVLTªe
 
pRoŸ
)

255 
°öt
 
k
=1;

256 i‡(
NULL
 =
pRoŸ
)

258 
	`__îr
("nŸ föd %dÅimes\n", 
k
);

262 if(
d©a
 =
pRoŸ
->
nD©a
)

264 
	`__îr
("föd:%dÅimes\n", 
k
);

267 if(
d©a
 < 
pRoŸ
->
nD©a
)

269 ++
k
;

270  
	`°_av…ªe_föd
(
d©a
, 
pRoŸ
->
pLe·
);

272 if(
d©a
 > 
pRoŸ
->
nD©a
)

274 ++
k
;

275  
	`°_av…ªe_föd
(
d©a
, 
pRoŸ
->
pRight
);

277 
	}
}

280 
	$°_av…ªe_de°roy
(
AVLTªe
* 
µRoŸ
)

282 i‡(
NULL
 =
µRoŸ
 || NULL == *ppRoot)

285 
	`°_av…ªe_de°roy
(&((*
µRoŸ
)->
pLe·
));

286 
	`°_av…ªe_de°roy
(&((*
µRoŸ
)->
pRight
));

287 
	`‰ì
(*
µRoŸ
);

288 *
µRoŸ
 = 
NULL
;

289 
	}
}

292 
	$°_av…ªe_åavî£
(
AVLTªe
 
pRoŸ
)

294 
°öt
 
n
 = 0;

296 i‡(
NULL
 =
pRoŸ
)

300 
	`°_av…ªe_åavî£
(
pRoŸ
->
pLe·
);

301 
	`¥ötf
("[%d]nD©®%u, [%d]\n", ++
n
, 
pRoŸ
->
nD©a
,ÖRoŸ->
nHeight
);

302 
	`°_av…ªe_åavî£
(
pRoŸ
->
pRight
);

303 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_btree.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<mÆloc.h
>

4 
	~"°_båì.h
"

5 
	~"°_log.h
"

8 
TEÀmTy≥
 
	gSPACE
 = ' ';

11 
°öt
 
	$°_båì_öô
(
ST_BTREE
 *
T
)

13 *
T
 = 
NULL
 ;

15 
	}
}

19 
	$°_båì_de°roy
(
ST_BTREE
 *
T
)

21 if(*
T
)

23 if((*
T
)->
lchûd
)

24 
	`°_båì_de°roy
(&(*
T
)->
lchûd
);

25 if((*
T
)->
rchûd
)

26 
	`°_båì_de°roy
(&(*
T
)->
rchûd
);

27 
	`‰ì
(*
T
);

28 *
T
=
NULL
;

30 
	}
}

36 
	$°_båì_¸óã
(
ST_BTREE
 *
T
)

38 
TEÀmTy≥
 
ch
;

39 
	`sˇnf
("%c",&
ch
);

42 if(
SPACE
 =
ch
)

44 *
T
 = 
NULL
 ;

48 *
T
 = (
ST_BTREE
)
	`mÆloc
((
ST_BNODE
));

49 if(
NULL
 =(*
T
))

51 
	`__îr
("alloc mem forÅree failed !\n");

52 
	`exô
(0);

54 (*
T
)->
d©a
 = 
ch
 ;

55 
	`°_båì_¸óã
(&(*
T
)->
lchûd
);

56 
	`°_båì_¸óã
(&(*
T
)->
rchûd
);

58 
	}
}

63 
°öt
 
	$°_båì_em±y
(
ST_BTREE
 
T
)

65 if(
NULL
 !
T
)

69 
	}
}

74 
°öt
 
	$°_båì_dïth
(
ST_BTREE
 
T
)

76 
°öt
 
r
 ;

77 
°öt
 
l
 ;

79 if(
NULL
 =
T
)

81 if(
NULL
 !
T
->
lchûd
)

82 
l
 = 
	`°_båì_dïth
(
T
->
lchûd
) ;

84 
l
 = 0 ;

86 if(
NULL
 !
T
->
rchûd
)

87 
r
 = 
	`°_båì_dïth
(
T
->
rchûd
) ;

89 
r
 = 0 ;

91  
l
 > 
r
 ?Ü+1 :Ñ+1 ;

92 
	}
}

97 
TEÀmTy≥
 
	$°_båì_roŸ
(
ST_BTREE
 
T
)

99 if(
	`°_båì_em±y
(
T
))

100  
SPACE
 ;

102  
T
->
d©a
 ;

103 
	}
}

109 
TEÀmTy≥
 
	$°_båì_vÆue
(
ST_BTREE
 
p
)

111  
p
->
d©a
 ;

112 
	}
}

116 
	$°_båì_assign
(
ST_BTREE
 
p
,
TEÀmTy≥
 
vÆue
)

118 
p
->
d©a
 = 
vÆue
 ;

119 
	}
}

123 
°öt
 
	$InôQueue
(
LökQueue
 *
Q
)

126 (*
Q
).
‰⁄t
=(*Q).
ª¨
=(
QueuePå
)
	`mÆloc
((
QNode
));

127 if(!(*
Q
).
‰⁄t
)

128 
	`exô
(0);

130 (*
Q
).
‰⁄t
->
√xt
=
NULL
;

132 
	}
}

135 
°öt
 
	$EnQueue
(
LökQueue
 *
Q
,
QEÀmTy≥
 
e
)

137 
QueuePå
 
p
=(QueuePå)
	`mÆloc
((
QNode
));

138 if(!
p
)

139 
	`exô
(0);

141 
p
->
d©a
=
e
;

142 
p
->
√xt
=
NULL
;

144 (*
Q
).
ª¨
->
√xt
=
p
;

145 (*
Q
).
ª¨
=
p
;

147 
	}
}

150 
°öt
 
	$DeQueue
(
LökQueue
 *
Q
,
QEÀmTy≥
 *
e
)

152 
QueuePå
 
p
;

153 if((*
Q
).
‰⁄t
==(*Q).
ª¨
)

155 
p
=(*
Q
).
‰⁄t
->
√xt
;

156 *
e
=
p
->
d©a
;

157 (*
Q
).
‰⁄t
->
√xt
=
p
->next;

158 if((*
Q
).
ª¨
==
p
)

159 (*
Q
).
ª¨
=(*Q).
‰⁄t
;

160 
	`‰ì
(
p
);

162 
	}
}

165 
°öt
 
	$QueueEm±y
(
LökQueue
 
Q
)

167 if(
Q
.
‰⁄t
==Q.
ª¨
)

171 
	}
}

176 
TEÀmTy≥
 
	$°_båì_∑ª¡
(
ST_BTREE
 
T
,
TEÀmTy≥
 
e
)

178 
QEÀmTy≥
 
a
;

179 
STQueue
 *
q
 ;

180 
q
 = 
	`°_queue_√w
() ;

182 if(
NULL
 !
T
)

184 
	`°_queue_öô
(
q
) ;

185 
	`°_queue_push_èû
(
q
, (
°poöãr
)
T
);

186 !
	`°_queue_is_em±y
(
q
))

188 
a
 = (
QEÀmTy≥
)
	`°_queue_p›_hód
(
q
) ;

189 if((
a
->
lchûd
Ë&& (a->lchûd->
d©a
==
e
) || \

190 (
a
->
rchûd
Ë&& (a->rchûd->
d©a
==
e
))

192  
a
->
d©a
 ;

196 if(
a
->
lchûd
)

197 
	`°_queue_push_èû
(
q
, (
°poöãr
)
a
->
rchûd
);

198 if(
a
->
rchûd
)

199 
	`°_queue_push_èû
(
q
, (
°poöãr
)
a
->
rchûd
);

204  
SPACE
 ;

205 
	}
}

212 
ST_BTREE
 
	$°_båì_poöt
(
ST_BTREE
 
T
,
TEÀmTy≥
 
s
)

214 
QEÀmTy≥
 
a
;

215 
STQueue
 *
q
 ;

216 
q
 = 
	`°_queue_√w
() ;

218 if(
NULL
 !
T
)

220 
	`°_queue_öô
(
q
) ;

221 
	`°_queue_push_èû
(
q
, (
°poöãr
)
T
);

223 !
	`°_queue_is_em±y
(
q
))

225 
a
 = (
QEÀmTy≥
)
	`°_queue_p›_hód
(
q
) ;

226 if(
a
->
d©a
 =
s
)

227  
a
;

228 if(
a
->
lchûd
)

229 
	`°_queue_push_èû
(
q
, (
°poöãr
)
a
->
lchûd
);

230 if(
a
->
rchûd
)

231 
	`°_queue_push_èû
(
q
, (
°poöãr
)
a
->
rchûd
);

235  
NULL
 ;

236 
	}
}

241 
TEÀmTy≥
 
	$°_båì_À·_chûd
(
ST_BTREE
 
T
,
TEÀmTy≥
 
e
)

243 
ST_BTREE
 
a
 ;

245 if(
NULL
 !
T
)

247 
a
 = 
	`°_båì_poöt
(
T
, 
e
) ;

248 if(
a
 &&á->
lchûd
)

249  
a
->
lchûd
->
d©a
 ;

252  
SPACE
 ;

253 
	}
}

258 
TEÀmTy≥
 
	$°_båì_right_chûd
(
ST_BTREE
 
T
,
TEÀmTy≥
 
e
)

260 
ST_BTREE
 
a
 ;

262 if(
NULL
 !
T
)

264 
a
 = 
	`°_båì_poöt
(
T
, 
e
);

265 if(
a
 &&á->
rchûd
)

266  
a
->
rchûd
->
d©a
 ;

269  
SPACE
 ;

270 
	}
}

276 
TEÀmTy≥
 
	$°_båì_À·_siblög
(
ST_BTREE
 
T
,
TEÀmTy≥
 
e
)

278 
TEÀmTy≥
 
a
;

279 
ST_BTREE
 
p
;

281 if(
NULL
 !
T
)

283 
a
 = 
	`°_båì_∑ª¡
(
T
, 
e
) ;

284 if(
SPACE
 =
a
)

285  
SPACE
 ;

286 
p
 = 
	`°_båì_poöt
(
T
, 
a
);

287 if(
p
->
lchûd
 &&Ö->
rchûd
 &&Ö->rchûd->
d©a
 =
e
)

288  
p
->
lchûd
->
d©a
 ;

292  
SPACE
 ;

293 
	}
}

298 
TEÀmTy≥
 
	$°_båì_right_siblög
(
ST_BTREE
 
T
,
TEÀmTy≥
 
e
)

300 
TEÀmTy≥
 
a
;

301 
ST_BTREE
 
p
;

303 if(
NULL
 !
T
)

305 
a
 = 
	`°_båì_∑ª¡
(
T
, 
e
);

306 if(
SPACE
 =
a
)

307  
SPACE
 ;

309 
p
 = 
	`°_båì_poöt
(
T
, 
a
);

310 if(
p
->
lchûd
 &&Ö->
rchûd
 &&Ö->lchûd->
d©a
 =
e
)

311  
p
->
rchûd
->
d©a
 ;

314  
SPACE
 ;

315 
	}
}

322 
°öt
 
	$°_båì_ö£π_chûd
(
ST_BTREE
 
p
, 
°öt
 
LR
,ST_BTREE 
c
)

324 if(
NULL
 !
p
)

326 if(0 =
LR
)

328 
c
->
rchûd
 = 
p
->
lchûd
;

329 
p
->
lchûd
 = 
c
;

333 
c
->
rchûd
=
p
->rchild;

334 
p
->
rchûd
=
c
;

340 
	}
}

345 
°öt
 
	$°_båì_dñëe_chûd
(
ST_BTREE
 
p
, 
°öt
 
LR
)

347 if(
NULL
 !
p
)

349 if(0 =
LR
)

351 
	`STCÀ¨Båì
(&
p
->
lchûd
);

355 
	`STCÀ¨Båì
(&
p
->
rchûd
);

361 
	}
}

365 
	$°_båì_¥e‹dî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

367 if(
NULL
 !
T
)

369 
	`Visô
(
T
->
d©a
);

370 
	`°_båì_¥e‹dî_åavî£
(
T
->
lchûd
, 
Visô
);

371 
	`°_båì_¥e‹dî_åavî£
(
T
->
rchûd
, 
Visô
);

373 
	}
}

376 
	$°_båì_¥e‹dî_åavî£_ôî©i⁄
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

378 
ST_BTREE
 
p
 ;

379 
SEÀmTy≥
 
°ack
[100];

380 
°öt
 
t›
 ;

381 
p
=
T
;

383 if(
T
!=
NULL
)

385 
t›
=1;

386 
°ack
[
t›
]=
p
;

387 
t›
>0)

389 
p
=
°ack
[
t›
] ;

390 
t›
--;

391 
	`Visô
(
p
->
d©a
) ;

392 if(
p
->
rchûd
!=
NULL
)

394 
t›
++;

395 
°ack
[
t›
]=
p
->
rchûd
;

397 if(
p
->
lchûd
!=
NULL
)

399 
t›
++;

400 
°ack
[
t›
]=
p
->
lchûd
;

404 
	`¥ötf
("\n");

405 
	}
}

410 
	$°_båì_mid‹dî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

412 if(
NULL
 !
T
)

414 
	`°_båì_mid‹dî_åavî£
(
T
->
lchûd
, 
Visô
) ;

415 
	`Visô
(
T
->
d©a
);

416 
	`°_båì_mid‹dî_åavî£
(
T
->
rchûd
, 
Visô
) ;

418 
	}
}

421 
	$°_båì_mid‹dî_åavî£_ôî©i⁄
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

423 
ST_BTREE
 
p
 ;

424 
SEÀmTy≥
 
°ack
[100];

425 
°öt
 
t›
=0;

426 
p
=
T
;

429 
p
!=
NULL
)

431 
t›
++;

432 
°ack
[
t›
]=
p
;

433 
p
ı->
lchûd
;

435 if(
t›
>0)

437 
p
=
°ack
[
t›
];

438 
t›
--;

439 
	`Visô
(
p
->
d©a
);

440 
p
ı->
rchûd
;

442 }
p
!=
NULL
||
t›
!=0);

443 
	`¥ötf
("\n");

444 
	}
}

450 
°öt
 
	$InôSèck
(
SqSèck
 *
S
)

453 (*
S
).
ba£
 = (
SEÀmTy≥
 *)
	`mÆloc
(
STACK_INIT_SIZE
*(SElemType));

454 if–!(*
S
).
ba£
 )

455 
	`exô
(0);

456 (*
S
).
t›
 = (*S).
ba£
;

457 (*
S
).
°acksize
 = 
STACK_INIT_SIZE
;

459 
	}
}

462 
°öt
 
	$SèckEm±y
(
SqSèck
 
S
)

464 if(
S
.
t›
 =S.
ba£
)

468 
	}
}

471 
°öt
 
	$GëT›
(
SqSèck
 
S
,
SEÀmTy≥
 *
e
)

473 if(
S
.
t›
 > S.
ba£
)

475 *
e
 = *(
S
.
t›
-1);

480 
	}
}

483 
°öt
 
	$Push
(
SqSèck
 *
S
, 
SEÀmTy≥
 
e
)

485 if((*
S
).
t›
 - (*S).
ba£
 >(*S).
°acksize
)

487 (*
S
).
ba£
 = (
SEÀmTy≥
 *)
	`ªÆloc
((*S).base,

488 ((*
S
).
°acksize
 + 
STACKINCREMENT
Ë* (
SEÀmTy≥
));

489 if–!(*
S
).
ba£
 )

490 
	`exô
(0);

491 (*
S
).
t›
 = (*S).
ba£
+(*S).
°acksize
;

492 (*
S
).
°acksize
 +
STACKINCREMENT
;

494 *((*
S
).
t›
)++=
e
;

497 
	}
}

500 
°öt
 
	$P›
(
SqSèck
 *
S
,
SEÀmTy≥
 *
e
)

502 if((*
S
).
t›
 =(*S).
ba£
)

504 *
e
 = *--(*
S
).
t›
;

507 
	}
}

511 
°öt
 
	$°_båì_mid‹dî_ôî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

513 
SqSèck
 
S
;

514 
	`InôSèck
(&
S
);

516 (
NULL
 !
T
Ë|| !
	`SèckEm±y
(
S
))

518 if(
T
)

520 
	`Push
(&
S
,
T
);

521 
T
 = T->
lchûd
;

525 
	`P›
(&
S
,&
T
);

526 if(!
	`Visô
(
T
->
d©a
))

528 
T
 = T->
rchûd
;

531 
	`¥ötf
("\n");

533 
	}
}

540 
°öt
 
	$°_båì_mid‹dî_ôî_åavî£2
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

542 
SqSèck
 
S
;

543 
ST_BTREE
 
p
;

544 
	`InôSèck
(&
S
);

545 
	`Push
(&
S
,
T
);

547 !
	`SèckEm±y
(
S
))

549 
	`GëT›
(
S
,&
p
)&&p)

550 
	`Push
(&
S
,
p
->
lchûd
);

551 
	`P›
(&
S
,&
p
);

552 if(!
	`SèckEm±y
(
S
))

554 
	`P›
(&
S
,&
p
);

555 if(!
	`Visô
(
p
->
d©a
))

557 
	`Push
(&
S
,
p
->
rchûd
);

560 
	`¥ötf
("\n");

562 
	}
}

567 
	$°_båì_pos‹dî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

569 if(
NULL
 !
T
)

571 
	`°_båì_pos‹dî_åavî£
(
T
->
lchûd
, 
Visô
);

572 
	`°_båì_pos‹dî_åavî£
(
T
->
rchûd
, 
Visô
);

573 
	`Visô
(
T
->
d©a
) ;

575 
	}
}

578 
	$°_båì_pos‹dî_åavî£_ôî©i⁄
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

580 
ST_BTREE
 
p
 ;

581 
SEÀmTy≥
 
s
[100];

582 
°öt
 
t›
=-1;

583 
°öt
 
Êag
[100];

585 
p
 = 
T
 ;

586 
p
 !
NULL
 || 
t›
 != -1)

588 
p
)

590 
t›
++;

591 
Êag
[
t›
] = 0;

592 
s
[
t›
] = 
p
;

593 
p
 =Ö->
lchûd
;

596 
t›
 >0 && 
Êag
[top] == 1)

598 
p
 = 
s
[
t›
];

599 
	`Visô
(
p
->
d©a
) ;

600 
t›
--;

602 if(
t›
>=0)

604 
p
 = 
s
[
t›
];

605 
Êag
[
t›
] = 1;

606 
p
 =Ö->
rchûd
;

610 
p
 = 
NULL
;

613 
	`¥ötf
("\n");

614 
	}
}

618 
	$°_båì_Àvñ_‹dî_åavî£
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

620 
QEÀmTy≥
 
a
;

621 
STQueue
 *
q
 ;

622 
q
 = 
	`°_queue_√w
() ;

624 if(
T
)

626 
	`°_queue_öô
(
q
) ;

627 
	`°_queue_push_èû
(
q
, (
°poöãr
)
T
);

628 !
	`°_queue_is_em±y
(
q
))

630 
a
 = (
QEÀmTy≥
)
	`°_queue_p›_hód
(
q
) ;

631 
	`Visô
(
a
->
d©a
);

632 if(
a
->
lchûd
!=
NULL
)

633 
	`°_queue_push_èû
(
q
, (
°poöãr
)
a
->
lchûd
);

634 if(
a
->
rchûd
!=
NULL
)

635 
	`°_queue_push_èû
(
q
, (
°poöãr
)
a
->
rchûd
);

637 
	`¥ötf
("\n");

639 
	}
}

642 
	$°_båì_exch™ge_LR
(
ST_BTREE
 
T
)

644 
ST_BTREE
 
ãmp
;

645 if(
T
)

647 
	`°_båì_exch™ge_LR
(
T
->
lchûd
);

648 
	`°_båì_exch™ge_LR
(
T
->
rchûd
);

649 
ãmp
 = 
T
->
lchûd
;

650 
T
->
lchûd
 = T->
rchûd
;

651 
T
->
rchûd
 = 
ãmp
;

653 
	}
}

657 
	$°_båì_ôî©i⁄_exch™ge_LR
(
ST_BTREE
 
T
)

659 
ST_BTREE
 
ãmp
;

660 
SEÀmTy≥
 
s
[100];

661 
°öt
 
t›
=0;

663 
T
 || 
t›
)

665 if(
T
)

667 
s
[
t›
++] = 
T
;

668 
ãmp
 = 
T
->
lchûd
;

669 
T
->
lchûd
 = T->
rchûd
;

670 
T
->
rchûd
 = 
ãmp
;

671 
T
 = T->
lchûd
;

675 
T
 = 
s
[--
t›
]->
rchûd
;

678 
	}
}

682 
°öt
 
	$°_båì_Àaves_num
(
ST_BTREE
 
T
)

684 if(
T
)

686 if(
T
->
lchûd
 =
NULL
 && T->
rchûd
 == NULL)

690  (
	`°_båì_Àaves_num
(
T
->
lchûd
Ë+ st_båì_Àaves_num(T->
rchûd
));

696 
	}
}

699 
°öt
 
	$°_båì_Àaves_num_ôî©i⁄
(
ST_BTREE
 
T
, 
VisôFunc
 
Visô
)

701 
SEÀmTy≥
 
s
[100];

702 
°öt
 
cou¡
=0,
t›
=0;

704 
T
 || 
t›
>0)

706 if(
T
)

708 
s
[
t›
++] = 
T
;

709 if(
T
->
lchûd
 =
NULL
 && T->
rchûd
 == NULL)

711 
cou¡
++;

712 
	`Visô
(
T
->
d©a
);

714 
T
 = T->
lchûd
;

718 
T
=
s
[--
t›
]->
rchûd
;

721  
cou¡
;

722 
	}
}

734 
°öt
 
	$°_b°ªe_öô
(
BSTªe
 *
DT
)

736 *
DT
 = 
NULL
 ;

738 
	}
}

742 
	$°_b°ªe_de°roy
(
BSTªe
 *
DT
)

744 if(
NULL
 !*
DT
)

746 if(
NULL
 !(*
DT
)->
lchûd
)

747 
	`°_b°ªe_de°roy
(&(*
DT
)->
lchûd
) ;

748 if(
NULL
 !(*
DT
)->
rchûd
)

749 
	`°_b°ªe_de°roy
(&(*
DT
)->
rchûd
) ;

750 
	`‰ì
(*
DT
) ;

751 *
DT
 = 
NULL
 ;

753 
	}
}

759 
BSTªe
 
	$°_b°ªe_£¨ch
(
BSTªe
 
T
,
BSTKeyTy≥
 
key
)

761 if((
NULL
 =
T
Ë|| (
key
 =T->
d©a
.key))

762  
T
;

763 if(
key
 < 
T
->
d©a
.key)

764  
	`°_b°ªe_£¨ch
(
T
->
lchûd
,
key
);

766  
	`°_b°ªe_£¨ch
(
T
->
rchûd
,
key
);

767 
	}
}

775 
	$°_b°ªe_£¨ch1
(
BSTªe
 *
T
, 
BSTKeyTy≥
 
key
, BSTªê
f
, BSTªê*
p
, 
°öt
 *
Êag
)

777 if(
NULL
 =(*
T
))

779 *
p
 = 
f
;

780 *
Êag
 = 0;

782 if(
key
 =(*
T
)->
d©a
.key)

784 *
p
 = *
T
;

785 *
Êag
 = 1;

787 if(
key
 < (*
T
)->
d©a
.key)

788 
	`°_b°ªe_£¨ch1
(&(*
T
)->
lchûd
, 
key
, *T, 
p
, 
Êag
);

790 
	`°_b°ªe_£¨ch1
(&(*
T
)->
rchûd
, 
key
, *T, 
p
, 
Êag
);

791 
	}
}

798 
°öt
 
	$°_b°ªe_ö£π
(
BSTªe
 *
T
, 
BSTEÀmTy≥
 
e
)

800 
BSTªe
 
p
,
s
;

801 
°öt
 
Êag
;

803 
	`°_b°ªe_£¨ch1
(
T
, 
e
.
key
, 
NULL
, &
p
, &
Êag
);

804 if(!
Êag
)

806 
s
=(
BSTªe
)
	`mÆloc
((
BSTNode
));

807 
s
->
d©a
=
e
;

808 
s
->
lchûd
=s->
rchûd
=
NULL
;

810 if(
NULL
 =
p
)

811 *
T
 = 
s
;

812 if(
e
.
key
 < 
p
->
d©a
.key)

813 
p
->
lchûd
 = 
s
;

815 
p
->
rchûd
 = 
s
;

820 
	}
}

826 
	$°_b°ªe_dñëe_node
(
BSTªe
 *
p
)

828 
BSTªe
 
q
, 
s
;

831 if(
NULL
 =(*
p
)->
rchûd
)

833 
q
 = *
p
;

834 *
p
 = (*p)->
lchûd
;

835 
	`‰ì
(
q
);

837 if(
NULL
 =(*
p
)->
lchûd
)

839 
q
 = *
p
;

840 *
p
 = (*p)->
rchûd
;

841 
	`‰ì
(
q
);

845 
q
 = *
p
;

846 
s
 = (*
p
)->
lchûd
;

847 
s
->
rchûd
)

849 
q
 = 
s
;

850 
s
 = s->
rchûd
;

853 (*
p
)->
d©a
 = 
s
->data;

854 if(
q
 !*
p
)

855 
q
->
rchûd
 = 
s
->
lchûd
;

857 
q
->
lchûd
 = 
s
->lchild;

858 
	`‰ì
(
s
);

859 
s
->
lchûd
 = s->
rchûd
 = 
NULL
 ;

860 
s
 = 
NULL
 ;

862 
	}
}

868 
°öt
 
	$°_b°ªe_dñëe_key
(
BSTªe
 *
T
,
BSTKeyTy≥
 
key
)

870 if(
NULL
 =*
T
)

874 if(
key
 =(*
T
)->
d©a
.key)

875 
	`°_b°ªe_dñëe_node
(
T
);

876 if(
key
 < (*
T
)->
d©a
.key)

877 
	`°_b°ªe_dñëe_key
(&(*
T
)->
lchûd
,
key
);

879 
	`°_b°ªe_dñëe_key
(&(*
T
)->
rchûd
,
key
);

882 
	}
}

888 
	$°_b°ªe_dñëe_åavî£
(
BSTªe
 
DT
,
VisôBST
 
Visô
)

890 if(
NULL
 !
DT
)

893 
	`°_b°ªe_dñëe_åavî£
(
DT
->
lchûd
,
Visô
);

894 
	`Visô
(
DT
->
d©a
);

895 
	`°_b°ªe_dñëe_åavî£
(
DT
->
rchûd
,
Visô
);

897 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_dlist.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"°_dli°.h
"

4 
	~"°_log.h
"

8 
STDLIST
* 
	$°_dli°_œ°
(
STDLIST
* 
li°
)

10 if(
NULL
 !
li°
)

12 
NULL
 !
li°
->
√xt
)

14 
li°
 =Üi°->
√xt
 ;

18  
li°
 ;

19 
	}
}

23 
STDLIST
* 
	$°_dli°_fú°
(
STDLIST
 *
li°
)

25 if(
NULL
 !
li°
)

27 
NULL
 !
li°
->
¥ev
)

29 
li°
 =Üi°->
¥ev
 ;

33  
li°
 ;

34 
	}
}

38 
STDLIST
* 
	$°_dli°_¡h
(
STDLIST
 *
li°
, 
°uöt
 
n
)

40 (
n
-- > 0 ) && (
NULL
 !
li°
))

41 
li°
 =Üi°->
√xt
 ;

43  
li°
 ;

44 
	}
}

46 
STDLIST
* 
	$°_dli°_Æloc
()

48 
STDLIST
 *
ãmp
 = 
NULL
 ;

50 
ãmp
 = (
STDLIST
 *)
	`mÆloc
((STDLIST));

51 
ãmp
->
√xt
 = 
NULL
 ;

52 
ãmp
->
¥ev
 = 
NULL
 ;

54 if(
NULL
 =
ãmp
)

56 
	`__îr
("malloc men fail \n");

57 
	`exô
(1);

59 
	}
}

61 
	$°_dli°_‰ì1
(
STDLIST
 *
li°
)

63 if(
NULL
 !
li°
)

65 
	`‰ì
(
li°
) ;

66 
li°
 = 
NULL
 ;

68 
	}
}

70 
	$°_dli°_‰ì
(
STDLIST
 *
li°
)

72 
STDLIST
* 
ãmp
 = 
NULL
 ;

74 if(
NULL
 !
li°
)

78 
ãmp
 = 
li°
 ;

79 
li°
 =Üi°->
√xt
 ;

80 
	`°_dli°_‰ì1
(
ãmp
);

81 }
NULL
 !
li°
);

83 
	}
}

87 
STDLIST
* 
	$°_dli°_≠≥nd
(
STDLIST
 *
li°
, 
°poöãr
 
d©a
)

89 
STDLIST
* 
√w_li°
 = 
NULL
 ;

90 
STDLIST
* 
œ°
 = 
NULL
 ;

92 
√w_li°
 = 
	`°_dli°_Æloc
();

93 
√w_li°
->
d©a
 = data ;

94 
√w_li°
->
√xt
 = 
NULL
 ;

96 if(
NULL
 !
li°
)

98 
œ°
 = 
	`°_dli°_œ°
(
li°
);

99 
œ°
->
√xt
 = 
√w_li°
 ;

100 
√w_li°
->
¥ev
 = 
œ°
 ;

102  
li°
 ;

106 
√w_li°
->
¥ev
 = 
NULL
 ;

108  
√w_li°
 ;

110 
	}
}

113 
STDLIST
* 
	$°_dli°_¥ïíd
(
STDLIST
 *
li°
, 
°poöãr
 
d©a
)

115 
STDLIST
* 
√w_li°
 = 
NULL
 ;

117 
√w_li°
 = 
	`°_dli°_Æloc
();

118 
√w_li°
->
d©a
 = data ;

119 
√w_li°
->
√xt
 = 
li°
 ;

121 if(
NULL
 !
li°
)

123 
√w_li°
->
¥ev
 = 
li°
->prev ;

124 if(
NULL
 !
li°
->
¥ev
)

126 
li°
->
¥ev
->
√xt
 = 
√w_li°
 ;

128 
li°
->
¥ev
 = 
√w_li°
 ;

132 
√w_li°
->
¥ev
 = 
NULL
 ;

135  
√w_li°
 ;

136 
	}
}

140 
STDLIST
* 
	$°_dli°_ö£π
(
STDLIST
 *
li°
, 
°poöãr
 
d©a
, 
°öt
 
posôi⁄
)

142 
STDLIST
* 
√w_li°
 = 
NULL
 ;

143 
STDLIST
* 
tmp_li°
 = 
NULL
 ;

145 if(
posôi⁄
 < 0)

147  
	`°_dli°_≠≥nd
(
li°
, 
d©a
);

149 if(0 =
posôi⁄
)

151  
	`°_dli°_¥ïíd
(
li°
, 
d©a
);

154 
tmp_li°
 = 
	`°_dli°_¡h
(
li°
, 
posôi⁄
);

155 if(
NULL
 =
tmp_li°
)

157  
	`°_dli°_≠≥nd
(
li°
, 
d©a
);

160 
√w_li°
 = 
	`°_dli°_Æloc
() ;

161 
√w_li°
->
d©a
 = data ;

162 
√w_li°
->
¥ev
 = 
tmp_li°
->prev ;

163 if(
NULL
 !
tmp_li°
->
¥ev
)

165 
tmp_li°
->
¥ev
->
√xt
 = 
√w_li°
 ;

167 
√w_li°
->
√xt
 = 
tmp_li°
 ;

168 
tmp_li°
->
¥ev
 = 
√w_li°
 ;

170 if(
tmp_li°
 =
li°
)

171  
√w_li°
 ;

173  
li°
 ;

175 
	}
}

178 
STDLIST
* 
	$°_dli°_ö£π_s‹ãd
(
STDLIST
 *
li°
,

179 
°poöãr
 
d©a
,

180 
STCom∑ªFunc
 
func
)

183 
	}
}

187 
STDLIST
* 
	$°_dli°_ö£π_bef‹e
(
STDLIST
 *
li°
,

188 
STDLIST
 *
siblög
,

189 
°poöãr
 
d©a
)

191 if(
NULL
 =
li°
)

193 
li°
 = 
	`°_dli°_Æloc
() ;

194 
li°
->
d©a
 = data ;

195  
li°
 ;

197 i‡(
siblög
)

199 
STDLIST
* 
node
 = 
NULL
 ;

200 
node
->
d©a
 = data ;

201 
node
->
¥ev
 = 
siblög
->prev ;

202 
node
->
√xt
 = 
siblög
 ;

203 
siblög
->
¥ev
 = 
node
 ;

204 if(
NULL
 !
node
->
¥ev
)

206 
node
->
¥ev
->
√xt
 =Çode ;

207  
li°
 ;

211  
node
 ;

216 
STDLIST
* 
œ°
 = 
NULL
 ;

218 
œ°
 = 
	`°_dli°_œ°
(
li°
);

220 
œ°
 = 
li°
 ;

221 
œ°
->
√xt
)

223 
œ°
 =Üa°->
√xt
 ;

226 
œ°
->
√xt
 = 
	`°_dli°_Æloc
() ;

227 
œ°
->
√xt
->
d©a
 = data ;

228 
œ°
->
√xt
->
¥ev
 =Üast ;

229 
œ°
->
√xt
->√xà
NULL
 ;

231  
li°
 ;

233 
	}
}

236 
STDLIST
* 
	$°_dli°_c⁄ˇt
(
STDLIST
 *
li°1
, STDLIST *
li°2
)

238 
STDLIST
* 
ãmp_li°
 = 
NULL
 ;

240 
ãmp_li°
 = 
	`°_dli°_œ°
(
li°1
) ;

242 if(
NULL
 !
ãmp_li°
)

244 
ãmp_li°
->
√xt
 = 
li°2
 ;

248 
li°1
 = 
li°2
 ;

250 
li°2
->
¥ev
 = 
ãmp_li°
 ;

252  
li°1
 ;

253 
	}
}

256 
STDLIST
* 
	$°_dli°_ªmove
(
STDLIST
 *
li°
, 
°c⁄°poöãr
 
d©a
)

258 
STDLIST
* 
tmp_lsô
 = 
NULL
 ;

260 
tmp_lsô
 = 
li°
 ;

261 
tmp_lsô
)

263 if(
tmp_lsô
->
d©a
 != data)

265 
tmp_lsô
 =Åmp_lsô->
√xt
 ;

269 if(
NULL
 !
tmp_lsô
->
¥ev
)

270 
tmp_lsô
->
¥ev
->
√xt
 =Åmp_lsit->next ;

271 if(
NULL
 !
tmp_lsô
->
√xt
)

272 
tmp_lsô
->
√xt
->
¥ev
 =Åmp_lsit->prev ;

273 if(
li°
 =
tmp_lsô
)

274 
li°
 =Üi°->
√xt
 ;

275 
	`°_dli°_‰ì1
(
tmp_lsô
) ;

279  
li°
 ;

280 
	}
}

283 
STDLIST
* 
	$°_dli°_ªmove_Æl
(
STDLIST
 *
li°
, 
°c⁄°poöãr
 
d©a
)

285 
STDLIST
* 
tmp_lsô
 = 
NULL
 ;

287 
tmp_lsô
 = 
li°
 ;

289 
tmp_lsô
)

291 if(
d©a
 !
tmp_lsô
->data)

293 
tmp_lsô
 =Åmp_lsô->
√xt
 ;

297 
STDLIST
* 
√xt
 = 
tmp_lsô
->next ;

299 if(
NULL
 !
tmp_lsô
->
¥ev
)

300 
tmp_lsô
->
¥ev
->
√xt
 =Çext ;

302 
li°
 = 
√xt
 ;

304 if(
NULL
 !
tmp_lsô
->
√xt
)

305 
√xt
->
¥ev
 = 
tmp_lsô
->prev ;

307 
	`°_dli°_‰ì1
(
tmp_lsô
) ;

308 
tmp_lsô
 = 
√xt
 ;

312  
li°
 ;

313 
	}
}

318 
STDLIST
* 
	$°_dli°_ªmove_lök
(
STDLIST
 *
li°
, STDLIST *
lök_
)

320 if(
NULL
 !
li°
->
¥ev
)

321 
li°
->
¥ev
->
√xt
 =Üist->next ;

322 if(
NULL
 !
li°
->
√xt
)

323 
li°
->
√xt
->
¥ev
 =Üist->prev ;

324 if(
li°
 =
lök_
)

325 
li°
 =Üi°->
√xt
 ;

327 
li°
->
¥ev
 = 
NULL
 ;

328 
li°
->
√xt
 = 
NULL
 ;

330  
li°
 ;

331 
	}
}

336 
STDLIST
* 
	$°_dli°_dñëe_lök
(
STDLIST
 *
li°
, STDLIST *
lök_
)

338 
li°
 = 
	`°_dli°_ªmove
÷i°, 
lök_
) ;

339 
	`°_dli°_‰ì1
(
lök_
);

341  
li°
 ;

342 
	}
}

356 
STDLIST
* 
	$°_dli°_ªvî£
(
STDLIST
 *
li°
)

358 
STDLIST
 *
œ°
 = 
NULL
;

360 
li°
)

362 
œ°
 = 
li°
;

363 
li°
 = 
œ°
->
√xt
;

364 
œ°
->
√xt
 =Üa°->
¥ev
;

365 
œ°
->
¥ev
 = 
li°
;

368  
œ°
;

369 
	}
}

373 
STDLIST
* 
	$°_dli°_c›y
(
STDLIST
 *
li°
)

375 
STDLIST
* 
√w_li°
 = 
NULL
 ;

377 if(
NULL
 !
li°
)

379 
STDLIST
* 
œ°
 = 
NULL
 ;

380 
√w_li°
 = 
	`°_dli°_Æloc
();

381 
√w_li°
->
d©a
 = 
li°
->data ;

382 
√w_li°
->
¥ev
 = 
NULL
 ;

383 
œ°
 = 
√w_li°
 ;

384 
li°
 =Üi°->
√xt
 ;

385 
li°
)

387 
œ°
->
√xt
 = 
	`°_dli°_Æloc
() ;

388 
œ°
->
√xt
->
¥ev
 =Üast ;

389 
œ°
 =Üa°->
√xt
 ;

390 
œ°
->
d©a
 = 
li°
->data ;

391 
li°
 =Üi°->
√xt
 ;

393 
œ°
->
√xt
 = 
NULL
 ;

396  
√w_li°
 ;

397 
	}
}

404 
STDLIST
* 
	$°_dli°_¡h_¥ev
(
STDLIST
 *
li°
, 
°uöt
 
n
)

406 (
n
-- > 0Ë&& (
NULL
 !
li°
))

407 
li°
 =Üi°->
¥ev
 ;

409  
li°
 ;

410 
	}
}

414 
°poöãr
 
	$°_dli°_¡h_d©a
(
STDLIST
 *
li°
, 
°uöt
 
n
)

416 (
n
-- > 0Ë&& (
NULL
 !
li°
))

418 
li°
 =Üi°->
√xt
 ;

421  
li°
 ?Üi°->
d©a
 : 
NULL
 ;

423 
	}
}

427 
STDLIST
* 
	$°_dli°_föd
(
STDLIST
 *
li°
, 
°c⁄°poöãr
 
d©a
)

429 
li°
)

431 if(
li°
->
d©a
 == data)

433 
li°
 =Üi°->
√xt
 ;

436  
li°
 ;

437 
	}
}

440 
STDLIST
* 
	$°_dli°_föd_cu°om
(
STDLIST
 *
li°
,

441 
°c⁄°poöãr
 
d©a
,

442 
STCom∑ªFunc
 
func
)

444 
li°
)

446 if(!
	`func
(
li°
->
d©a
, data))

447  
li°
 ;

449 
li°
 =Üi°->
√xt
 ;

451  
NULL
 ;

452 
	}
}

455 
°öt
 
	$°_dli°_posôi⁄
(
STDLIST
 *
li°
, STDLIST *
Œök
)

457 
°öt
 
i
 = 0 ;

459 
li°
)

461 if(
li°
 =
Œök
)

462  
i
 ;

464 
li°
 =Üi°->
√xt
 ;

465 
i
++ ;

468 
	}
}

472 
°öt
 
	$°_dli°_ödex
(
STDLIST
 *
li°
,

473 
°c⁄°poöãr
 
d©a
)

475 
°öt
 
i
 = 0 ;

477 
li°
)

479 if(
li°
->
d©a
 == data)

480  
i
 ;

482 
i
++ ;

483 
li°
 =Üi°->
√xt
 ;

487 
	}
}

492 
°uöt
 
	$°_dli°_Àngth
(
STDLIST
 *
li°
)

494 
°uöt
 
Àngth
 = 0 ;

496 
li°
)

498 
li°
 =Üi°->
√xt
 ;

499 
Àngth
++ ;

501  
Àngth
 ;

502 
	}
}

506 
	$°_dli°_f‹óch
(
STDLIST
 *
li°
,

507 
STFunc
 
func
,

508 
°poöãr
 
u£r_d©a
)

510 
li°
)

512 
STDLIST
* 
√xt
 ;

513 
√xt
 = 
li°
->next ;

514 (* 
func
)(
li°
->
d©a
, 
u£r_d©a
) ;

515 
li°
 = 
√xt
 ;

518 
	}
}

523 
STDLIST
 *

524 
	$°_dli°_s‹t_mîge
 (
STDLIST
 *
l1
,

525 
STDLIST
 *
l2
,

526 
STFunc
 
com∑ª_func
,

527 
°poöãr
 
u£r_d©a
)

529 
STDLIST
 
li°
, *
l
, *
Õªv
;

530 
°öt
 
cmp
;

532 
l
 = &
li°
;

533 
Õªv
 = 
NULL
;

535 
l1
 && 
l2
)

537 
cmp
 = ((
STCom∑ªD©aFunc
Ë
com∑ª_func
Ë(
l1
->
d©a
, 
l2
->d©a, 
u£r_d©a
);

539 i‡(
cmp
 <= 0)

541 
l
->
√xt
 = 
l1
;

542 
l1
 =Ü1->
√xt
;

546 
l
->
√xt
 = 
l2
;

547 
l2
 =Ü2->
√xt
;

549 
l
 =Ü->
√xt
;

550 
l
->
¥ev
 = 
Õªv
;

551 
Õªv
 = 
l
;

553 
l
->
√xt
 = 
l1
 ?Ü1 : 
l2
;

554 
l
->
√xt
->
¥ev
 =Ü;

556  
li°
.
√xt
;

557 
	}
}

559 
STDLIST
*

560 
	$°_dli°_s‹t_ªÆ
 (
STDLIST
 *
li°
,

561 
STFunc
 
com∑ª_func
,

562 
°poöãr
 
u£r_d©a
)

564 
STDLIST
 *
l1
, *
l2
;

566 i‡(!
li°
)

567  
NULL
;

568 i‡(!
li°
->
√xt
)

569  
li°
;

571 
l1
 = 
li°
;

572 
l2
 = 
li°
->
√xt
;

574 (
l2
 =Ü2->
√xt
Ë!
NULL
)

576 i‡((
l2
 =Ü2->
√xt
Ë=
NULL
)

578 
l1
 =Ü1->
√xt
;

580 
l2
 = 
l1
->
√xt
;

581 
l1
->
√xt
 = 
NULL
;

583  
	`°_dli°_s‹t_mîge
 (
	`°_dli°_s‹t_ªÆ
 (
li°
, 
com∑ª_func
, 
u£r_d©a
),

584 
	`°_dli°_s‹t_ªÆ
 (
l2
, 
com∑ª_func
, 
u£r_d©a
),

585 
com∑ª_func
,

586 
u£r_d©a
);

587 
	}
}

589 
STDLIST
* 
	$°_dli°_s‹t
(
STDLIST
 *
li°
,

590 
STCom∑ªFunc
 
com∑ª_func
)

592  
	`°_dli°_s‹t_ªÆ
 (
li°
, (
STFunc
Ë
com∑ª_func
, 
NULL
);

593 
	}
}

598 
STDLIST
* 
	$°_dli°_s‹t_wôh_d©a
(
STDLIST
 *
li°
,

599 
STCom∑ªD©aFunc
 
com∑ª_func
,

600 
°poöãr
 
u£r_d©a
)

602  
	`°_dli°_s‹t_ªÆ
 (
li°
, (
STFunc
Ë
com∑ª_func
, 
u£r_d©a
);

603 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_gtree.c

1 
	~<°dio.h
>

2 
	~<mÆloc.h
>

3 
	~"°_log.h
"

4 
	~"°_gåì.h
"

7 
	#MAX_GTREE_HEIGHT
 40

	)

10 
STGTªeNode
* 
°_åì_node_√w
 (
°poöãr
 
key
,

11 
°poöãr
 
vÆue
);

12 
°_åì_ö£π_öã∫Æ
 (
STGTªe
 *
åì
,

13 
°poöãr
 
key
,

14 
°poöãr
 
vÆue
,

15 
°boﬁ
 
ª∂a˚
);

16 
°boﬁ
 
°_åì_ªmove_öã∫Æ
 (
STGTªe
 *
åì
,

17 
°c⁄°poöãr
 
key
,

18 
°boﬁ
 
°ól
);

19 
STGTªeNode
* 
°_åì_node_bÆ™˚
 (STGTªeNodê*
node
);

20 
STGTªeNode
 *
°_åì_föd_node
 (
STGTªe
 *
åì
,

21 
°c⁄°poöãr
 
key
);

22 
°öt
 
°_åì_node_¥e_‹dî
 (
STGTªeNode
 *
node
,

23 
STGTøvî£Func
 
åavî£_func
,

24 
°poöãr
 
d©a
);

25 
°öt
 
°_åì_node_ö_‹dî
 (
STGTªeNode
 *
node
,

26 
STGTøvî£Func
 
åavî£_func
,

27 
°poöãr
 
d©a
);

28 
°öt
 
°_åì_node_po°_‹dî
 (
STGTªeNode
 *
node
,

29 
STGTøvî£Func
 
åavî£_func
,

30 
°poöãr
 
d©a
);

31 
°poöãr
 
°_åì_node_£¨ch
 (
STGTªeNode
 *
node
,

32 
STCom∑ªFunc
 
£¨ch_func
,

33 
°c⁄°poöãr
 
d©a
);

34 
STGTªeNode
* 
°_åì_node_rŸ©e_À·
 (STGTªeNodê*
node
);

35 
STGTªeNode
* 
°_åì_node_rŸ©e_right
 (STGTªeNodê*
node
);

37 
°_åì_node_check
 (
STGTªeNode
 *
node
);

40 
°ölöe
 
STGTªeNode
 *

41 
	$°_åì_fú°_node
 (
STGTªe
 *
åì
)

43 
STGTªeNode
 *
tmp
;

45 i‡(!
åì
->
roŸ
)

46  
NULL
;

48 
tmp
 = 
åì
->
roŸ
;

50 
tmp
->
À·_chûd
)

51 
tmp
 =Åmp->
À·
;

53  
tmp
;

54 
	}
}

56 
°ölöe
 
STGTªeNode
 *

57 
	$°_åì_node_¥evious
 (
STGTªeNode
 *
node
)

59 
STGTªeNode
 *
tmp
;

61 
tmp
 = 
node
->
À·
;

63 i‡(
node
->
À·_chûd
)

64 
tmp
->
right_chûd
)

65 
tmp
 =Åmp->
right
;

67  
tmp
;

68 
	}
}

70 
°ölöe
 
STGTªeNode
 *

71 
	$°_åì_node_√xt
 (
STGTªeNode
 *
node
)

73 
STGTªeNode
 *
tmp
;

75 
tmp
 = 
node
->
right
;

77 i‡(
node
->
right_chûd
)

78 
tmp
->
À·_chûd
)

79 
tmp
 =Åmp->
À·
;

81  
tmp
;

82 
	}
}

97 
STGTªe
*

98 
	$°_åì_√w
 (
STCom∑ªFunc
 
key_com∑ª_func
)

100 if(
NULL
 =
key_com∑ª_func
)

101  
NULL
 ;

103  
	`°_åì_√w_fuŒ
 ((
STCom∑ªD©aFunc
Ë
key_com∑ª_func
, 
NULL
,

104 
NULL
, NULL);

105 
	}
}

117 
STGTªe
*

118 
	$°_åì_√w_wôh_d©a
 (
STCom∑ªD©aFunc
 
key_com∑ª_func
,

119 
°poöãr
 
key_com∑ª_d©a
)

121 if(
NULL
 =
key_com∑ª_func
)

122  
NULL
 ;

124  
	`°_åì_√w_fuŒ
 (
key_com∑ª_func
, 
key_com∑ª_d©a
,

125 
NULL
, NULL);

126 
	}
}

142 
STGTªe
*

143 
	$°_åì_√w_fuŒ
 (
STCom∑ªD©aFunc
 
key_com∑ª_func
,

144 
°poöãr
 
key_com∑ª_d©a
,

145 
STDe°royNŸify
 
key_de°roy_func
,

146 
STDe°royNŸify
 
vÆue_de°roy_func
)

148 
STGTªe
 *
åì
;

150 if(
NULL
 =
key_com∑ª_func
)

151  
NULL
 ;

153 
åì
 = (
STGTªe
 *)
	`mÆloc
((STGTree)) ;

154 
åì
->
roŸ
 = 
NULL
;

155 
åì
->
key_com∑ª
 = 
key_com∑ª_func
;

156 
åì
->
key_de°roy_func
 = key_destroy_func;

157 
åì
->
vÆue_de°roy_func
 = value_destroy_func;

158 
åì
->
key_com∑ª_d©a
 = key_compare_data;

159 
åì
->
¬odes
 = 0;

161  
åì
;

162 
	}
}

179 
	$°_åì_de°roy
 (
STGTªe
 *
åì
)

181 
STGTªeNode
 *
node
;

182 
STGTªeNode
 *
√xt
;

184 if(
NULL
 =
åì
)

187 
node
 = 
	`°_åì_fú°_node
 (
åì
);

189 
node
)

191 
√xt
 = 
	`°_åì_node_√xt
 (
node
);

193 i‡(
åì
->
key_de°roy_func
)

194 
åì
->
	`key_de°roy_func
 (
node
->
key
);

195 i‡(
åì
->
vÆue_de°roy_func
)

196 
åì
->
	`vÆue_de°roy_func
 (
node
->
vÆue
);

197 
	`‰ì
(
node
);

199 
node
 = 
√xt
;

202 
	`‰ì
(
åì
);

203 
	}
}

222 
	$°_åì_ö£π
 (
STGTªe
 *
åì
,

223 
°poöãr
 
key
,

224 
°poöãr
 
vÆue
)

226 if(
NULL
 =
åì
)

229 
	`°_åì_ö£π_öã∫Æ
 (
åì
, 
key
, 
vÆue
, 
FALSE
);

231 
	`°_åì_node_check
 (
åì
->
roŸ
);

232 
	}
}

234 
°öt


235 
	$°_åì_node_height
 (
STGTªeNode
 *
node
)

237 
°öt
 
À·_height
;

238 
°öt
 
right_height
;

240 i‡(
node
)

242 
À·_height
 = 0;

243 
right_height
 = 0;

245 i‡(
node
->
À·_chûd
)

246 
À·_height
 = 
	`°_åì_node_height
 (
node
->
À·
);

248 i‡(
node
->
right_chûd
)

249 
right_height
 = 
	`°_åì_node_height
 (
node
->
right
);

251  
	`MAX
 (
À·_height
, 
right_height
) + 1;

255 
	}
}

258 
	$°_åì_node_check
 (
STGTªeNode
 *
node
)

260 
°öt
 
À·_height
;

261 
°öt
 
right_height
;

262 
°öt
 
bÆ™˚
;

263 
STGTªeNode
 *
tmp
;

265 i‡(
node
)

267 i‡(
node
->
À·_chûd
)

269 
tmp
 = 
	`°_åì_node_¥evious
 (
node
);

270 
	`°_as£π
 (
tmp
->
right
 =
node
);

273 i‡(
node
->
right_chûd
)

275 
tmp
 = 
	`°_åì_node_√xt
 (
node
);

276 
	`°_as£π
 (
tmp
->
À·
 =
node
);

279 
À·_height
 = 0;

280 
right_height
 = 0;

282 i‡(
node
->
À·_chûd
)

283 
À·_height
 = 
	`°_åì_node_height
 (
node
->
À·
);

284 i‡(
node
->
right_chûd
)

285 
right_height
 = 
	`°_åì_node_height
 (
node
->
right
);

287 
bÆ™˚
 = 
right_height
 - 
À·_height
;

288 
	`°_as£π
 (
bÆ™˚
 =
node
->balance);

290 i‡(
node
->
À·_chûd
)

291 
	`°_åì_node_check
 (
node
->
À·
);

292 i‡(
node
->
right_chûd
)

293 
	`°_åì_node_check
 (
node
->
right
);

295 
	}
}

298 
	$°_åì_node_dump
 (
STGTªeNode
 *
node
,

299 
°öt
 
ödít
)

301 
	`¥ötf
 ("%*s%c\n", 
ödít
, "", *(*)
node
->
key
);

303 i‡(
node
->
À·_chûd
)

304 
	`°_åì_node_dump
 (
node
->
À·
, 
ödít
 + 2);

305 i‡(
node
->
À·
)

306 
	`¥ötf
 ("%*s<%c\n", 
ödít
 + 2, "", *(*)
node
->
À·
->
key
);

308 i‡(
node
->
right_chûd
)

309 
	`°_åì_node_dump
 (
node
->
right
, 
ödít
 + 2);

310 i‡(
node
->
right
)

311 
	`¥ötf
 ("%*s>%c\n", 
ödít
 + 2, "", *(*)
node
->
right
->
key
);

312 
	}
}

316 
	$°_åì_dump
 (
STGTªe
 *
åì
)

318 i‡(
åì
->
roŸ
)

319 
	`°_åì_node_dump
 (
åì
->
roŸ
, 0);

320 
	}
}

340 
	$°_åì_ª∂a˚
 (
STGTªe
 *
åì
,

341 
°poöãr
 
key
,

342 
°poöãr
 
vÆue
)

344 if(
NULL
 =
åì
)

347 
	`°_åì_ö£π_öã∫Æ
 (
åì
, 
key
, 
vÆue
, 
TRUE
);

349 
	`°_åì_node_check
 (
åì
->
roŸ
);

350 
	}
}

371 
°boﬁ


372 
	$°_åì_ªmove
 (
STGTªe
 *
åì
,

373 
°c⁄°poöãr
 
key
)

375 
°boﬁ
 
ªmoved
;

377 if(
NULL
 =
åì
)

378  
FALSE
 ;

380 
ªmoved
 = 
	`°_åì_ªmove_öã∫Æ
 (
åì
, 
key
, 
FALSE
);

382 
	`°_åì_node_check
 (
åì
->
roŸ
);

384  
ªmoved
;

385 
	}
}

400 
°boﬁ


401 
	$°_åì_°ól
 (
STGTªe
 *
åì
,

402 
°c⁄°poöãr
 
key
)

404 
°boﬁ
 
ªmoved
;

406 if(
NULL
 =
åì
)

407  
FALSE
 ;

409 
ªmoved
 = 
	`°_åì_ªmove_öã∫Æ
 (
åì
, 
key
, 
TRUE
);

411 
	`°_åì_node_check
 (
åì
->
roŸ
);

413  
ªmoved
;

414 
	}
}

429 
°poöãr


430 
	$°_åì_lookup
 (
STGTªe
 *
åì
,

431 
°c⁄°poöãr
 
key
)

433 
STGTªeNode
 *
node
;

435 if(
NULL
 =
åì
)

436  
NULL
 ;

438 
node
 = 
	`°_åì_föd_node
 (
åì
, 
key
);

440  
node
 ?Çode->
vÆue
 : 
NULL
;

441 
	}
}

457 
°boﬁ


458 
	$°_åì_lookup_exãnded
 (
STGTªe
 *
åì
,

459 
°c⁄°poöãr
 
lookup_key
,

460 
°poöãr
 *
‹ig_key
,

461 
°poöãr
 *
vÆue
)

463 
STGTªeNode
 *
node
;

465 if(
NULL
 =
åì
)

466  
FALSE
 ;

468 
node
 = 
	`°_åì_föd_node
 (
åì
, 
lookup_key
);

470 i‡(
node
)

472 i‡(
‹ig_key
)

473 *
‹ig_key
 = 
node
->
key
;

474 i‡(
vÆue
)

475 *
vÆue
 = 
node
->value;

476  
TRUE
;

479  
FALSE
;

480 
	}
}

499 
	$°_åì_f‹óch
 (
STGTªe
 *
åì
,

500 
STGTøvî£Func
 
func
,

501 
°poöãr
 
u£r_d©a
)

503 
STGTªeNode
 *
node
;

505 if(
NULL
 =
åì
)

508 i‡(!
åì
->
roŸ
)

511 
node
 = 
	`°_åì_fú°_node
 (
åì
);

513 
node
)

515 i‡((*
func
Ë(
node
->
key
,Çode->
vÆue
, 
u£r_d©a
))

518 
node
 = 
	`°_åì_node_√xt
 (node);

520 
	}
}

535 
	$°_åì_åavî£
 (
STGTªe
 *
åì
,

536 
STGTøvî£Func
 
åavî£_func
,

537 
STGTøvî£Ty≥
 
åavî£_ty≥
,

538 
°poöãr
 
u£r_d©a
)

540 if(
NULL
 =
åì
)

543 i‡(!
åì
->
roŸ
)

546 
åavî£_ty≥
)

548 
ST_PRE_ORDER
:

549 
	`°_åì_node_¥e_‹dî
 (
åì
->
roŸ
, 
åavî£_func
, 
u£r_d©a
);

552 
ST_IN_ORDER
:

553 
	`°_åì_node_ö_‹dî
 (
åì
->
roŸ
, 
åavî£_func
, 
u£r_d©a
);

556 
ST_POST_ORDER
:

557 
	`°_åì_node_po°_‹dî
 (
åì
->
roŸ
, 
åavî£_func
, 
u£r_d©a
);

560 
ST_LEVEL_ORDER
:

561 
	`__îr
 ("g_tree_traverse():ÅraverseÅype G_LEVEL_ORDER isn't implemented.");

564 
	}
}

585 
°poöãr


586 
	$°_åì_£¨ch
 (
STGTªe
 *
åì
,

587 
STCom∑ªFunc
 
£¨ch_func
,

588 
°c⁄°poöãr
 
u£r_d©a
)

590 if(
NULL
 =
åì
)

591  
NULL
 ;

593 i‡(
åì
->
roŸ
)

594  
	`°_åì_node_£¨ch
 (
åì
->
roŸ
, 
£¨ch_func
, 
u£r_d©a
);

596  
NULL
;

597 
	}
}

611 
°öt


612 
	$°_åì_height
 (
STGTªe
 *
åì
)

614 
STGTªeNode
 *
node
;

615 
°öt
 
height
;

617 if(
NULL
 =
åì
)

620 i‡(!
åì
->
roŸ
)

623 
height
 = 0;

624 
node
 = 
åì
->
roŸ
;

628 
height
 +1 + 
	`MAX
(
node
->
bÆ™˚
, 0);

630 i‡(!
node
->
À·_chûd
)

631  
height
;

633 
node
 =Çode->
À·
;

635 
	}
}

645 
°öt


646 
	$°_åì_¬odes
 (
STGTªe
 *
åì
)

648 if(
NULL
 =
åì
)

651  
åì
->
¬odes
;

652 
	}
}

658 
°öt


659 
	$°_åì_node_¥e_‹dî
 (
STGTªeNode
 *
node
,

660 
STGTøvî£Func
 
åavî£_func
,

661 
°poöãr
 
d©a
)

663 i‡((*
åavî£_func
Ë(
node
->
key
,Çode->
vÆue
, 
d©a
))

664  
TRUE
;

666 i‡(
node
->
À·_chûd
)

668 i‡(
	`°_åì_node_¥e_‹dî
 (
node
->
À·
, 
åavî£_func
, 
d©a
))

669  
TRUE
;

672 i‡(
node
->
right_chûd
)

674 i‡(
	`°_åì_node_¥e_‹dî
 (
node
->
right
, 
åavî£_func
, 
d©a
))

675  
TRUE
;

678  
FALSE
;

679 
	}
}

681 
°öt


682 
	$°_åì_node_ö_‹dî
 (
STGTªeNode
 *
node
,

683 
STGTøvî£Func
 
åavî£_func
,

684 
°poöãr
 
d©a
)

686 i‡(
node
->
À·_chûd
)

688 i‡(
	`°_åì_node_ö_‹dî
 (
node
->
À·
, 
åavî£_func
, 
d©a
))

689  
TRUE
;

692 i‡((*
åavî£_func
Ë(
node
->
key
,Çode->
vÆue
, 
d©a
))

693  
TRUE
;

695 i‡(
node
->
right_chûd
)

697 i‡(
	`°_åì_node_ö_‹dî
 (
node
->
right
, 
åavî£_func
, 
d©a
))

698  
TRUE
;

701  
FALSE
;

702 
	}
}

704 
°öt


705 
	$°_åì_node_po°_‹dî
 (
STGTªeNode
 *
node
,

706 
STGTøvî£Func
 
åavî£_func
,

707 
°poöãr
 
d©a
)

709 i‡(
node
->
À·_chûd
)

711 i‡(
	`°_åì_node_po°_‹dî
 (
node
->
À·
, 
åavî£_func
, 
d©a
))

712  
TRUE
;

715 i‡(
node
->
right_chûd
)

717 i‡(
	`°_åì_node_po°_‹dî
 (
node
->
right
, 
åavî£_func
, 
d©a
))

718  
TRUE
;

721 i‡((*
åavî£_func
Ë(
node
->
key
,Çode->
vÆue
, 
d©a
))

722  
TRUE
;

724  
FALSE
;

725 
	}
}

727 
STGTªeNode
*

728 
	$°_åì_node_√w
 (
°poöãr
 
key
,

729 
°poöãr
 
vÆue
)

731 
STGTªeNode
 *
node
 = (STGTªeNodê*)
	`mÆloc
((STGTreeNode));

733 
node
->
bÆ™˚
 = 0;

734 
node
->
À·
 = 
NULL
;

735 
node
->
right
 = 
NULL
;

736 
node
->
À·_chûd
 = 
FALSE
;

737 
node
->
right_chûd
 = 
FALSE
;

738 
node
->
key
 = key;

739 
node
->
vÆue
 = value;

741  
node
;

742 
	}
}

748 
	$°_åì_ö£π_öã∫Æ
 (
STGTªe
 *
åì
,

749 
°poöãr
 
key
,

750 
°poöãr
 
vÆue
,

751 
°boﬁ
 
ª∂a˚
)

753 
STGTªeNode
 *
node
;

754 
STGTªeNode
 *
∑th
[
MAX_GTREE_HEIGHT
];

755 
°öt
 
idx
;

757 if(
NULL
 =
åì
)

760 i‡(!
åì
->
roŸ
)

762 
åì
->
roŸ
 = 
	`°_åì_node_√w
 (
key
, 
vÆue
);

763 
åì
->
¬odes
++;

767 
idx
 = 0;

768 
∑th
[
idx
++] = 
NULL
;

769 
node
 = 
åì
->
roŸ
;

773 
°öt
 
cmp
 = 
åì
->
	`key_com∑ª
 (
key
, 
node
->key,Åªe->
key_com∑ª_d©a
);

775 i‡(
cmp
 == 0)

777 i‡(
åì
->
vÆue_de°roy_func
)

778 
åì
->
	`vÆue_de°roy_func
 (
node
->
vÆue
);

780 
node
->
vÆue
 = value;

782 i‡(
ª∂a˚
)

784 i‡(
åì
->
key_de°roy_func
)

785 
åì
->
	`key_de°roy_func
 (
node
->
key
);

787 
node
->
key
 = key;

792 i‡(
åì
->
key_de°roy_func
)

793 
åì
->
	`key_de°roy_func
 (
key
);

798 i‡(
cmp
 < 0)

800 i‡(
node
->
À·_chûd
)

802 
∑th
[
idx
++] = 
node
;

803 
node
 =Çode->
À·
;

807 
STGTªeNode
 *
chûd
 = 
	`°_åì_node_√w
 (
key
, 
vÆue
);

809 
chûd
->
À·
 = 
node
->left;

810 
chûd
->
right
 = 
node
;

811 
node
->
À·
 = 
chûd
;

812 
node
->
À·_chûd
 = 
TRUE
;

813 
node
->
bÆ™˚
 -= 1;

815 
åì
->
¬odes
++;

822 i‡(
node
->
right_chûd
)

824 
∑th
[
idx
++] = 
node
;

825 
node
 =Çode->
right
;

829 
STGTªeNode
 *
chûd
 = 
	`°_åì_node_√w
 (
key
, 
vÆue
);

831 
chûd
->
right
 = 
node
->right;

832 
chûd
->
À·
 = 
node
;

833 
node
->
right
 = 
chûd
;

834 
node
->
right_chûd
 = 
TRUE
;

835 
node
->
bÆ™˚
 += 1;

837 
åì
->
¬odes
++;

849 
STGTªeNode
 *
b∑ª¡
 = 
∑th
[--
idx
];

850 
°boﬁ
 
À·_node
 = (
b∑ª¡
 && 
node
 =b∑ª¡->
À·
);

851 
	`°_as£π
 (!
b∑ª¡
 || b∑ª¡->
À·
 =
node
 || b∑ª¡->
right
 ==Çode);

853 i‡(
node
->
bÆ™˚
 < -1 ||Çode->balance > 1)

855 
node
 = 
	`°_åì_node_bÆ™˚
 (node);

856 i‡(
b∑ª¡
 =
NULL
)

857 
åì
->
roŸ
 = 
node
;

858 i‡(
À·_node
)

859 
b∑ª¡
->
À·
 = 
node
;

861 
b∑ª¡
->
right
 = 
node
;

864 i‡(
node
->
bÆ™˚
 =0 || 
b∑ª¡
 =
NULL
)

867 i‡(
À·_node
)

868 
b∑ª¡
->
bÆ™˚
 -= 1;

870 
b∑ª¡
->
bÆ™˚
 += 1;

872 
node
 = 
b∑ª¡
;

874 
	}
}

877 
STGTªeNode
*

878 
	$°_åì_node_rŸ©e_À·
 (
STGTªeNode
 *
node
)

880 
STGTªeNode
 *
right
;

881 
°öt
 
a_bÆ
;

882 
°öt
 
b_bÆ
;

884 
right
 = 
node
->right;

886 i‡(
right
->
À·_chûd
)

888 
node
->
right
 =Ñight->
À·
;

892 
node
->
right_chûd
 = 
FALSE
;

893 
node
->
right
 =Ñight;

894 
right
->
À·_chûd
 = 
TRUE
;

896 
right
->
À·
 = 
node
;

898 
a_bÆ
 = 
node
->
bÆ™˚
;

899 
b_bÆ
 = 
right
->
bÆ™˚
;

901 i‡(
b_bÆ
 <= 0)

903 i‡(
a_bÆ
 >= 1)

904 
right
->
bÆ™˚
 = 
b_bÆ
 - 1;

906 
right
->
bÆ™˚
 = 
a_bÆ
 + 
b_bÆ
 - 2;

907 
node
->
bÆ™˚
 = 
a_bÆ
 - 1;

911 i‡(
a_bÆ
 <
b_bÆ
)

912 
right
->
bÆ™˚
 = 
a_bÆ
 - 2;

914 
right
->
bÆ™˚
 = 
b_bÆ
 - 1;

915 
node
->
bÆ™˚
 = 
a_bÆ
 - 
b_bÆ
 - 1;

918  
right
;

919 
	}
}

921 
STGTªeNode
*

922 
	$°_åì_node_rŸ©e_right
 (
STGTªeNode
 *
node
)

924 
STGTªeNode
 *
À·
;

925 
°öt
 
a_bÆ
;

926 
°öt
 
b_bÆ
;

928 
À·
 = 
node
->left;

930 i‡(
À·
->
right_chûd
)

932 
node
->
À·
 =Üe·->
right
;

936 
node
->
À·_chûd
 = 
FALSE
;

937 
node
->
À·
 =Üeft;

938 
À·
->
right_chûd
 = 
TRUE
;

940 
À·
->
right
 = 
node
;

942 
a_bÆ
 = 
node
->
bÆ™˚
;

943 
b_bÆ
 = 
À·
->
bÆ™˚
;

945 i‡(
b_bÆ
 <= 0)

947 i‡(
b_bÆ
 > 
a_bÆ
)

948 
À·
->
bÆ™˚
 = 
b_bÆ
 + 1;

950 
À·
->
bÆ™˚
 = 
a_bÆ
 + 2;

951 
node
->
bÆ™˚
 = 
a_bÆ
 - 
b_bÆ
 + 1;

955 i‡(
a_bÆ
 <= -1)

956 
À·
->
bÆ™˚
 = 
b_bÆ
 + 1;

958 
À·
->
bÆ™˚
 = 
a_bÆ
 + 
b_bÆ
 + 2;

959 
node
->
bÆ™˚
 = 
a_bÆ
 + 1;

962  
À·
;

963 
	}
}

966 
STGTªeNode
*

967 
	$°_åì_node_bÆ™˚
 (
STGTªeNode
 *
node
)

969 i‡(
node
->
bÆ™˚
 < -1)

971 i‡(
node
->
À·
->
bÆ™˚
 > 0)

972 
node
->
À·
 = 
	`°_åì_node_rŸ©e_À·
 (node->left);

973 
node
 = 
	`°_åì_node_rŸ©e_right
 (node);

975 i‡(
node
->
bÆ™˚
 > 1)

977 i‡(
node
->
right
->
bÆ™˚
 < 0)

978 
node
->
right
 = 
	`°_åì_node_rŸ©e_right
 (node->right);

979 
node
 = 
	`°_åì_node_rŸ©e_À·
 (node);

982  
node
;

983 
	}
}

988 
°boﬁ


989 
	$°_åì_ªmove_öã∫Æ
 (
STGTªe
 *
åì
,

990 
°c⁄°poöãr
 
key
,

991 
°boﬁ
 
°ól
)

993 
STGTªeNode
 *
node
, *
∑ª¡
, *
bÆ™˚
;

994 
STGTªeNode
 *
∑th
[
MAX_GTREE_HEIGHT
];

995 
°öt
 
idx
;

996 
°boﬁ
 
À·_node
;

998 if(
NULL
 =
åì
)

999  
FALSE
 ;

1001 i‡(!
åì
->
roŸ
)

1002  
FALSE
;

1004 
idx
 = 0;

1005 
∑th
[
idx
++] = 
NULL
;

1006 
node
 = 
åì
->
roŸ
;

1010 
°öt
 
cmp
 = 
åì
->
	`key_com∑ª
 (
key
, 
node
->key,Åªe->
key_com∑ª_d©a
);

1012 i‡(
cmp
 == 0)

1014 i‡(
cmp
 < 0)

1016 i‡(!
node
->
À·_chûd
)

1017  
FALSE
;

1019 
∑th
[
idx
++] = 
node
;

1020 
node
 =Çode->
À·
;

1024 i‡(!
node
->
right_chûd
)

1025  
FALSE
;

1027 
∑th
[
idx
++] = 
node
;

1028 
node
 =Çode->
right
;

1034 
bÆ™˚
 = 
∑ª¡
 = 
∑th
[--
idx
];

1035 
	`°_as£π
 (!
∑ª¡
 ||Ö¨ít->
À·
 =
node
 ||Ö¨ít->
right
 ==Çode);

1037 
À·_node
 = (
∑ª¡
 && 
node
 =∑ª¡->
À·
);

1039 i‡(!
node
->
À·_chûd
)

1041 i‡(!
node
->
right_chûd
)

1043 i‡(!
∑ª¡
)

1044 
åì
->
roŸ
 = 
NULL
;

1045 i‡(
À·_node
)

1047 
∑ª¡
->
À·_chûd
 = 
FALSE
;

1048 
∑ª¡
->
À·
 = 
node
->left;

1049 
∑ª¡
->
bÆ™˚
 += 1;

1053 
∑ª¡
->
right_chûd
 = 
FALSE
;

1054 
∑ª¡
->
right
 = 
node
->right;

1055 
∑ª¡
->
bÆ™˚
 -= 1;

1060 
STGTªeNode
 *
tmp
 = 
	`°_åì_node_√xt
 (
node
);

1061 
tmp
->
À·
 = 
node
->left;

1063 i‡(!
∑ª¡
)

1064 
åì
->
roŸ
 = 
node
->
right
;

1065 i‡(
À·_node
)

1067 
∑ª¡
->
À·
 = 
node
->
right
;

1068 
∑ª¡
->
bÆ™˚
 += 1;

1072 
∑ª¡
->
right
 = 
node
->right;

1073 
∑ª¡
->
bÆ™˚
 -= 1;

1079 i‡(!
node
->
right_chûd
)

1081 
STGTªeNode
 *
tmp
 = 
	`°_åì_node_¥evious
 (
node
);

1082 
tmp
->
right
 = 
node
->right;

1084 i‡(
∑ª¡
 =
NULL
)

1085 
åì
->
roŸ
 = 
node
->
À·
;

1086 i‡(
À·_node
)

1088 
∑ª¡
->
À·
 = 
node
->left;

1089 
∑ª¡
->
bÆ™˚
 += 1;

1093 
∑ª¡
->
right
 = 
node
->
À·
;

1094 
∑ª¡
->
bÆ™˚
 -= 1;

1099 
STGTªeNode
 *
¥ev
 = 
node
->
À·
;

1100 
STGTªeNode
 *
√xt
 = 
node
->
right
;

1101 
STGTªeNode
 *
√xç
 = 
node
;

1102 
°öt
 
ﬁd_idx
 = 
idx
 + 1;

1103 
idx
++;

1107 
√xt
->
À·_chûd
)

1109 
∑th
[++
idx
] = 
√xç
 = 
√xt
;

1110 
√xt
 =Çext->
À·
;

1113 
∑th
[
ﬁd_idx
] = 
√xt
;

1114 
bÆ™˚
 = 
∑th
[
idx
];

1117 i‡(
√xç
 !
node
)

1119 i‡(
√xt
->
right_chûd
)

1120 
√xç
->
À·
 = 
√xt
->
right
;

1122 
√xç
->
À·_chûd
 = 
FALSE
;

1123 
√xç
->
bÆ™˚
 += 1;

1125 
√xt
->
right_chûd
 = 
TRUE
;

1126 
√xt
->
right
 = 
node
->right;

1130 
node
->
bÆ™˚
 -= 1;

1134 
¥ev
->
right_chûd
)

1135 
¥ev
 =Öªv->
right
;

1136 
¥ev
->
right
 = 
√xt
;

1139 
√xt
->
À·_chûd
 = 
TRUE
;

1140 
√xt
->
À·
 = 
node
->left;

1141 
√xt
->
bÆ™˚
 = 
node
->balance;

1143 i‡(!
∑ª¡
)

1144 
åì
->
roŸ
 = 
√xt
;

1145 i‡(
À·_node
)

1146 
∑ª¡
->
À·
 = 
√xt
;

1148 
∑ª¡
->
right
 = 
√xt
;

1153 i‡(
bÆ™˚
)

1157 
STGTªeNode
 *
b∑ª¡
 = 
∑th
[--
idx
];

1158 
	`°_as£π
 (!
b∑ª¡
 || b∑ª¡->
À·
 =
bÆ™˚
 || b∑ª¡->
right
 == balance);

1160 
À·_node
 = (
b∑ª¡
 && 
bÆ™˚
 =b∑ª¡->
À·
);

1162 if(
bÆ™˚
->balance < -1 || balance->balance > 1)

1164 
bÆ™˚
 = 
	`°_åì_node_bÆ™˚
 (balance);

1165 i‡(!
b∑ª¡
)

1166 
åì
->
roŸ
 = 
bÆ™˚
;

1167 i‡(
À·_node
)

1168 
b∑ª¡
->
À·
 = 
bÆ™˚
;

1170 
b∑ª¡
->
right
 = 
bÆ™˚
;

1173 i‡(
bÆ™˚
->bÆ™˚ !0 || !
b∑ª¡
)

1176 i‡(
À·_node
)

1177 
b∑ª¡
->
bÆ™˚
 += 1;

1179 
b∑ª¡
->
bÆ™˚
 -= 1;

1181 
bÆ™˚
 = 
b∑ª¡
;

1185 i‡(!
°ól
)

1187 i‡(
åì
->
key_de°roy_func
)

1188 
åì
->
	`key_de°roy_func
 (
node
->
key
);

1189 i‡(
åì
->
vÆue_de°roy_func
)

1190 
åì
->
	`vÆue_de°roy_func
 (
node
->
vÆue
);

1193 
	`‰ì
(
node
) ;

1195 
åì
->
¬odes
--;

1197  
TRUE
;

1198 
	}
}

1200 
STGTªeNode
 *

1201 
	$°_åì_föd_node
 (
STGTªe
 *
åì
,

1202 
°c⁄°poöãr
 
key
)

1204 
STGTªeNode
 *
node
;

1205 
°öt
 
cmp
;

1207 
node
 = 
åì
->
roŸ
;

1208 i‡(!
node
)

1209  
NULL
;

1213 
cmp
 = 
åì
->
	`key_com∑ª
 (
key
, 
node
->key,Åªe->
key_com∑ª_d©a
);

1214 i‡(
cmp
 == 0)

1215  
node
;

1216 i‡(
cmp
 < 0)

1218 i‡(!
node
->
À·_chûd
)

1219  
NULL
;

1221 
node
 =Çode->
À·
;

1225 i‡(!
node
->
right_chûd
)

1226  
NULL
;

1228 
node
 =Çode->
right
;

1231 
	}
}

1234 
°poöãr


1235 
	$°_åì_node_£¨ch
 (
STGTªeNode
 *
node
,

1236 
STCom∑ªFunc
 
£¨ch_func
,

1237 
°c⁄°poöãr
 
d©a
)

1239 
°öt
 
dú
;

1241 i‡(!
node
)

1242  
NULL
;

1246 
dú
 = (* 
£¨ch_func
Ë(
node
->
key
, 
d©a
);

1247 i‡(
dú
 == 0)

1248  
node
->
vÆue
;

1249 i‡(
dú
 < 0)

1251 i‡(!
node
->
À·_chûd
)

1252  
NULL
;

1254 
node
 =Çode->
À·
;

1258 i‡(!
node
->
right_chûd
)

1259  
NULL
;

1261 
node
 =Çode->
right
;

1264 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_hash.c

1 #i‚def 
__ST_HASH_H__


2 
	#__ST_HASH_H__


	)

3 #ifde‡
__˝lu•lus


6 
	~"°lib.h
"

12 #ifde‡
__˝lu•lus


	@/media/programs/workdir/stlib/trunk/src/st_huffmantree.c

	@/media/programs/workdir/stlib/trunk/src/st_log.c

1 
	~<°dio.h
>

2 
	~<time.h
>

3 
	~<as£π.h
>

4 
	~<°dlib.h
>

5 
	~<°d¨g.h
>

7 
	~"°_log.h
"

8 
	~"°lib.h
"

12 
	$°_exã∫Æ_log_öô
()

14 
°_exã∫Æ_öôed
 = 0 ;

15 i‡(
°_exã∫Æ_öôed
)

18 
FILE
 * 
Â
 = 
	`f›í
("st_external.log", "w") ;

19 
	`f˛o£
(
Â
) ;

21 
°_exã∫Æ_öôed
 = 1 ;

22 
	}
}

24 
	$°_exã∫Æ_log
(c⁄° 
°öt8
 * 
fmt
, ...)

26 #i‡
	`deföed
(
ST_DBG_
)

27 
time_t
 
t
 ;

28 
tm
* 
pTm
 ;

29 
°öt8
 
out
[4096];

30 
va_li°
 
body
;

31 
size_t
 
time_°r_Àn
 = 0 ;

34 
	`time
(&
t
) ;

35 
pTm
 = 
	`loˇ…ime
(&
t
) ;

36 
time_°r_Àn
 = 
	`°r·ime
(
out
, (out), "%Y-%m-%d %H:%M:%S : ", 
pTm
) ;

39 
	`va_°¨t
(
body
, 
fmt
);

40 
	`v•rötf
(
out
 + 
time_°r_Àn
, 
fmt
, 
body
);

42 
	`va_íd
(
body
);

44 
	`°_exã∫Æ_log_öô
() ;

47 
FILE
 * 
Â
 = 
	`f›í
("st_external.log", "a") ;

48 
	`as£π
(
Â
) ;

49 
	`Ârötf
(
Â
, "%s\n", 
out
) ;

50 
	`f˛o£
(
Â
) ;

54 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_qsort.c

1 
	~<°dio.h
>

2 
	~<time.h
>

3 
	~<as£π.h
>

4 
	~<°dlib.h
>

5 
	~<limôs.h
>

6 
	~<°rög.h
>

8 
	~"°_qs‹t.h
"

12 #unde‡
SWAP


13 
	#SWAP
(
a
, 
b
, 
size
Ë\

	)

16 
size_t
 
	g__size
 = (
size
); \

17 *
	g__a
 = (
a
), *
	g__b
 = (
b
); \

20 
	g__tmp
 = *
__a
; \

21 *
	g__a
++ = *
__b
; \

22 *
	g__b
++ = 
__tmp
; \

23 } --
	g__size
 > 0); \

28 
	#MAX_THRESH
 4

	)

33 
°öt8
 *
lo
;

34 
°öt8
 *
hi
;

35 } 
	t°ack_node
;

42 
	#STACK_SIZE
 (
CHAR_BIT
 * (
size_t
))

	)

43 
	#PUSH
(
low
, 
high
Ë((Ë((
t›
->
lo
 = (low)), (t›->
hi
 = (high)), ++t›))

	)

44 
	#POP
(
low
, 
high
Ë((Ë(--
t›
, (low =Å›->
lo
), (high =Å›->
hi
)))

	)

45 
	#STACK_NOT_EMPTY
 (
°ack
 < 
t›
)

	)

84 
	$°_qs‹t_wôh_d©a
 (
°c⁄°poöãr
 
pba£
,

85 
°öt
 
tŸÆ_ñems
,

86 
°uöt32
 
size
,

87 
STCom∑ªD©aFunc
 
com∑ª_func
,

88 
°poöãr
 
u£r_d©a
)

90 *
ba£_±r
 = (*Ë
pba£
;

92 c⁄° 
size_t
 
max_thªsh
 = 
MAX_THRESH
 * 
size
;

95 if(!(
tŸÆ_ñems
 >= 0))

97 if(!(
pba£
 !
NULL
 || 
tŸÆ_ñems
 == 0))

99 if(!(
com∑ª_func
 !
NULL
))

102 i‡(
tŸÆ_ñems
 == 0)

106 i‡(
tŸÆ_ñems
 > 
MAX_THRESH
)

108 *
lo
 = 
ba£_±r
;

109 *
hi
 = &
lo
[
size
 * (
tŸÆ_ñems
 - 1)];

110 
°ack_node
 
°ack
[
STACK_SIZE
];

111 
°ack_node
 *
t›
 = 
°ack
;

113 
	`PUSH
 (
NULL
, NULL);

115 
STACK_NOT_EMPTY
)

117 *
À·_±r
;

118 *
right_±r
;

126 *
mid
 = 
lo
 + 
size
 * ((
hi
 -Üo) / size >> 1);

128 i‡((*
com∑ª_func
Ë((*Ë
mid
, (*Ë
lo
, 
u£r_d©a
) < 0)

129 
	`SWAP
 (
mid
, 
lo
, 
size
);

130 i‡((*
com∑ª_func
Ë((*Ë
hi
, (*Ë
mid
, 
u£r_d©a
) < 0)

131 
	`SWAP
 (
mid
, 
hi
, 
size
);

133 
jump_ovî
;

134 i‡((*
com∑ª_func
Ë((*Ë
mid
, (*Ë
lo
, 
u£r_d©a
) < 0)

135 
	`SWAP
 (
mid
, 
lo
, 
size
);

136 
jump_ovî
:;

138 
À·_±r
 = 
lo
 + 
size
;

139 
right_±r
 = 
hi
 - 
size
;

146 (*
com∑ª_func
Ë((*Ë
À·_±r
, (*Ë
mid
, 
u£r_d©a
) < 0)

147 
À·_±r
 +
size
;

149 (*
com∑ª_func
Ë((*Ë
mid
, (*Ë
right_±r
, 
u£r_d©a
) < 0)

150 
right_±r
 -
size
;

152 i‡(
À·_±r
 < 
right_±r
)

154 
	`SWAP
 (
À·_±r
, 
right_±r
, 
size
);

155 i‡(
mid
 =
À·_±r
)

156 
mid
 = 
right_±r
;

157 i‡(
mid
 =
right_±r
)

158 
mid
 = 
À·_±r
;

159 
À·_±r
 +
size
;

160 
right_±r
 -
size
;

162 i‡(
À·_±r
 =
right_±r
)

164 
À·_±r
 +
size
;

165 
right_±r
 -
size
;

169 
À·_±r
 <
right_±r
);

176 i‡((
size_t
Ë(
right_±r
 - 
lo
Ë<
max_thªsh
)

178 i‡((
size_t
Ë(
hi
 - 
À·_±r
Ë<
max_thªsh
)

180 
	`POP
 (
lo
, 
hi
);

183 
lo
 = 
À·_±r
;

185 i‡((
size_t
Ë(
hi
 - 
À·_±r
Ë<
max_thªsh
)

187 
hi
 = 
right_±r
;

188 i‡((
right_±r
 - 
lo
Ë> (
hi
 - 
À·_±r
))

191 
	`PUSH
 (
lo
, 
right_±r
);

192 
lo
 = 
À·_±r
;

197 
	`PUSH
 (
À·_±r
, 
hi
);

198 
hi
 = 
right_±r
;

211 *c⁄° 
íd_±r
 = &
ba£_±r
[
size
 * (
tŸÆ_ñems
 - 1)];

212 *
tmp_±r
 = 
ba£_±r
;

213 *
thªsh
 = 
	`MIN
(
íd_±r
, 
ba£_±r
 + 
max_thªsh
);

214 *
run_±r
;

220 
run_±r
 = 
tmp_±r
 + 
size
;Ñun_±∏<
thªsh
;Ñun_ptr += size)

221 i‡((*
com∑ª_func
Ë((*Ë
run_±r
, (*Ë
tmp_±r
, 
u£r_d©a
) < 0)

222 
tmp_±r
 = 
run_±r
;

224 i‡(
tmp_±r
 !
ba£_±r
)

225 
	`SWAP
 (
tmp_±r
, 
ba£_±r
, 
size
);

229 
run_±r
 = 
ba£_±r
 + 
size
;

230 (
run_±r
 +
size
Ë<
íd_±r
)

232 
tmp_±r
 = 
run_±r
 - 
size
;

233 (*
com∑ª_func
Ë((*Ë
run_±r
, (*Ë
tmp_±r
, 
u£r_d©a
) < 0)

234 
tmp_±r
 -
size
;

236 
tmp_±r
 +
size
;

237 i‡(
tmp_±r
 !
run_±r
)

239 *
åav
;

241 
åav
 = 
run_±r
 + 
size
;

242 --
åav
 >
run_±r
)

244 
c
 = *
åav
;

245 *
hi
, *
lo
;

247 
hi
 = 
lo
 = 
åav
; (lÿ-
size
Ë>
tmp_±r
; hi =Üo)

248 *
hi
 = *
lo
;

249 *
hi
 = 
c
;

254 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_quene.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"°_quíe.h
"

14 
STQueue
* 
	$°_queue_√w
()

16 
STQueue
* 
queue
 = 
NULL
 ;

18 
queue
 = (
STQueue
 *)
	`mÆloc
((STQueue));

19 if(
NULL
 =
queue
)

21 
	`__îr
("alloc mem for queue failed !\n");

22 
	`exô
(1) ;

25  
queue
 ;

26 
	}
}

36 
	$°_queue_‰ì
(
STQueue
 *
queue
)

38 if(
NULL
 !
queue
)

40 
	`°_dli°_‰ì
(
queue
->
hód
) ;

41 
	`‰ì
(
queue
) ;

42 
queue
 = 
NULL
 ;

44 
	}
}

50 
	$°_queue_öô
(
STQueue
 *
queue
)

52 
queue
->
hód
 = queue->
èû
 = 
NULL
 ;

53 
queue
->
Àngth
 = 0 ;

54 
	}
}

65 
	$°_queue_˛ór
(
STQueue
 *
queue
)

67 if(
NULL
 !
queue
)

69 
	`°_dli°_‰ì
(
queue
->
hód
) ;

70 
	`°_queue_öô
(
queue
);

72 
	}
}

81 
°boﬁ
 
	$°_queue_is_em±y
(
STQueue
 *
queue
)

83 if(
NULL
 !
queue
)

85  
queue
->
hód
 =
NULL
 ;

87 
	}
}

96 
°uöt
 
	$°_queue_gë_Àngth
(
STQueue
 *
queue
)

98 if(
NULL
 !
queue
)

100  
queue
->
Àngth
;

102 
	}
}

112 
	$°_queue_ªvî£
(
STQueue
 *
queue
)

114 if(
NULL
 !
queue
)

116 
queue
->
èû
 = queue->
hód
 ;

117 
queue
->
hód
 = 
	`°_dli°_ªvî£
(queue->head) ;

119 
	}
}

128 
STQueue
* 
	$°_queue_c›y
(
STQueue
 *
queue
)

130 
STQueue
* 
ªsu…
 ;

131 
STDLIST
* 
li°
 ;

133 
ªsu…
 = 
	`°_queue_√w
() ;

134 
li°
 = 
queue
->
hód
 ;Üi° !
NULL
 ;Üi° =Üi°->
√xt
)

136 
	`°_queue_push_èû
(
ªsu…
, 
li°
->
d©a
) ;

138  
ªsu…
 ;

139 
	}
}

149 
	$°_queue_f‹óch
(
STQueue
 *
queue
,

150 
STFunc
 
func
,

151 
°poöãr
 
u£r_d©a
)

153 if(
NULL
 !
queue
 && NULL !
func
)

155 
STDLIST
* 
li°
 ;

157 
li°
 = 
queue
->
hód
 ;

158 
li°
)

160 
STDLIST
* 
√xt
 = 
li°
->next ;

161 
	`func
 (
li°
->
d©a
, 
u£r_d©a
);

162 
li°
 = 
√xt
 ;

165 
	}
}

174 
STDLIST
* 
	$°_queue_föd
(
STQueue
 *
queue
,

175 
°c⁄°poöãr
 
d©a
)

177 if(
NULL
 !
queue
)

179  
	`°_dli°_föd
(
queue
->
hód
, 
d©a
);

181 
	}
}

190 
STDLIST
* 
	$g_queue_föd_cu°om
(
STQueue
 *
queue
,

191 
°c⁄°poöãr
 
d©a
,

192 
STCom∑ªFunc
 
func
)

194 if(
NULL
 !
queue
 && NULL !
func
)

196  
	`°_dli°_föd_cu°om
(
queue
->
hód
, 
d©a
, 
func
) ;

198 
	}
}

206 
	$g_queue_s‹t
(
STQueue
 *
queue
,

207 
STCom∑ªD©aFunc
 
com∑ª_func
,

208 
°poöãr
 
u£r_d©a
)

210 if(
NULL
 !
queue
 && NULL !
com∑ª_func
)

212 
queue
->
hód
 = 
	`°_dli°_s‹t_wôh_d©a
 (queue->hód, 
com∑ª_func
, 
u£r_d©a
);

213 
queue
->
èû
 = 
	`°_dli°_œ°
 (queue->
hód
);

215 
	}
}

224 
	$°_queue_push_hód
(
STQueue
 *
queue
,

225 
°poöãr
 
d©a
)

227 if(
NULL
 !
queue
)

229 
queue
->
hód
 = 
	`°_dli°_¥ïíd
(queue->hód, 
d©a
);

230 if(
NULL
 =
queue
->
èû
)

231 
queue
->
èû
 = queue->
hód
 ;

232 
queue
->
Àngth
++;

235 
	}
}

238 
	$°_queue_push_èû
(
STQueue
 *
queue
,

239 
°poöãr
 
d©a
)

241 if(
NULL
 !
queue
)

243 
queue
->
èû
 = 
	`°_dli°_≠≥nd
 (queue->èû, 
d©a
);

244 i‡(
queue
->
èû
->
√xt
)

245 
queue
->
èû
 = queue->èû->
√xt
;

247 
queue
->
hód
 = queue->
èû
;

248 
queue
->
Àngth
++;

250 
	}
}

259 
	$°_queue_push_¡h
(
STQueue
 *
queue
,

260 
°poöãr
 
d©a
,

261 
°öt
 
n
)

263 if(
NULL
 !
queue
)

265 if(
n
 < 0 &&Ç > 
queue
->
Àngth
)

267 
	`°_queue_push_èû
(
queue
, 
d©a
);

270 
	`°_queue_ö£π_bef‹e
(
queue
, 
	`°_queue_≥ek_¡h
(queue, 
n
), 
d©a
);

272 
	}
}

283 
°poöãr
 
	$°_queue_p›_hód
(
STQueue
 *
queue
)

285 if(
NULL
 =
queue
)

286  
NULL
 ;

288 if(
NULL
 !
queue
->
hód
)

290 
°poöãr
 
d©a
 ;

291 
STDLIST
* 
node
 ;

293 
node
 = 
queue
->
hód
 ;

294 
d©a
 = 
node
->data ;

295 
queue
->
hód
 = 
node
->
√xt
 ;

296 if(
NULL
 !
queue
->
hód
)

297 
queue
->
hód
->
¥ev
 = 
NULL
;

299 
queue
->
èû
 = 
NULL
 ;

300 
	`°_dli°_‰ì1
(
node
);

301 
queue
->
Àngth
-- ;

303  
d©a
 ;

306 
	}
}

319 
°poöãr
 
	$°_queue_p›_èû
(
STQueue
 *
queue
)

321 if(
NULL
 =
queue
)

322  
NULL
 ;

324 if(
NULL
 !
queue
->
èû
)

326 
°poöãr
 
d©a
 ;

327 
STDLIST
* 
node
 ;

329 
node
 = 
queue
->
èû
 ;

330 
d©a
 = 
node
->data ;

331 
queue
->
èû
 = 
node
->
¥ev
 ;

332 if(
NULL
 !
queue
->
èû
)

333 
queue
->
èû
->
√xt
 = 
NULL
 ;

335 
queue
->
hód
 = 
NULL
 ;

337 
	`°_dli°_‰ì1
(
node
);

338 
queue
->
Àngth
-- ;

339  
d©a
 ;

341 
	}
}

354 
°poöãr
 
	$°_queue_p›_¡h
(
STQueue
 *
queue
,

355 
°uöt
 
n
)

357 
STDLIST
 *
¡h_lök
;

358 
°poöãr
 
ªsu…
;

360 if(
NULL
 =
queue
)

361  
NULL
 ;

363 if(
n
 < 0 &&Ç >
queue
->
Àngth
)

364  
NULL
 ;

366 
¡h_lök
 = 
	`°_queue_≥ek_¡h
(
queue
, 
n
) ;

367 
ªsu…
 = 
¡h_lök
->
d©a
 ;

368 
	`°_queue_dñëe_lök
(
queue
, 
¡h_lök
);

370  
ªsu…
 ;

371 
	}
}

383 
°poöãr
 
	$°_queue_≥ek_hód
(
STQueue
 *
queue
)

385 if(
NULL
 =
queue
)

386  
NULL
 ;

388  
queue
->
hód
 ? queue->hód->
d©a
 : 
NULL
 ;

389 
	}
}

393 
°poöãr
 
	$g_queue_≥ek_èû
(
STQueue
 *
queue
)

395 if(
NULL
 =
queue
)

396  
NULL
 ;

398  
queue
->
èû
 ? queue->èû->
d©a
 : 
NULL
 ;

399 
	}
}

403 
°poöãr
 
	$°_queue_≥ek_¡h
(
STQueue
 *
queue
,

404 
°uöt
 
n
)

406 
STDLIST
 *
lök
;

407 
°öt
 
i
;

409 if(
NULL
 =
queue
)

410  
NULL
 ;

412 i‡(
n
 >
queue
->
Àngth
)

413  
NULL
;

415 i‡(
n
 > 
queue
->
Àngth
 / 2)

417 
n
 = 
queue
->
Àngth
 -Ç - 1;

419 
lök
 = 
queue
->
èû
;

420 
i
 = 0; i < 
n
; ++i)

421 
lök
 =Üök->
¥ev
;

425 
lök
 = 
queue
->
hód
;

426 
i
 = 0; i < 
n
; ++i)

427 
lök
 =Üök->
√xt
;

430  
lök
;

431 
	}
}

444 
°öt
 
	$°_queue_ödex
(
STQueue
 *
queue
,

445 
°c⁄°poöãr
 
d©a
)

447 if(
NULL
 =
queue
)

448  
NULL
 ;

450  
	`°_dli°_ödex
(
queue
->
hód
, 
d©a
) ;

451 
	}
}

463 
	$°_queue_ªmove
(
STQueue
 *
queue
,

464 
°c⁄°poöãr
 
d©a
)

466 
STDLIST
* 
lök
 ;

467 if(
NULL
 !
queue
)

469 
lök
 = 
	`°_dli°_föd
 (
queue
->
hód
, 
d©a
);

470 if(
NULL
 !
lök
)

471 
	`°_queue_dñëe_lök
(
queue
, 
lök
);

473 
	}
}

484 
	$°_queue_ªmove_Æl
(
STQueue
 *
queue
,

485 
°c⁄°poöãr
 
d©a
)

487 
STDLIST
* 
lök
 ;

489 if(
NULL
 !
queue
)

491 
lök
 = 
queue
->
hód
;

492 
lök
)

494 
STDLIST
* 
√xt
 = 
lök
->next ;

495 if(
lök
->
d©a
 == data)

496 
	`°_queue_dñëe_lök
(
queue
, 
lök
);

498 
lök
 = 
√xt
 ;

501 
	}
}

510 
	$°_queue_ö£π_bef‹e
(
STQueue
 *
queue
,

511 
STDLIST
 *
siblög
,

512 
°poöãr
 
d©a
)

514 if(
NULL
 !
queue
 && NULL !
siblög
)

516 
queue
->
hód
 = 
	`°_dli°_ö£π_bef‹e
 (queue->hód, 
siblög
, 
d©a
);

517 
queue
->
Àngth
++;

519 
	}
}

533 
	$°_queue_ö£π_a·î
(
STQueue
 *
queue
,

534 
STDLIST
 *
siblög
,

535 
°poöãr
 
d©a
)

537 if(
NULL
 !
queue
 && NULL !
siblög
)

539 i‡(
siblög
 =
queue
->
èû
)

540 
	`°_queue_push_èû
 (
queue
, 
d©a
);

542 
	`°_queue_ö£π_bef‹e
 (
queue
, 
siblög
->
√xt
, 
d©a
);

544 
	}
}

561 
	$°_queue_ö£π_s‹ãd
(
STQueue
 *
queue
,

562 
°poöãr
 
d©a
,

563 
STCom∑ªD©aFunc
 
func
,

564 
°poöãr
 
u£r_d©a
)

566 
STDLIST
* 
li°
 ;

568 if(
NULL
 !
queue
)

570 
li°
 = 
queue
->
hód
;

571 
li°
 && 
	`func
 (li°->
d©a
, d©a, 
u£r_d©a
) < 0)

572 
li°
 =Üi°->
√xt
;

574 i‡(
li°
)

575 
	`°_queue_ö£π_bef‹e
 (
queue
, 
li°
, 
d©a
);

577 
	`°_queue_push_èû
 (
queue
, 
d©a
);

579 
	}
}

590 
	$°_queue_push_hód_lök
(
STQueue
 *
queue
,

591 
STDLIST
 *
lök_
)

593 if(
NULL
 !
queue
 && NULL !
lök_
 &&

594 
NULL
 =
lök_
->
¥ev
 && NULL =lök_->
√xt
)

596 
lök_
->
√xt
 = 
queue
->
hód
 ;

597 if(
NULL
 !
queue
->
hód
)

599 
queue
->
hód
->
¥ev
 = 
lök_
 ;

603 
queue
->
èû
 = 
lök_
 ;

605 
queue
->
hód
 = 
lök_
 ;

606 
queue
->
Àngth
++ ;

608 
	}
}

620 
	$°_queue_push_èû_lök
(
STQueue
 *
queue
,

621 
STDLIST
 *
lök_
)

623 if(
NULL
 !
queue
 && NULL !
lök_
 &&

624 
NULL
 =
lök_
->
¥ev
 && NULL =lök_->
√xt
)

626 
lök_
->
¥ev
 = 
queue
->
èû
 ;

627 if(
NULL
 !
queue
->
èû
)

629 
queue
->
èû
->
√xt
 = 
lök_
 ;

633 
queue
->
hód
 = 
lök_
 ;

635 
queue
->
èû
 = 
lök_
 ;

636 
queue
->
Àngth
++ ;

638 
	}
}

653 
	$°_queue_push_¡h_lök
(
STQueue
 *
queue
,

654 
°öt
 
n
,

655 
STDLIST
 *
lök_
)

657 
STDLIST
* 
√xt
 ;

658 
STDLIST
* 
¥ev
 ;

660 if(
NULL
 !
queue
 && NULL !
lök_
)

662 if(
n
 < 0 ||Ç >
queue
->
Àngth
)

664 
	`°_queue_push_èû_lök
(
queue
, 
lök_
);

667 
√xt
 = 
	`°_queue_≥ek_¡h_lök
(
queue
, 
n
);

668 
¥ev
 = 
√xt
->prev;

669 i‡(
¥ev
)

670 
¥ev
->
√xt
 = 
lök_
;

671 
√xt
->
¥ev
 = 
lök_
;

673 
lök_
->
√xt
 =Çext;

674 
lök_
->
¥ev
 =Örev;

676 i‡(
queue
->
hód
->
¥ev
)

677 
queue
->
hód
 = queue->hód->
¥ev
;

679 i‡(
queue
->
èû
->
√xt
)

680 
queue
->
èû
 = queue->èû->
√xt
;

682 
queue
->
Àngth
++;

684 
	}
}

696 
STDLIST
* 
	$°_queue_p›_hód_lök
(
STQueue
 *
queue
)

698 if(
NULL
 =
queue
)

699  
NULL
 ;

701 if(
NULL
 !
queue
->
hód
)

703 
STDLIST
* 
node
 = 
queue
->
hód
 ;

704 
queue
->
hód
 = 
node
->
√xt
 ;

705 if(
NULL
 !
queue
->
hód
)

707 
queue
->
hód
->
¥ev
 = 
NULL
 ;

708 
node
->
√xt
 = 
NULL
 ;

712 
queue
->
èû
 = 
NULL
 ;

714 
queue
->
Àngth
-- ;

715  
node
 ;

718  
NULL
 ;

719 
	}
}

731 
STDLIST
* 
	$°_queue_p›_èû_lök
(
STQueue
 *
queue
)

733 if(
NULL
 =
queue
)

734  
NULL
 ;

736 if(
NULL
 !
queue
->
èû
)

738 
STDLIST
* 
node
 ;

740 
node
 = 
queue
->
èû
 ;

741 
queue
->
èû
 = 
node
->
¥ev
 ;

742 if(
NULL
 !
queue
->
èû
)

744 
queue
->
èû
->
√xt
 = 
NULL
 ;

745 
node
->
¥ev
 = 
NULL
 ;

749 
queue
->
hód
 = 
NULL
 ;

751 
queue
->
Àngth
-- ;

752  
node
 ;

755  
NULL
 ;

756 
	}
}

765 
STDLIST
* 
	$°_queue_p›_¡h_lök
(
STQueue
 *
queue
,

766 
°uöt
 
n
)

768 
STDLIST
* 
lök
 ;

770 if(
NULL
 =
queue
)

771  
NULL
 ;

773 if(
n
 < 0 &&Ç >
queue
->
Àngth
)

774  
NULL
 ;

776 
lök
 = 
	`°_queue_≥ek_¡h_lök
(
queue
, 
n
);

777 
	`°_queue_u∆ök
(
queue
, 
lök
);

779  
lök
 ;

780 
	}
}

792 
STDLIST
* 
	$°_queue_≥ek_hód_lök
(
STQueue
 *
queue
)

794 if(
NULL
 =
queue
)

795  
NULL
 ;

797  
queue
->
hód
 ;

798 
	}
}

811 
STDLIST
* 
	$°_queue_≥ek_èû_lök
(
STQueue
 *
queue
)

813 if(
NULL
 =
queue
)

814  
NULL
 ;

816  
queue
->
èû
 ;

817 
	}
}

831 
STDLIST
* 
	$°_queue_≥ek_¡h_lök
(
STQueue
 *
queue
,

832 
°uöt
 
n
)

834 
STDLIST
* 
lök
 ;

835 
°öt
 
i
 ;

837 if(
NULL
 =
queue
)

838  
NULL
 ;

840 if(
n
 >
queue
->
Àngth
)

841  
NULL
 ;

843 if(
n
 > 
queue
->
Àngth
/2)

845 
n
 = 
queue
->
Àngth
 -Ç - 1 ;

846 
lök
 = 
queue
->
èû
 ;

847 
i
 = 0 ; i < 
n
 ; i++)

848 
lök
 =Üök->
¥ev
 ;

852 
lök
 = 
queue
->
hód
 ;

853 
i
 = 0 ; i < 
n
 ; i++)

854 
lök
 =Üök->
√xt
 ;

857  
lök
 ;

858 
	}
}

875 
°öt
 
	$°_queue_lök_ödex
(
STQueue
 *
queue
,

876 
STDLIST
 *
lök_
)

878 if(
NULL
 !
queue
)

880  
	`°_dli°_posôi⁄
(
queue
->
hód
, 
lök_
) ;

884 
	}
}

899 
	$°_queue_u∆ök
(
STQueue
 *
queue
,

900 
STDLIST
 *
lök_
)

902 if(
NULL
 !
queue
 && NULL !
lök_
)

904 i‡(
lök_
 =
queue
->
èû
)

905 
queue
->
èû
 = queue->èû->
¥ev
;

907 
queue
->
hód
 = 
	`°_dli°_ªmove_lök
 (queue->hód, 
lök_
);

908 
queue
->
Àngth
--;

910 
	}
}

924 
	$°_queue_dñëe_lök
(
STQueue
 *
queue
,

925 
STDLIST
 *
lök_
)

927 if(
NULL
 !
queue
 && NULL !
lök_
)

929 
	`°_queue_u∆ök
 (
queue
, 
lök_
);

930 
	`°_dli°_‰ì1
 (
lök_
);

932 
	}
}

943 
STQueueA
* 
	$°_¨øy_queue_√w
()

945 
STQueueA
* 
queue
 = 
NULL
 ;

947 
queue
 = (
STQueueA
 *)
	`mÆloc
((STQueueA));

948 if(
NULL
 =
queue
)

950 
	`__îr
("alloc mem for queue failed !\n");

951 
	`exô
(1) ;

954  
queue
 ;

955 
	}
}

957 
	$°_¨øy_queue_‰ì
(
STQueueA
* 
queue
)

959 if(
NULL
 !
queue
)

961 
	`‰ì
(
queue
) ;

962 
queue
 = 
NULL
 ;

964 
	}
}

965 #if 
isDy«mic


966 
	$°_¨øy_queue_dy«mic_öô
(
STQueueA
* 
queue
, 
°öt
 
maxSize
)

968 if(
NULL
 =
queue
)

970 
	`__îr
("queue is NULL !\n");

974 if(
maxSize
 <= 0)

976 
	`__îr
("the value of maxSize is illegal !\n");

977 
	`exô
(1) ;

980 
queue
->
maxSize
 = maxSize ;

981 
queue
->
Àngth
 = 0 ;

982 
queue
->
pD©a
 = (
°öt
 *)
	`mÆloc
((°öt)*
maxSize
) ;

983 
queue
->
‰⁄t
 = queue->
ª¨
 = -1 ;

985 
	}
}

987 
	$°_¨øy_queue_dy«mic_dñëe
(
STQueueA
* 
queue
)

989 if(
NULL
 !
queue
)

991 if(
NULL
 !
queue
->
pD©a
)

993 
	`‰ì
(
queue
->
pD©a
) ;

994 
queue
->
pD©a
 = 
NULL
 ;

995 
queue
->
‰⁄t
 = queue->
ª¨
 = -1 ;

996 
queue
->
Àngth
 = 0 ;

999 
	`°_¨øy_queue_‰ì
(
queue
);

1000 
	}
}

1003 
	$°_¨øy_queue_öô
(
STQueueA
* 
queue
)

1005 if(
NULL
 =
queue
)

1007 
	`__îr
("queue is NULL !\n");

1011 if(
MAXSIZE
 < 0)

1013 
	`__îr
("the value of maxSize is illegal !\n");

1014 
	`exô
(1) ;

1017 
queue
->
maxSize
 = 
MAXSIZE
 ;

1018 
queue
->
Àngth
 = 0 ;

1020 
queue
->
‰⁄t
 = queue->
ª¨
 = -1 ;

1023 
	}
}

1025 
	$°_¨øy_queue_dñëe
(
STQueueA
* 
queue
)

1027 if(
NULL
 !
queue
)

1029 if(
NULL
 !
queue
->
pD©a
)

1031 
	`mem£t
(
queue
->
pD©a
, 0, (queue->pData));

1032 
queue
->
‰⁄t
 = queue->
ª¨
 = -1 ;

1033 
queue
->
Àngth
 = 0 ;

1036 
	`°_¨øy_queue_‰ì
(
queue
);

1037 
	}
}

1041 
	$°_¨øy_queue_˛ór
(
STQueueA
* 
queue
)

1043 if(
NULL
 !
queue
)

1045 if(
NULL
 !
queue
->
pD©a
)

1047 
	`mem£t
(
queue
->
pD©a
, 0, (queue->pData));

1048 
queue
->
‰⁄t
 = queue->
ª¨
 = -1 ;

1049 
queue
->
Àngth
 = 0 ;

1052 
	}
}

1054 
°öt
 
	$°_¨øy_queue_em±y
(
STQueueA
* 
queue
)

1056 if(
NULL
 !
queue
)

1057  
queue
->
ª¨
 == -1 ;

1058 
	}
}

1060 
°öt
 
	$°_¨øy_queue_fuŒ
(
STQueueA
* 
queue
)

1062 if(
NULL
 !
queue
)

1063  ((
queue
->
ª¨
+1)%queue->
maxSize
Ë=queue->
‰⁄t
 ;

1064 
	}
}

1070 
°öt
 
	$°_¨øy_queue_≥ek
(
STQueueA
* 
queue
)

1072 if(
NULL
 !
queue
)

1073  
queue
->
pD©a
[queue->
‰⁄t
] ;

1074 
	}
}

1082 
°öt
 
	$°_¨øy_queue_push
(
STQueueA
* 
queue
, 
°öt
 
d©a
)

1085 if((
queue
->
‰⁄t
Ë=(queue->
ª¨
+1)%queue->
maxSize
)

1089 if(
queue
->
ª¨
 == -1)

1090 
queue
->
ª¨
 = queue->
‰⁄t
 = 0 ;

1092 
queue
->
ª¨
 = (queue->ª¨+1)%queue->
maxSize
;

1093 
queue
->
pD©a
[queue->
ª¨
] = 
d©a
 ;

1094 
queue
->
Àngth
++ ;

1095  
queue
->
Àngth
 ;

1097 
	}
}

1105 
°öt
 
	$°_¨øy_queue_p›
(
STQueueA
* 
queue
)

1107 
°öt
 
‰⁄t
 ;

1110 if(-1 =
queue
->
ª¨
)

1116 
‰⁄t
 = 
queue
->front ;

1117 if(
queue
->
ª¨
 =queue->
‰⁄t
)

1119 
queue
->
ª¨
 = queue->
‰⁄t
 = -1 ;

1123 
queue
->
‰⁄t
 = (queue->‰⁄t+1)%queue->
maxSize
 ;

1125 
queue
->
Àngth
-- ;

1126  
‰⁄t
;

1128 
	}
}

1131 
	$°_¨øy_queue_dump
(
STQueueA
* 
queue
)

1133 
°öt
 
i
 ;

1135 if(
NULL
 =
queue
)

1137 
FAIL
 ;

1139 if(
queue
->
ª¨
 == -1)

1141 
FAIL
 ;

1144 if((
queue
->
‰⁄t
 =queue->
ª¨
) && queue->front != -1)

1146 
	`__msg
("%d\n", 
queue
->
pD©a
[queue->
‰⁄t
]);

1151 
i
 = 
queue
->
‰⁄t
 ; i !(queue->
ª¨
+1)%queue->
maxSize
 ; )

1153 
	`¥ötf
("%d ", 
queue
->
pD©a
[
i
]) ;

1154 (
i
++)%
MAXSIZE
;

1156 
	`¥ötf
("\n");

1160 
FAIL
:

1161 
	`__îr
("the queue is NULL !\n");

1163 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_rbtree.c

1 
	~<°dio.h
>

2 
	~<mÆloc.h
>

3 
	~"°_rbåì.h
"

4 
	~"°_log.h
"

9 
RBNode
 * 
RBNuŒNode
 ;

10 
RBNode
 * 
Cuºít
, * 
Siblög
, * 
P¨ít
, * 
GrP¨ít
, * 
GrGrP¨ít
 ;

15 
RBNode
 * 
sögÀRŸ©eWôhLe·
 (RBNodê* c⁄° 
∑ª¡
) ;

16 
RBNode
 * 
sögÀRŸ©eWôhRight
 (RBNodê* c⁄° 
∑ª¡
) ;

17 
RBNode
 * 
rŸ©e
 (RBNodê* c⁄° 
∑ª¡
, c⁄° 
RBIãm
 
ôem
) ;

18 
h™dÀRe‹õ¡
 (
pRBTªe
 * c⁄° 
¥bt
, c⁄° 
RBIãm
 
ôem
) ;

19 
ch™geCﬁ‹
 () ;

20 
åavîßl
 (c⁄° 
RBNode
 * c⁄° 
≤
, (* 
pfun
) (const RBNode * constÖn)) ;

21 
	`ªÀa£
 (
RBNode
 * c⁄° 
≤
) ;

27 
°boﬁ
 
	$°_rbåì_¸óã
 (
pRBTªe
 * c⁄° 
¥bt
)

29 
RBNuŒNode
 = (
RBNode
 *Ë
	`mÆloc
 ( (RBNode)) ;

30 i‡(
NULL
 =
RBNuŒNode
)

31  
FALSE
 ;

32 *
¥bt
 = (
pRBTªe
Ë
	`mÆloc
 ( (
RBTªe
)) ;

33 i‡(
NULL
 =*
¥bt
)

35 
	`‰ì
 (
RBNuŒNode
) ;

36 
RBNuŒNode
 = 
NULL
 ;

37  
FALSE
 ;

39 (*
¥bt
)->
roŸ
 = (
RBNode
 *Ë
	`mÆloc
 ( (RBNode)) ;

40 i‡(
NULL
 =(*
¥bt
)->
roŸ
)

42 
	`‰ì
 (
RBNuŒNode
) ;

43 
RBNuŒNode
 = 
NULL
 ;

44 
	`‰ì
 (*
¥bt
) ;

46 
RBNuŒNode
->
ôem
 = 
INFINITY
 ;

47 
RBNuŒNode
->
À·
 = RBNuŒNode->
right
 = RBNullNode ;

48 
RBNuŒNode
->
cﬁ‹
 = 
Bœck
 ;

50 (*
¥bt
)->
roŸ
->
ôem
 = 
NEGATIVE_INFINITY
 ;

51 (*
¥bt
)->
roŸ
->
À·
 = (*¥bt)->roŸ->
right
 = 
RBNuŒNode
 ;

52 (*
¥bt
)->
roŸ
->
cﬁ‹
 = 
Bœck
 ;

54 (*
¥bt
)->
cuºít
 = 0 ;

56  
TRUE
 ;

57 
	}
}

59 
°boﬁ
 
	$°_rbåì_em±y
 (c⁄° 
pRBTªe
 * c⁄° 
¥bt
)

61 i‡(0 =(*
¥bt
)->
cuºít
)

62  
TRUE
 ;

64  
FALSE
 ;

65 
	}
}

67 
°boﬁ
 
	$°_rbåì_ö£π
 (
pRBTªe
 * c⁄° 
¥bt
, c⁄° 
RBIãm
 
ôem
)

69 
RBNode
 * 
√wNode
 ;

71 
GrP¨ít
 = 
P¨ít
 = 
Cuºít
 = (*
¥bt
)->
roŸ
 ;

72 
RBNuŒNode
->
ôem
 = item ;

74 
Cuºít
->
ôem
 != item)

76 
GrGrP¨ít
 = 
GrP¨ít
 ;

77 
GrP¨ít
 = 
P¨ít
 ;

78 
P¨ít
 = 
Cuºít
 ;

79 i‡(
ôem
 < 
Cuºít
->item)

80 
Cuºít
 = Cuºít->
À·
 ;

82 
Cuºít
 = Cuºít->
right
 ;

84 i‡(
Red
 =
Cuºít
->
À·
->
cﬁ‹
 && Red =Cuºít->
right
->color)

85 
	`h™dÀRe‹õ¡
 (
¥bt
, 
ôem
) ;

87 i‡(
Cuºít
 !
RBNuŒNode
)

88  
FALSE
 ;

89 
√wNode
 = (
RBNode
 *Ë
	`mÆloc
 ( (RBNode)) ;

90 i‡(
NULL
 =
√wNode
)

91  
FALSE
 ;

92 
√wNode
->
ôem
 = item ;

93 
√wNode
->
À·
 =ÇewNode->
right
 = 
RBNuŒNode
 ;

95 i‡(
ôem
 <
P¨ít
->item)

96 
P¨ít
->
À·
 = 
√wNode
 ;

98 
P¨ít
->
right
 = 
√wNode
 ;

99 
Cuºít
 = 
√wNode
 ;

100 
	`h™dÀRe‹õ¡
 (
¥bt
, 
ôem
) ;

102 (*
¥bt
)->
cuºít
++ ;

104  
TRUE
 ;

105 
	}
}

108 
°boﬁ
 
	$°_rbåì_dñëe
 (
pRBTªe
 * c⁄° 
¥bt
, c⁄° 
RBIãm
 
ôem
)

110 
°boﬁ
 
found
 = 
FALSE
 ;

111 
RBNode
 * 
ªc‹d
 ;

112 
RBIãm
 
sˇ≥gﬂt
 ;

113 
°öt
 
ãmp
 ;

115 i‡(
	`°_rbåì_em±y
 (
¥bt
))

116  
FALSE
 ;

117 
Cuºít
 = (*
¥bt
)->
roŸ
 ;

119 
Cuºít
 !
RBNuŒNode
)

121 i‡(
ôem
 =
Cuºít
->item)

123 
found
 = 
TRUE
 ;

124 
ªc‹d
 = 
Cuºít
 ;

127 i‡(
ôem
 < 
Cuºít
->item)

129 
P¨ít
 = 
Cuºít
 ;

130 
Cuºít
 = Cuºít->
À·
 ;

134 
P¨ít
 = 
Cuºít
 ;

135 
Cuºít
 = Cuºít->
right
 ;

139 i‡(
FALSE
 =
found
)

140  
FALSE
 ;

141 i‡(
Cuºít
->
right
 !
RBNuŒNode
)

143 
P¨ít
 = 
Cuºít
 ;

144 
Cuºít
 = 
P¨ít
->
right
 ;

145 
sˇ≥gﬂt
 = 
Cuºít
->
ôem
 ;

147 
Cuºít
->
À·
 !
RBNuŒNode
)

149 
P¨ít
 = 
Cuºít
 ;

150 
Cuºít
 = Cuºít->
À·
 ;

151 
sˇ≥gﬂt
 = 
Cuºít
->
ôem
 ;

154 i‡(
Cuºít
->
right
 !
RBNuŒNode
)

156 
ãmp
 = 
Cuºít
->
cﬁ‹
 ;

157 
Cuºít
->
cﬁ‹
 = Cuºít->
right
->color ;

158 
Cuºít
->
right
->
cﬁ‹
 = 
ãmp
 ;

159 
P¨ít
->
À·
 = 
	`sögÀRŸ©eWôhRight
 (
Cuºít
) ;

162 i‡(
Cuºít
->
À·
 !
RBNuŒNode
)

164 
P¨ít
 = 
Cuºít
 ;

165 
Cuºít
 = 
P¨ít
->
À·
 ;

166 
sˇ≥gﬂt
 = 
Cuºít
->
ôem
 ;

167 
Cuºít
->
right
 !
RBNuŒNode
)

169 
P¨ít
 = 
Cuºít
 ;

170 
Cuºít
 = Cuºít->
right
 ;

171 
sˇ≥gﬂt
 = 
Cuºít
->
ôem
 ;

173 i‡(
Cuºít
->
À·
 !
RBNuŒNode
)

175 
ãmp
 = 
Cuºít
->
cﬁ‹
 ;

176 
Cuºít
->
cﬁ‹
 = Cuºít->
À·
->color ;

177 
Cuºít
->
À·
->
cﬁ‹
 = 
ãmp
 ;

178 
P¨ít
->
right
 = 
	`sögÀRŸ©eWôhLe·
 (
Cuºít
) ;

185 i‡(
Red
 =
Cuºít
->
cﬁ‹
)

187 i‡(
Cuºít
 =
P¨ít
->
À·
)

188 
P¨ít
->
À·
 = 
RBNuŒNode
 ;

190 
P¨ít
->
right
 = 
RBNuŒNode
 ;

191 
	`‰ì
 (
Cuºít
) ;

192 (*
¥bt
)->
cuºít
-- ;

193  
TRUE
 ;

196 
sˇ≥gﬂt
 = 
Cuºít
->
ôem
 ;

199 (*
¥bt
)->
roŸ
->
cﬁ‹
 = 
Red
 ;

200 
Cuºít
 = (*
¥bt
)->
roŸ
 ;

202 
RBNuŒNode
->
ôem
 = (*
¥bt
)->
roŸ
->item ;

204 
Cuºít
->
ôem
 !
sˇ≥gﬂt
)

206 i‡(
sˇ≥gﬂt
 < 
Cuºít
->
ôem
)

209 
GrP¨ít
 = 
P¨ít
 ;

210 
P¨ít
 = 
Cuºít
 ;

211 
Cuºít
 = 
P¨ít
->
À·
 ;

212 
Siblög
 = 
P¨ít
->
right
 ;

214 i‡(
Red
 =
Cuºít
->
À·
->
cﬁ‹
 || Red =Cuºít->
right
->color)

216 i‡(
sˇ≥gﬂt
 < 
Cuºít
->
ôem
)

219 i‡(
Bœck
 =
Cuºít
->
À·
->
cﬁ‹
)

221 
Cuºít
->
cﬁ‹
 = 
Red
 ;

222 
Cuºít
->
right
->
cﬁ‹
 = 
Bœck
 ;

223 
P¨ít
->
À·
 = 
	`sögÀRŸ©eWôhRight
 (
Cuºít
) ;

228 
GrP¨ít
 = 
P¨ít
 ;

229 
P¨ít
 = 
Cuºít
 ;

230 
Cuºít
 = 
P¨ít
->
À·
 ;

231 
Siblög
 = 
P¨ít
->
right
 ;

238 i‡(
Bœck
 =
Cuºít
->
right
->
cﬁ‹
)

240 
Cuºít
->
cﬁ‹
 = 
Red
 ;

241 
Cuºít
->
À·
->
cﬁ‹
 = 
Bœck
 ;

242 
P¨ít
->
À·
 = 
	`sögÀRŸ©eWôhLe·
 (
Cuºít
) ;

247 
GrP¨ít
 = 
P¨ít
 ;

248 
P¨ít
 = 
Cuºít
 ;

249 
Cuºít
 = 
P¨ít
->
right
 ;

250 
Siblög
 = 
P¨ít
->
À·
 ;

256 i‡(
Bœck
 =
Cuºít
->
À·
->
cﬁ‹
 && Bœck =Cuºít->
right
->color)

259 i‡(
Red
 =
Siblög
->
À·
->
cﬁ‹
)

261 
P¨ít
->
right
 = 
	`sögÀRŸ©eWôhLe·
 (
Siblög
) ;

262 
P¨ít
->
cﬁ‹
 = 
Bœck
 ;

263 
Cuºít
->
cﬁ‹
 = 
Red
 ;

264 i‡(
P¨ít
 =
GrP¨ít
->
À·
)

265 
GrP¨ít
->
À·
 = 
	`sögÀRŸ©eWôhRight
 (
P¨ít
) ;

267 
GrP¨ít
->
right
 = 
	`sögÀRŸ©eWôhRight
 (
P¨ít
) ;

270 i‡(
Red
 =
Siblög
->
right
->
cﬁ‹
)

272 
P¨ít
->
cﬁ‹
 = 
Bœck
 ;

273 
Siblög
->
right
->
cﬁ‹
 = 
Bœck
 ;

274 
Siblög
->
cﬁ‹
 = 
Red
 ;

275 
Cuºít
->
cﬁ‹
 = 
Red
 ;

276 i‡(
P¨ít
 =
GrP¨ít
->
À·
)

277 
GrP¨ít
->
À·
 = 
	`sögÀRŸ©eWôhRight
 (
P¨ít
) ;

279 
GrP¨ít
->
right
 = 
	`sögÀRŸ©eWôhRight
 (
P¨ít
) ;

283 
	`ch™geCﬁ‹
 () ;

289 
GrP¨ít
 = 
P¨ít
 ;

290 
P¨ít
 = 
Cuºít
 ;

291 
Cuºít
 = 
P¨ít
->
right
 ;

292 
Siblög
 = 
P¨ít
->
À·
 ;

293 i‡(
Red
 =
Cuºít
->
À·
->
cﬁ‹
 || Red =Cuºít->
right
->color)

295 i‡(
sˇ≥gﬂt
 < 
Cuºít
->
ôem
)

297 i‡(
Bœck
 =
Cuºít
->
À·
->
cﬁ‹
)

299 
Cuºít
->
cﬁ‹
 = 
Red
 ;

300 
Cuºít
->
right
->
cﬁ‹
 = 
Bœck
 ;

301 
P¨ít
->
right
 = 
	`sögÀRŸ©eWôhRight
 (
Cuºít
) ;

305 
GrP¨ít
 = 
P¨ít
 ;

306 
P¨ít
 = 
Cuºít
 ;

307 
Cuºít
 = 
P¨ít
->
À·
 ;

308 
Siblög
 = 
P¨ít
->
right
 ;

314 i‡(
Bœck
 =
Cuºít
->
right
->
cﬁ‹
)

316 
Cuºít
->
cﬁ‹
 = 
Red
 ;

317 
Cuºít
->
À·
->
cﬁ‹
 = 
Bœck
 ;

318 
P¨ít
->
À·
 = 
	`sögÀRŸ©eWôhLe·
 (
Cuºít
) ;

322 
GrP¨ít
 = 
P¨ít
 ;

323 
P¨ít
 = 
Cuºít
 ;

324 
Cuºít
 = 
P¨ít
->
right
 ;

325 
Siblög
 = 
P¨ít
->
À·
 ;

330 i‡(
Bœck
 =
Cuºít
->
À·
->
cﬁ‹
 && Bœck =Cuºít->
right
->color)

332 i‡(
Red
 =
Siblög
->
À·
->
cﬁ‹
)

334 
P¨ít
->
cﬁ‹
 = 
Bœck
 ;

335 
Siblög
->
À·
->
cﬁ‹
 = 
Bœck
 ;

336 
Siblög
->
cﬁ‹
 = 
Red
 ;

337 
Cuºít
->
cﬁ‹
 = 
Red
 ;

338 i‡(
P¨ít
 =
GrP¨ít
->
À·
)

339 
GrP¨ít
->
À·
 = 
	`sögÀRŸ©eWôhLe·
 (
P¨ít
) ;

341 
GrP¨ít
->
right
 = 
	`sögÀRŸ©eWôhLe·
 (
P¨ít
) ;

343 i‡(
Red
 =
Siblög
->
right
->
cﬁ‹
)

345 
P¨ít
->
À·
 = 
	`sögÀRŸ©eWôhRight
 (
Siblög
) ;

346 
P¨ít
->
cﬁ‹
 = 
Bœck
 ;

347 
Cuºít
->
cﬁ‹
 = 
Red
 ;

348 i‡(
P¨ít
 =
GrP¨ít
->
À·
)

349 
GrP¨ít
->
À·
 = 
	`sögÀRŸ©eWôhLe·
 (
P¨ít
) ;

351 
GrP¨ít
->
right
 = 
	`sögÀRŸ©eWôhLe·
 (
P¨ít
) ;

355 
	`ch™geCﬁ‹
 () ;

356 i‡(
Red
 =
RBNuŒNode
->
cﬁ‹
)

358 
	`putch¨
 ('\a') ;

359 
RBNuŒNode
->
cﬁ‹
 = 
Bœck
 ;

366 
ªc‹d
->
ôem
 = 
sˇ≥gﬂt
 ;

367 i‡(
sˇ≥gﬂt
 =
P¨ít
->
À·
->
ôem
)

368 
P¨ít
->
À·
 = 
RBNuŒNode
 ;

370 
P¨ít
->
right
 = 
RBNuŒNode
 ;

371 
	`‰ì
 (
Cuºít
) ;

372 (*
¥bt
)->
roŸ
->
cﬁ‹
 = 
Bœck
 ;

373 (*
¥bt
)->
roŸ
->
right
->
cﬁ‹
 = 
Bœck
 ;

375 (*
¥bt
)->
cuºít
-- ;

377  
TRUE
 ;

378 
	}
}

380 
°_rbåì_åavî£
 (c⁄° 
pRBTªe
 * c⁄° 
¥bt
, (* 
pfun
Ë(c⁄° 
RBNode
 * c⁄° 
≤
))

382 
	`åavîßl
 ((*
¥bt
)->
roŸ
->
right
, 
pfun
) ;

383 
	`putch¨
 ('\n') ;

384 
	}
}

386 
	$°_rbåì_ªÀa£
 (c⁄° 
pRBTªe
 * c⁄° 
¥bt
)

388 
	`ªÀa£
 ((*
¥bt
)->
roŸ
->
right
) ;

389 
	`‰ì
 ((*
¥bt
)->
roŸ
) ;

390 
	`‰ì
 (*
¥bt
) ;

391 
	`‰ì
 (
RBNuŒNode
) ;

392 
	}
}

397 
RBNode
 * 
	$sögÀRŸ©eWôhLe·
 (
RBNode
 * c⁄° 
∑ª¡
)

399 
RBNode
 * 
chûd
 ;

401 
chûd
 = 
∑ª¡
->
À·
 ;

402 
∑ª¡
->
À·
 = 
chûd
->
right
 ;

403 
chûd
->
right
 = 
∑ª¡
 ;

405  
chûd
 ;

406 
	}
}

408 
RBNode
 * 
	$sögÀRŸ©eWôhRight
 (
RBNode
 * c⁄° 
∑ª¡
)

410 
RBNode
 * 
chûd
 ;

412 
chûd
 = 
∑ª¡
->
right
 ;

413 
∑ª¡
->
right
 = 
chûd
->
À·
 ;

414 
chûd
->
À·
 = 
∑ª¡
 ;

416  
chûd
 ;

417 
	}
}

419 
RBNode
 * 
	$rŸ©e
 (
RBNode
 * c⁄° 
∑ª¡
, c⁄° 
RBIãm
 
ôem
)

421 i‡(
ôem
 < 
∑ª¡
->item)

423  
∑ª¡
->
À·
 = 
ôem
 <Öarent->left->item ?

424 
	`sögÀRŸ©eWôhLe·
 (
∑ª¡
->
À·
)

425 : 
	`sögÀRŸ©eWôhRight
 (
∑ª¡
->
À·
) ;

429  
∑ª¡
->
right
 = 
ôem
 <Öarent->right->item ?

430 
	`sögÀRŸ©eWôhLe·
 (
∑ª¡
->
right
)

431 : 
	`sögÀRŸ©eWôhRight
 (
∑ª¡
->
right
) ;

433 
	}
}

435 
	$h™dÀRe‹õ¡
 (
pRBTªe
 * c⁄° 
¥bt
, c⁄° 
RBIãm
 
ôem
)

438 
Cuºít
->
cﬁ‹
 = 
Red
 ;

439 
Cuºít
->
À·
->
cﬁ‹
 = Cuºít->
right
->cﬁ‹ = 
Bœck
 ;

441 i‡(
Red
 =
P¨ít
->
cﬁ‹
)

444 
GrP¨ít
->
cﬁ‹
 = 
Red
 ;

446 i‡((
ôem
 < 
GrP¨ít
->ôemË!(ôem < 
P¨ít
->item))

447 
P¨ít
 = 
	`rŸ©e
 (
GrP¨ít
, 
ôem
) ;

448 
Cuºít
 = 
	`rŸ©e
 (
GrGrP¨ít
, 
ôem
) ;

449 
Cuºít
->
cﬁ‹
 = 
Bœck
 ;

451 (*
¥bt
)->
roŸ
->
right
->
cﬁ‹
 = 
Bœck
 ;

452 
	}
}

455 
	$ch™geCﬁ‹
 ()

457 i‡(
P¨ít
->
À·
 !
RBNuŒNode
)

458 
P¨ít
->
À·
->
cﬁ‹
 = 
Red
 ;

459 
P¨ít
->
cﬁ‹
 = 
Bœck
 ;

460 
P¨ít
->
right
->
cﬁ‹
 = 
Red
 ;

461 
	}
}

463 
åavîßl
 (c⁄° 
RBNode
 * c⁄° 
≤
, (* 
pfun
) (const RBNode * constÖn))

465 i‡(
≤
 !
RBNuŒNode
)

467 
	`åavîßl
 (
≤
->
À·
, 
pfun
) ;

468 (* 
pfun
Ë(
≤
) ;

469 
	`åavîßl
 (
≤
->
right
, 
pfun
) ;

471 
	}
}

474 
	$ªÀa£
 (
RBNode
 * c⁄° 
≤
)

476 i‡(
≤
 !
RBNuŒNode
)

478 
	`ªÀa£
 (
≤
->
À·
) ;

479 
	`ªÀa£
 (
≤
->
right
) ;

480 
	`‰ì
 (
≤
) ;

482 
	}
}

488 
	$rb_åavî£
(
rb_node_t
* 
roŸ
)

490 if(
roŸ
 !
NULL
)

492 
	`rb_åavî£
(
roŸ
->
À·
);

493 
	`¥ötf
("%d ", 
roŸ
->
key
);

494 
	`rb_åavî£
(
roŸ
->
right
);

496 
	}
}

499 
rb_node_t
* 
	$rb_√w_node
(
RBKey_t
 
key
, 
d©a_t
 
d©a
)

501 
rb_node_t
 *
node
 = (rb_node_t*)
	`mÆloc
((rb_node_t));

503 i‡(!
node
)

505 
	`¥ötf
("mallocÉrror!\n");

506 
	`exô
(-1);

508 
node
->
key
 = key,Çode->
d©a
 = data;

510  
node
;

511 
	}
}

514 
rb_node_t
* 
	$rb_£¨ch_auxûüry
(
RBKey_t
 
key
, 
rb_node_t
* 
roŸ
,Ñb_node_t** 
ßve
)

516 
rb_node_t
 *
node
 = 
roŸ
, *
∑ª¡
 = 
NULL
;

518 
ªt
;

520 
node
)

522 
∑ª¡
 = 
node
 ;

524 if(
key
 < 
node
->key)

526 
node
 =Çode->
À·
 ;

528 if(
key
 > 
node
->key)

530 
node
 =Çode->
right
 ;

534  
node
 ;

538 i‡(
ßve
)

540 *
ßve
 = 
∑ª¡
;

543  
NULL
 ;

544 
	}
}

555 
rb_node_t
* 
	$rb_rŸ©e_À·
(
rb_node_t
* 
node
,Ñb_node_t* 
roŸ
)

557 
rb_node_t
* 
right
 = 
node
->right;

559 i‡((
node
->
right
 =Ñight->
À·
))

561 
right
->
À·
->
∑ª¡
 = 
node
;

563 
right
->
À·
 = 
node
;

566 i‡((
right
->
∑ª¡
 = 
node
->parent))

568 i‡(
node
 =node->
∑ª¡
->
right
)

570 
node
->
∑ª¡
->
right
 =Ñight;

574 
node
->
∑ª¡
->
À·
 = 
right
;

579 
roŸ
 = 
right
;

581 
node
->
∑ª¡
 = 
right
;

584  
roŸ
;

586 
	}
}

598 
rb_node_t
* 
	$rb_rŸ©e_right
(
rb_node_t
* 
node
,Ñb_node_t* 
roŸ
)

600 
rb_node_t
* 
À·
 = 
node
->left;

602 i‡((
node
->
À·
 =Üe·->
right
))

604 
À·
->
right
->
∑ª¡
 = 
node
;

607 
À·
->
right
 = 
node
;

609 i‡((
À·
->
∑ª¡
 = 
node
->parent))

611 i‡(
node
 =node->
∑ª¡
->
right
)

613 
node
->
∑ª¡
->
right
 = 
À·
;

617 
node
->
∑ª¡
->
À·
 =Üeft;

622 
roŸ
 = 
À·
;

625 
node
->
∑ª¡
 = 
À·
;

627  
roŸ
;

628 
	}
}

632 
rb_node_t
* 
	$rb_ö£π_ªbÆ™˚
(
rb_node_t
 *
node
,Ñb_node_à*
roŸ
)

634 
rb_node_t
 *
∑ª¡
, *
g∑ª¡
, *
un˛e
, *
tmp
;

636 (
∑ª¡
 = 
node
->∑ª¡Ë&&Ö¨ít->
cﬁ‹
 =
RED
)

638 
g∑ª¡
 = 
∑ª¡
->parent;

640 i‡(
∑ª¡
 =
g∑ª¡
->
À·
)

642 
un˛e
 = 
g∑ª¡
->
right
;

644 i‡(
un˛e
 && un˛e->
cﬁ‹
 =
RED
)

647 
un˛e
->
cﬁ‹
 = 
BLACK
;

649 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

651 
g∑ª¡
->
cﬁ‹
 = 
RED
;

653 
node
 = 
g∑ª¡
;

658 i‡(
∑ª¡
->
right
 =
node
)

661 
roŸ
 = 
	`rb_rŸ©e_À·
(
∑ª¡
,Ñoot);

663 
tmp
 = 
∑ª¡
;

665 
∑ª¡
 = 
node
;

667 
node
 = 
tmp
;

670 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

672 
g∑ª¡
->
cﬁ‹
 = 
RED
;

674 
roŸ
 = 
	`rb_rŸ©e_right
(
g∑ª¡
,Ñoot);

681 
un˛e
 = 
g∑ª¡
->
À·
;

683 i‡(
un˛e
 && un˛e->
cﬁ‹
 =
RED
)

686 
un˛e
->
cﬁ‹
 = 
BLACK
;

688 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

690 
g∑ª¡
->
cﬁ‹
 = 
RED
;

692 
node
 = 
g∑ª¡
;

697 i‡(
∑ª¡
->
À·
 =
node
)

700 
roŸ
 = 
	`rb_rŸ©e_right
(
∑ª¡
,Ñoot);

702 
tmp
 = 
∑ª¡
;

704 
∑ª¡
 = 
node
;

706 
node
 = 
tmp
;

709 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

711 
g∑ª¡
->
cﬁ‹
 = 
RED
;

713 
roŸ
 = 
	`rb_rŸ©e_À·
(
g∑ª¡
,Ñoot);

718 
roŸ
->
cﬁ‹
 = 
BLACK
;

720  
roŸ
;

721 
	}
}

726 
rb_node_t
* 
	$°_rbt_ö£π
(
RBKey_t
 
key
, 
d©a_t
 
d©a
, 
rb_node_t
* 
roŸ
)

728 
rb_node_t
* 
∑ª¡
 = 
NULL
 , *
node
 = NULL ;

730 if((
node
 = 
	`rb_£¨ch_auxûüry
(
key
, 
roŸ
, &
∑ª¡
)))

732  
roŸ
 ;

735 
node
 = 
	`rb_√w_node
(
key
, 
d©a
);

736 
node
->
∑ª¡
 =Öarent ;

737 
node
->
À·
 =Çode->
right
 = 
NULL
 ;

738 
node
->
cﬁ‹
 = 
RED
 ;

740 if(
∑ª¡
)

742 if(
∑ª¡
->
key
 > key)

743 
∑ª¡
->
À·
 = 
node
 ;

744 if(
∑ª¡
->
key
 < key)

745 
∑ª¡
->
right
 = 
node
 ;

749 
roŸ
 = 
node
 ;

752  
	`rb_ö£π_ªbÆ™˚
(
node
, 
roŸ
);

753 
	}
}

756 
rb_node_t
* 
	$°_rbt_£¨ch
(
RBKey_t
 
key
, 
rb_node_t
* 
roŸ
)

758  
	`rb_£¨ch_auxûüry
(
key
, 
roŸ
, 
NULL
);

759 
	}
}

762 
rb_node_t
* 
	$rb_îa£_ªbÆ™˚
(
rb_node_t
 *
node
,Ñb_node_à*
∑ª¡
,Ñb_node_à*
roŸ
)

764 
rb_node_t
 *
Ÿhî
, *
o_À·
, *
o_right
;

766 (!
node
 ||Çode->
cﬁ‹
 =
BLACK
Ë&&Çodê!
roŸ
)

768 i‡(
∑ª¡
->
À·
 =
node
)

770 
Ÿhî
 = 
∑ª¡
->
right
;

771 i‡(
Ÿhî
->
cﬁ‹
 =
RED
)

774 
Ÿhî
->
cﬁ‹
 = 
BLACK
;

776 
∑ª¡
->
cﬁ‹
 = 
RED
;

778 
roŸ
 = 
	`rb_rŸ©e_À·
(
∑ª¡
,Ñoot);

780 
Ÿhî
 = 
∑ª¡
->
right
;

783 i‡((!
Ÿhî
->
À·
 || othî->À·->
cﬁ‹
 =
BLACK
) &&

784 (!
Ÿhî
->
right
 || othî->right->
cﬁ‹
 =
BLACK
))

786 
Ÿhî
->
cﬁ‹
 = 
RED
;

788 
node
 = 
∑ª¡
;

790 
∑ª¡
 = 
node
->parent;

795 i‡(!
Ÿhî
->
right
 || othî->right->
cﬁ‹
 =
BLACK
)

798 i‡((
o_À·
 = 
Ÿhî
->
À·
))

800 
o_À·
->
cﬁ‹
 = 
BLACK
;

803 
Ÿhî
->
cﬁ‹
 = 
RED
;

805 
roŸ
 = 
	`rb_rŸ©e_right
(
Ÿhî
,Ñoot);

807 
Ÿhî
 = 
∑ª¡
->
right
;

810 
Ÿhî
->
cﬁ‹
 = 
∑ª¡
->color;

812 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

814 i‡(
Ÿhî
->
right
)

817 
Ÿhî
->
right
->
cﬁ‹
 = 
BLACK
;

821 
roŸ
 = 
	`rb_rŸ©e_À·
(
∑ª¡
,Ñoot);

823 
node
 = 
roŸ
;

830 
Ÿhî
 = 
∑ª¡
->
À·
;

832 i‡(
Ÿhî
->
cﬁ‹
 =
RED
)

834 
Ÿhî
->
cﬁ‹
 = 
BLACK
;

836 
∑ª¡
->
cﬁ‹
 = 
RED
;

838 
roŸ
 = 
	`rb_rŸ©e_right
(
∑ª¡
,Ñoot);

840 
Ÿhî
 = 
∑ª¡
->
À·
;

843 i‡((!
Ÿhî
->
À·
 || othî->À·->
cﬁ‹
 =
BLACK
) &&

844 (!
Ÿhî
->
right
 || othî->right->
cﬁ‹
 =
BLACK
))

846 
Ÿhî
->
cﬁ‹
 = 
RED
;

848 
node
 = 
∑ª¡
;

850 
∑ª¡
 = 
node
->parent;

854 i‡(!
Ÿhî
->
À·
 || othî->À·->
cﬁ‹
 =
BLACK
)

856 i‡((
o_right
 = 
Ÿhî
->
right
))

858 
o_right
->
cﬁ‹
 = 
BLACK
;

861 
Ÿhî
->
cﬁ‹
 = 
RED
;

863 
roŸ
 = 
	`rb_rŸ©e_À·
(
Ÿhî
,Ñoot);

865 
Ÿhî
 = 
∑ª¡
->
À·
;

868 
Ÿhî
->
cﬁ‹
 = 
∑ª¡
->color;

870 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

872 i‡(
Ÿhî
->
À·
)

874 
Ÿhî
->
À·
->
cﬁ‹
 = 
BLACK
;

877 
roŸ
 = 
	`rb_rŸ©e_right
(
∑ª¡
,Ñoot);

879 
node
 = 
roŸ
;

886 i‡(
node
)

888 
node
->
cﬁ‹
 = 
BLACK
;

891  
roŸ
;

893 
	}
}

896 
rb_node_t
* 
	$°_rbt_îa£
(
RBKey_t
 
key
, 
rb_node_t
 *
roŸ
)

898 
rb_node_t
 *
chûd
, *
∑ª¡
, *
ﬁd
, *
À·
, *
node
;

900 
cﬁ‹_t
 
cﬁ‹
;

902 i‡(!(
node
 = 
	`rb_£¨ch_auxûüry
(
key
, 
roŸ
, 
NULL
)))

904 
	`¥ötf
("key %d isÇotÉxist!\n");

906  
roŸ
;

909 
ﬁd
 = 
node
;

911 i‡(
node
->
À·
 &&Çode->
right
)

913 
node
 =Çode->
right
;

915 (
À·
 = 
node
->À·Ë!
NULL
)

917 
node
 = 
À·
;

920 
chûd
 = 
node
->
right
;

922 
∑ª¡
 = 
node
->parent;

924 
cﬁ‹
 = 
node
->color;

926 i‡(
chûd
)

928 
chûd
->
∑ª¡
 =Öarent;

931 i‡(
∑ª¡
)

933 i‡(
∑ª¡
->
À·
 =
node
)

935 
∑ª¡
->
À·
 = 
chûd
;

939 
∑ª¡
->
right
 = 
chûd
;

944 
roŸ
 = 
chûd
;

947 i‡(
node
->
∑ª¡
 =
ﬁd
)

949 
∑ª¡
 = 
node
;

952 
node
->
∑ª¡
 = 
ﬁd
->parent;

954 
node
->
cﬁ‹
 = 
ﬁd
->color;

956 
node
->
right
 = 
ﬁd
->right;

958 
node
->
À·
 = 
ﬁd
->left;

960 i‡(
ﬁd
->
∑ª¡
)

962 i‡(
ﬁd
->
∑ª¡
->
À·
 == old)

964 
ﬁd
->
∑ª¡
->
À·
 = 
node
;

968 
ﬁd
->
∑ª¡
->
right
 = 
node
;

973 
roŸ
 = 
node
;

976 
ﬁd
->
À·
->
∑ª¡
 = 
node
;

978 i‡(
ﬁd
->
right
)

980 
ﬁd
->
right
->
∑ª¡
 = 
node
;

985 i‡(!
node
->
À·
)

987 
chûd
 = 
node
->
right
;

989 i‡(!
node
->
right
)

991 
chûd
 = 
node
->
À·
;

994 
∑ª¡
 = 
node
->parent;

996 
cﬁ‹
 = 
node
->color;

998 i‡(
chûd
)

1000 
chûd
->
∑ª¡
 =Öarent;

1003 i‡(
∑ª¡
)

1005 i‡(
∑ª¡
->
À·
 =
node
)

1007 
∑ª¡
->
À·
 = 
chûd
;

1011 
∑ª¡
->
right
 = 
chûd
;

1016 
roŸ
 = 
chûd
;

1020 
	`‰ì
(
ﬁd
);

1022 i‡(
cﬁ‹
 =
BLACK
)

1024 
roŸ
 = 
	`rb_îa£_ªbÆ™˚
(
chûd
, 
∑ª¡
,Ñoot);

1027  
roŸ
;

1028 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_rbtree_lk.c

1 
	~<°dio.h
>

2 
	~<mÆloc.h
>

3 
	~"°_rbåì_lk.h
"

4 
	~"°_log.h
"

6 
	$__rb_rŸ©e_À·
(
rb_node
 *
node
, 
rb_roŸ
 *
roŸ
)

8 
rb_node
 *
right
 = 
node
->
rb_right
;

9 
rb_node
 *
∑ª¡
 = 
	`rb_∑ª¡
(
node
);

11 i‡((
node
->
rb_right
 = 
right
->
rb_À·
))

12 
	`rb_£t_∑ª¡
(
right
->
rb_À·
, 
node
);

13 
right
->
rb_À·
 = 
node
;

15 
	`rb_£t_∑ª¡
(
right
, 
∑ª¡
);

17 i‡(
∑ª¡
)

19 i‡(
node
 =
∑ª¡
->
rb_À·
)

20 
∑ª¡
->
rb_À·
 = 
right
;

22 
∑ª¡
->
rb_right
 = 
right
;

25 
roŸ
->
rb_node
 = 
right
;

26 
	`rb_£t_∑ª¡
(
node
, 
right
);

27 
	}
}

30 
	$__rb_rŸ©e_right
(
rb_node
 *
node
, 
rb_roŸ
 *
roŸ
)

32 
rb_node
 *
À·
 = 
node
->
rb_À·
;

33 
rb_node
 *
∑ª¡
 = 
	`rb_∑ª¡
(
node
);

35 i‡((
node
->
rb_À·
 = 
À·
->
rb_right
))

36 
	`rb_£t_∑ª¡
(
À·
->
rb_right
, 
node
);

37 
À·
->
rb_right
 = 
node
;

39 
	`rb_£t_∑ª¡
(
À·
, 
∑ª¡
);

41 i‡(
∑ª¡
)

43 i‡(
node
 =
∑ª¡
->
rb_right
)

44 
∑ª¡
->
rb_right
 = 
À·
;

46 
∑ª¡
->
rb_À·
 = 
À·
;

49 
roŸ
->
rb_node
 = 
À·
;

50 
	`rb_£t_∑ª¡
(
node
, 
À·
);

51 
	}
}

53 
	$rb_ö£π_cﬁ‹
(
rb_node
 *
node
, 
rb_roŸ
 *
roŸ
)

55 
rb_node
 *
∑ª¡
, *
g∑ª¡
;

57 (
∑ª¡
 = 
	`rb_∑ª¡
(
node
)Ë&& 
	`rb_is_ªd
(parent))

59 
g∑ª¡
 = 
	`rb_∑ª¡
(
∑ª¡
);

61 i‡(
∑ª¡
 =
g∑ª¡
->
rb_À·
)

64 
rb_node
 *
un˛e
 = 
g∑ª¡
->
rb_right
;

65 i‡(
un˛e
 && 
	`rb_is_ªd
(uncle))

67 
	`rb_£t_bœck
(
un˛e
);

68 
	`rb_£t_bœck
(
∑ª¡
);

69 
	`rb_£t_ªd
(
g∑ª¡
);

70 
node
 = 
g∑ª¡
;

75 i‡(
∑ª¡
->
rb_right
 =
node
)

77 
rb_node
 *
tmp
;

78 
	`__rb_rŸ©e_À·
(
∑ª¡
, 
roŸ
);

79 
tmp
 = 
∑ª¡
;

80 
∑ª¡
 = 
node
;

81 
node
 = 
tmp
;

84 
	`rb_£t_bœck
(
∑ª¡
);

85 
	`rb_£t_ªd
(
g∑ª¡
);

86 
	`__rb_rŸ©e_right
(
g∑ª¡
, 
roŸ
);

89 
rb_node
 *
un˛e
 = 
g∑ª¡
->
rb_À·
;

90 i‡(
un˛e
 && 
	`rb_is_ªd
(uncle))

92 
	`rb_£t_bœck
(
un˛e
);

93 
	`rb_£t_bœck
(
∑ª¡
);

94 
	`rb_£t_ªd
(
g∑ª¡
);

95 
node
 = 
g∑ª¡
;

100 i‡(
∑ª¡
->
rb_À·
 =
node
)

102 
rb_node
 *
tmp
;

103 
	`__rb_rŸ©e_right
(
∑ª¡
, 
roŸ
);

104 
tmp
 = 
∑ª¡
;

105 
∑ª¡
 = 
node
;

106 
node
 = 
tmp
;

109 
	`rb_£t_bœck
(
∑ª¡
);

110 
	`rb_£t_ªd
(
g∑ª¡
);

111 
	`__rb_rŸ©e_À·
(
g∑ª¡
, 
roŸ
);

115 
	`rb_£t_bœck
(
roŸ
->
rb_node
);

116 
	}
}

118 
	$__rb_îa£_cﬁ‹
(
rb_node
 *
node
, rb_nodê*
∑ª¡
,

119 
rb_roŸ
 *
roŸ
)

121 
rb_node
 *
Ÿhî
;

123 (!
node
 || 
	`rb_is_bœck
“ode)Ë&&Çodê!
roŸ
->
rb_node
)

125 i‡(
∑ª¡
->
rb_À·
 =
node
)

127 
Ÿhî
 = 
∑ª¡
->
rb_right
;

128 i‡(
	`rb_is_ªd
(
Ÿhî
))

130 
	`rb_£t_bœck
(
Ÿhî
);

131 
	`rb_£t_ªd
(
∑ª¡
);

132 
	`__rb_rŸ©e_À·
(
∑ª¡
, 
roŸ
);

133 
Ÿhî
 = 
∑ª¡
->
rb_right
;

135 i‡((!
Ÿhî
->
rb_À·
 || 
	`rb_is_bœck
(other->rb_left)) &&

136 (!
Ÿhî
->
rb_right
 || 
	`rb_is_bœck
(other->rb_right)))

138 
	`rb_£t_ªd
(
Ÿhî
);

139 
node
 = 
∑ª¡
;

140 
∑ª¡
 = 
	`rb_∑ª¡
(
node
);

144 i‡(!
Ÿhî
->
rb_right
 || 
	`rb_is_bœck
(other->rb_right))

146 
	`rb_£t_bœck
(
Ÿhî
->
rb_À·
);

147 
	`rb_£t_ªd
(
Ÿhî
);

148 
	`__rb_rŸ©e_right
(
Ÿhî
, 
roŸ
);

149 
Ÿhî
 = 
∑ª¡
->
rb_right
;

151 
	`rb_£t_cﬁ‹
(
Ÿhî
, 
	`rb_cﬁ‹
(
∑ª¡
));

152 
	`rb_£t_bœck
(
∑ª¡
);

153 
	`rb_£t_bœck
(
Ÿhî
->
rb_right
);

154 
	`__rb_rŸ©e_À·
(
∑ª¡
, 
roŸ
);

155 
node
 = 
roŸ
->
rb_node
;

161 
Ÿhî
 = 
∑ª¡
->
rb_À·
;

162 i‡(
	`rb_is_ªd
(
Ÿhî
))

164 
	`rb_£t_bœck
(
Ÿhî
);

165 
	`rb_£t_ªd
(
∑ª¡
);

166 
	`__rb_rŸ©e_right
(
∑ª¡
, 
roŸ
);

167 
Ÿhî
 = 
∑ª¡
->
rb_À·
;

169 i‡((!
Ÿhî
->
rb_À·
 || 
	`rb_is_bœck
(other->rb_left)) &&

170 (!
Ÿhî
->
rb_right
 || 
	`rb_is_bœck
(other->rb_right)))

172 
	`rb_£t_ªd
(
Ÿhî
);

173 
node
 = 
∑ª¡
;

174 
∑ª¡
 = 
	`rb_∑ª¡
(
node
);

178 i‡(!
Ÿhî
->
rb_À·
 || 
	`rb_is_bœck
(other->rb_left))

180 
	`rb_£t_bœck
(
Ÿhî
->
rb_right
);

181 
	`rb_£t_ªd
(
Ÿhî
);

182 
	`__rb_rŸ©e_À·
(
Ÿhî
, 
roŸ
);

183 
Ÿhî
 = 
∑ª¡
->
rb_À·
;

185 
	`rb_£t_cﬁ‹
(
Ÿhî
, 
	`rb_cﬁ‹
(
∑ª¡
));

186 
	`rb_£t_bœck
(
∑ª¡
);

187 
	`rb_£t_bœck
(
Ÿhî
->
rb_À·
);

188 
	`__rb_rŸ©e_right
(
∑ª¡
, 
roŸ
);

189 
node
 = 
roŸ
->
rb_node
;

194 i‡(
node
)

195 
	`rb_£t_bœck
(
node
);

196 
	}
}

199 
	$rb_îa£
(
rb_node
 *
node
, 
rb_roŸ
 *
roŸ
)

201 
rb_node
 *
chûd
, *
∑ª¡
;

202 
cﬁ‹
;

204 i‡(!
node
->
rb_À·
)

205 
chûd
 = 
node
->
rb_right
;

206 i‡(!
node
->
rb_right
)

207 
chûd
 = 
node
->
rb_À·
;

210 
rb_node
 *
ﬁd
 = 
node
, *
À·
;

212 
node
 =Çode->
rb_right
;

213 (
À·
 = 
node
->
rb_À·
Ë!
NULL
)

214 
node
 = 
À·
;

216 i‡(
	`rb_∑ª¡
(
ﬁd
)) {

217 i‡(
	`rb_∑ª¡
(
ﬁd
)->
rb_À·
 == old)

218 
	`rb_∑ª¡
(
ﬁd
)->
rb_À·
 = 
node
;

220 
	`rb_∑ª¡
(
ﬁd
)->
rb_right
 = 
node
;

222 
roŸ
->
rb_node
 = 
node
;

224 
chûd
 = 
node
->
rb_right
;

225 
∑ª¡
 = 
	`rb_∑ª¡
(
node
);

226 
cﬁ‹
 = 
	`rb_cﬁ‹
(
node
);

228 i‡(
∑ª¡
 =
ﬁd
) {

229 
∑ª¡
 = 
node
;

231 i‡(
chûd
)

232 
	`rb_£t_∑ª¡
(
chûd
, 
∑ª¡
);

233 
∑ª¡
->
rb_À·
 = 
chûd
;

235 
node
->
rb_right
 = 
ﬁd
->rb_right;

236 
	`rb_£t_∑ª¡
(
ﬁd
->
rb_right
, 
node
);

239 
node
->
rb_∑ª¡_cﬁ‹
 = 
ﬁd
->rb_parent_color;

240 
node
->
rb_À·
 = 
ﬁd
->rb_left;

241 
	`rb_£t_∑ª¡
(
ﬁd
->
rb_À·
, 
node
);

243 
cﬁ‹
;

246 
∑ª¡
 = 
	`rb_∑ª¡
(
node
);

247 
cﬁ‹
 = 
	`rb_cﬁ‹
(
node
);

249 i‡(
chûd
)

250 
	`rb_£t_∑ª¡
(
chûd
, 
∑ª¡
);

251 i‡(
∑ª¡
)

253 i‡(
∑ª¡
->
rb_À·
 =
node
)

254 
∑ª¡
->
rb_À·
 = 
chûd
;

256 
∑ª¡
->
rb_right
 = 
chûd
;

259 
roŸ
->
rb_node
 = 
chûd
;

261 
cﬁ‹
:

262 i‡(
cﬁ‹
 =
RB_BLACK
)

263 
	`__rb_îa£_cﬁ‹
(
chûd
, 
∑ª¡
, 
roŸ
);

264 
	}
}

269 
rb_node
 *
	$rb_fú°
(c⁄° 
rb_roŸ
 *
roŸ
)

271 
rb_node
 *
n
;

273 
n
 = 
roŸ
->
rb_node
;

274 i‡(!
n
)

275  
NULL
;

276 
n
->
rb_À·
)

277 
n
 =Ç->
rb_À·
;

278  
n
;

279 
	}
}

281 
rb_node
 *
	$rb_œ°
(c⁄° 
rb_roŸ
 *
roŸ
)

283 
rb_node
 *
n
;

285 
n
 = 
roŸ
->
rb_node
;

286 i‡(!
n
)

287  
NULL
;

288 
n
->
rb_right
)

289 
n
 =Ç->
rb_right
;

290  
n
;

291 
	}
}

294 
rb_node
 *
	$rb_√xt
(c⁄° 
rb_node
 *
node
)

296 
rb_node
 *
∑ª¡
;

298 i‡(
	`rb_∑ª¡
(
node
) ==Çode)

299  
NULL
;

303 i‡(
node
->
rb_right
) {

304 
node
 =Çode->
rb_right
;

305 
node
->
rb_À·
)

306 
node
Úode->
rb_À·
;

307  (
rb_node
 *)
node
;

316 (
∑ª¡
 = 
	`rb_∑ª¡
(
node
)Ë&&Çodê=∑ª¡->
rb_right
)

317 
node
 = 
∑ª¡
;

319  
∑ª¡
;

320 
	}
}

322 
rb_node
 *
	$rb_¥ev
(c⁄° 
rb_node
 *
node
)

324 
rb_node
 *
∑ª¡
;

326 i‡(
	`rb_∑ª¡
(
node
) ==Çode)

327  
NULL
;

331 i‡(
node
->
rb_À·
) {

332 
node
 =Çode->
rb_À·
;

333 
node
->
rb_right
)

334 
node
Úode->
rb_right
;

335  (
rb_node
 *)
node
;

340 (
∑ª¡
 = 
	`rb_∑ª¡
(
node
)Ë&&Çodê=∑ª¡->
rb_À·
)

341 
node
 = 
∑ª¡
;

343  
∑ª¡
;

344 
	}
}

348 
	$rb_ª∂a˚_node
(
rb_node
 *
vi˘im
, rb_nodê*
√w
,

349 
rb_roŸ
 *
roŸ
)

351 
rb_node
 *
∑ª¡
 = 
	`rb_∑ª¡
(
vi˘im
);

354 i‡(
∑ª¡
) {

355 i‡(
vi˘im
 =
∑ª¡
->
rb_À·
)

356 
∑ª¡
->
rb_À·
 = 
√w
;

358 
∑ª¡
->
rb_right
 = 
√w
;

360 
roŸ
->
rb_node
 = 
√w
;

362 i‡(
vi˘im
->
rb_À·
)

363 
	`rb_£t_∑ª¡
(
vi˘im
->
rb_À·
, 
√w
);

364 i‡(
vi˘im
->
rb_right
)

365 
	`rb_£t_∑ª¡
(
vi˘im
->
rb_right
, 
√w
);

368 *
√w
 = *
vi˘im
;

369 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_slist.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~"°_¶i°.h
"

22 
STSLi°
* 
	$°_¶i°_œ°
(
STSLi°
 *
li°
)

24 if(
NULL
 !
li°
)

26 
NULL
 !
li°
->
√xt
)

28 
li°
 =Üi°->
√xt
 ;

32  
li°
 ;

33 
	}
}

36 
STSLi°
 *

37 
	$°_¶i°_s‹t_mîge
 (
STSLi°
 *
l1
,

38 
STSLi°
 *
l2
,

39 
STFunc
 
com∑ª_func
,

40 
°poöãr
 
u£r_d©a
)

42 
STSLi°
 
li°
, *
l
;

43 
°öt
 
cmp
;

45 
l
=&
li°
;

47 
l1
 && 
l2
)

49 
cmp
 = ((
STCom∑ªD©aFunc
Ë
com∑ª_func
Ë(
l1
->
d©a
, 
l2
->d©a, 
u£r_d©a
);

51 i‡(
cmp
 <= 0)

53 
l
ˆ->
√xt
=
l1
;

54 
l1
ˆ1->
√xt
;

58 
l
ˆ->
√xt
=
l2
;

59 
l2
ˆ2->
√xt
;

62 
l
->
√xt

l1
 ?Ü1 : 
l2
;

64  
li°
.
√xt
;

65 
	}
}

67 
STSLi°
 *

68 
	$°_¶i°_s‹t_ªÆ
 (
STSLi°
 *
li°
,

69 
STFunc
 
com∑ª_func
,

70 
°poöãr
 
u£r_d©a
)

72 
STSLi°
 *
l1
, *
l2
;

74 i‡(!
li°
)

75  
NULL
;

76 i‡(!
li°
->
√xt
)

77  
li°
;

79 
l1
 = 
li°
;

80 
l2
 = 
li°
->
√xt
;

82 (
l2
 =Ü2->
√xt
Ë!
NULL
)

84 i‡((
l2
 =Ü2->
√xt
Ë=
NULL
)

86 
l1
ˆ1->
√xt
;

88 
l2
 = 
l1
->
√xt
;

89 
l1
->
√xt
 = 
NULL
;

91  
	`°_¶i°_s‹t_mîge
 (
	`°_¶i°_s‹t_ªÆ
 (
li°
, 
com∑ª_func
, 
u£r_d©a
),

92 
	`°_¶i°_s‹t_ªÆ
 (
l2
, 
com∑ª_func
, 
u£r_d©a
),

93 
com∑ª_func
,

94 
u£r_d©a
);

95 
	}
}

113 
STSLi°
* 
	$°_¶i°_s‹t
(
STSLi°
 *
li°
, 
STCom∑ªFunc
 
com∑ª_func
)

115  
	`°_¶i°_s‹t_ªÆ
 (
li°
, (
STFunc
Ë
com∑ª_func
, 
NULL
);

116 
	}
}

132 
STSLi°
* 
	$°_¶i°_s‹t_wôh_d©a
 (
STSLi°
 *
li°
,

133 
STCom∑ªD©aFunc
 
com∑ª_func
,

134 
°poöãr
 
u£r_d©a
)

136  
	`°_¶i°_s‹t_ªÆ
 (
li°
, (
STFunc
Ë
com∑ª_func
, 
u£r_d©a
);

137 
	}
}

156 
	$°_¶i°_f‹óch
(
STSLi°
 *
li°
, 
STFunc
 
func
, 
°poöãr
 
u£r_d©a
)

158 
NULL
 !
li°
)

160 (*
func
)(
li°
->
d©a
, 
u£r_d©a
) ;

161 
li°
 =Üi°->
√xt
 ;

163 
	}
}

182 
°uöt
 
	$°_¶i°_Àngth
(
STSLi°
 *
li°
)

184 
°uöt
 
Àngth
 ;

186 
Àngth
 = 0 ;

188 
NULL
 !
li°
)

190 
Àngth
++ ;

191 
li°
 =Üi°->
√xt
 ;

194  
Àngth
 ;

195 
	}
}

215 
°öt
 
	$°_¶i°_posôi⁄
(
STSLi°
 *
li°
, STSLi° *
Œök
)

217 
°öt
 
i
 = 0 ;

219 
NULL
 !
li°
)

221 if(
li°
 =
Œök
)

222  
i
 ;

224 
i
++ ;

225 
li°
 =Üi°->
√xt
 ;

229 
	}
}

247 
STSLi°
* 
	$°_¶i°_föd
(
STSLi°
 *
li°
, 
°c⁄°poöãr
 
d©a
)

249 
NULL
 !
li°
)

251 if(
li°
->
d©a
 == data)

253 
li°
 =Üi°->
√xt
 ;

256  
li°
 ;

257 
	}
}

274 
STSLi°
* 
	$°_¶i°_¡h
(
STSLi°
 *
li°
, 
°uöt
 
n
)

276 
n
-- && 
li°
)

277 
li°
 =Üi°->
√xt
 ;

279  
li°
 ;

280 
	}
}

297 
°poöãr
 
	$°_¶i°_¡h_d©a
(
STSLi°
 *
li°
, 
°uöt
 
n
)

299 
n
-- && 
li°
)

300 
li°
 =Üi°->
√xt
 ;

302  
li°
 ?Üi°->
d©a
 : 
NULL
 ;

303 
	}
}

322 
STSLi°
* 
	$°_¶i°_c›y
(
STSLi°
 *
li°
)

324 
STSLi°
 *
√w_li°
 = 
NULL
 ;

326 if(
NULL
 !
li°
)

328 
STSLi°
 *
œ°
 = 
NULL
 ;

330 
√w_li°
 = 
	`°_¶i°_Æloc
();

331 
√w_li°
->
d©a
 = 
li°
->data ;

332 
œ°
 = 
√w_li°
 ;

333 
li°
 =Üi°->
√xt
 ;

335 
NULL
 !
li°
)

337 
œ°
->
√xt
 = 
	`°_¶i°_Æloc
();

338 
œ°
 =Üa°->
√xt
 ;

339 
œ°
->
d©a
 = 
li°
->data ;

340 
li°
 =Üi°->
√xt
 ;

342 
li°
->
√xt
 = 
NULL
 ;

346  
√w_li°
 ;

347 
	}
}

363 
STSLi°
* 
	$°_¶i°_ªvî£
(
STSLi°
 *
li°
)

365 
STSLi°
 *
¥ev
 = 
NULL
 ;

367 
NULL
 !
li°
)

369 
STSLi°
 *
√xt
 = 
li°
->next ;

370 
li°
->
√xt
 = 
¥ev
 ;

371 
¥ev
 = 
li°
 ;

372 
li°
 = 
√xt
 ;

375  
li°
 ;

376 
	}
}

380 
STSLi°
*

381 
	$_°_¶i°_ªmove_lök
 (
STSLi°
 *
li°
,

382 
STSLi°
 *
lök
)

384 
STSLi°
 *
ãmp
 = 
NULL
 ;

385 
STSLi°
 *
¥ev
 = 
NULL
 ;

387 
ãmp
 = 
li°
 ;

389 
NULL
 !
ãmp
)

391 if(
ãmp
 =
lök
)

393 if(
NULL
 !
¥ev
)

395 
¥ev
->
√xt
 = 
ãmp
->next ;

397 if(
li°
 =
ãmp
)

399 
li°
 =Üi°->
√xt
 ;

401 
ãmp
->
√xt
 = 
NULL
 ;

404 
¥ev
 = 
ãmp
 ;

405 
ãmp
 =Åemp->
√xt
 ;

408  
li°
 ;

409 
	}
}

428 
STSLi°
* 
	$°_¶i°_dñëe_lök
(
STSLi°
 *
li°
, STSLi° *
lök_
)

431 
li°
 = 
	`_°_¶i°_ªmove_lök
 (li°, 
lök_
);

432 
	`‰ì
(
lök_
) ;

433 
lök_
 = 
NULL
 ;

435  
li°
 ;

436 
	}
}

455 
STSLi°
* 
	$°_¶i°_ªmove_lök
(
STSLi°
 *
li°
, STSLi° *
lök_
)

457  
	`_°_¶i°_ªmove_lök
 (
li°
, 
lök_
);

458 
	}
}

477 
STSLi°
* 
	$°_¶i°_ªmove_Æl
(
STSLi°
 *
li°
, 
°c⁄°poöãr
 
d©a
)

479 
STSLi°
 *
¥ev
 = 
NULL
 ;

480 
STSLi°
 *
ãmp
 = 
NULL
 ;

482 
ãmp
 = 
li°
 ;

484 
NULL
 !
ãmp
)

486 if(
ãmp
->
d©a
 == data)

489 if(
NULL
 !
¥ev
)

491 
¥ev
 = 
ãmp
->
√xt
 ;

495 
li°
 = 
ãmp
->
√xt
 ;

497 
	`‰ì
(
ãmp
);

498 
ãmp
 = 
NULL
 ;

499 
ãmp
 =Åemp->
√xt
 ;

503 
¥ev
 = 
ãmp
 ;

504 
ãmp
 =Åemp->
√xt
 ;

507 
	}
}

527 
STSLi°
* 
	$°_¶i°_ªmove
(
STSLi°
 *
li°
, 
°c⁄°poöãr
 
d©a
)

529 
STSLi°
 *
¥ev
 = 
NULL
 ;

530 
STSLi°
 *
ãmp
 = 
NULL
 ;

532 
ãmp
 = 
li°
 ;

534 
NULL
 !
ãmp
)

536 if(
ãmp
->
d©a
 == data)

538 if(
NULL
 !
¥ev
)

540 
¥ev
->
√xt
 = 
ãmp
->next ;

544 
li°
 = 
ãmp
->
√xt
 ;

546 
	`‰ì
(
ãmp
);

547 
ãmp
 = 
NULL
 ;

550 
¥ev
 = 
ãmp
 ;

551 
ãmp
 =Åemp->
√xt
 ;

554  
li°
 ;

555 
	}
}

574 
STSLi°
* 
	$°_¶i°_c⁄ˇt
(
STSLi°
 *
li°1
, STSLi° *
li°2
)

576 if(
NULL
 !
li°2
)

578 if(
NULL
 !
li°1
)

580 
	`°_¶i°_œ°
(
li°1
)->
√xt
 = 
li°2
 ;

584 
li°1
 = 
li°2
 ;

588  
li°1
 ;

589 
	}
}

592 
STSLi°
*

593 
	$°_¶i°_ö£π_s‹ãd_ªÆ
 (
STSLi°
 *
li°
,

594 
°poöãr
 
d©a
,

595 
STFunc
 
func
,

596 
°poöãr
 
u£r_d©a
)

598 
STSLi°
 *
tmp_li°
 = 
li°
;

599 
STSLi°
 *
¥ev_li°
 = 
NULL
;

600 
STSLi°
 *
√w_li°
;

601 
°öt
 
cmp
;

604 i‡(!
li°
)

606 
√w_li°
 = 
	`°_¶i°_Æloc
 ();

607 
√w_li°
->
d©a
 = data;

608 
√w_li°
->
√xt
 = 
NULL
;

609  
√w_li°
;

612 
cmp
 = ((
STCom∑ªD©aFunc
Ë
func
Ë(
d©a
, 
tmp_li°
->d©a, 
u£r_d©a
);

614 (
tmp_li°
->
√xt
Ë&& (
cmp
 > 0))

616 
¥ev_li°
 = 
tmp_li°
;

617 
tmp_li°
 =Åmp_li°->
√xt
;

619 
cmp
 = ((
STCom∑ªD©aFunc
Ë
func
Ë(
d©a
, 
tmp_li°
->d©a, 
u£r_d©a
);

623 
√w_li°
 = 
	`°_¶i°_Æloc
 ();

624 
√w_li°
->
d©a
 = data;

626 i‡((!
tmp_li°
->
√xt
Ë&& (
cmp
 > 0))

628 
tmp_li°
->
√xt
 = 
√w_li°
;

629 
√w_li°
->
√xt
 = 
NULL
;

630  
li°
;

633 i‡(
¥ev_li°
)

635 
¥ev_li°
->
√xt
 = 
√w_li°
;

636 
√w_li°
->
√xt
 = 
tmp_li°
;

637  
li°
;

641 
√w_li°
->
√xt
 = 
li°
;

642  
√w_li°
;

644 
	}
}

664 
STSLi°
* 
	$°_¶i°_ö£π_s‹ãd
(
STSLi°
 *
li°
,

665 
°poöãr
 
d©a
,

666 
STCom∑ªFunc
 
func
)

668  
	`°_¶i°_ö£π_s‹ãd_ªÆ
 (
li°
, 
d©a
, (
STFunc
Ë
func
, 
NULL
);

669 
	}
}

671 
STSLi°
* 
	$°_¶i°_ö£π_s‹ãd_wôh_d©a
 (
STSLi°
 *
li°
,

672 
°poöãr
 
d©a
,

673 
STCom∑ªD©aFunc
 
func
,

674 
°poöãr
 
u£r_d©a
)

676  
	`°_¶i°_ö£π_s‹ãd_ªÆ
 (
li°
, 
d©a
, (
STFunc
Ë
func
, 
u£r_d©a
);

677 
	}
}

697 
STSLi°
* 
	$°_¶i°_ö£π
(
STSLi°
 *
li°
, 
°poöãr
 
d©a
, 
°öt
 
posôi⁄
)

699 
STSLi°
* 
√w_li°
 = 
NULL
 ;

700 
STSLi°
* 
¥ev_li°
 = 
NULL
 ;

701 
STSLi°
* 
ãmp_li°
 = 
NULL
 ;

703 if(0 > 
posôi⁄
)

704 
	`°_¶i°_≠≥nd
(
li°
, 
d©a
);

705 if(0 =
posôi⁄
)

706 
	`°_¶i°_¥ïíd
(
li°
, 
d©a
);

708 
√w_li°
 = 
	`°_¶i°_Æloc
();

709 
√w_li°
->
d©a
 = data ;

711 if(
NULL
 =
li°
)

713 
√w_li°
->
√xt
 = 
NULL
 ;

714  
√w_li°
 ;

717 
¥ev_li°
 = 
NULL
 ;

718 
ãmp_li°
 = 
li°
 ;

719 (
posôi⁄
-- > 0Ë&& 
ãmp_li°
)

721 
¥ev_li°
 = 
ãmp_li°
 ;

722 
ãmp_li°
 =Åemp_li°->
√xt
 ;

725 if(
NULL
 !
¥ev_li°
)

727 
√w_li°
->
√xt
 = 
¥ev_li°
->next ;

728 
¥ev_li°
->
√xt
 = 
li°
 ;

732 
√w_li°
->
√xt
 = 
li°
 ;

733 
li°
 = 
√w_li°
 ;

736  
li°
 ;

737 
	}
}

754 
STSLi°
* 
	$°_¶i°_¥ïíd
(
STSLi°
 *
li°
, 
°poöãr
 
d©a
)

756 
STSLi°
 *
√w_li°
 = 
NULL
 ;

758 
√w_li°
 = (
STSLi°
 *)
	`°_¶i°_Æloc
();

759 
√w_li°
->
d©a
 = data ;

760 
√w_li°
->
√xt
 = 
li°
 ;

762  
√w_li°
 ;

763 
	}
}

779 
STSLi°
* 
	$°_¶i°_≠≥nd
(
STSLi°
 *
li°
, 
°poöãr
 
d©a
)

781 
STSLi°
* 
√w_li°
 = 
NULL
 ;

782 
STSLi°
* 
œ°
 = 
NULL
 ;

784 
√w_li°
 = (
STSLi°
*)
	`°_¶i°_Æloc
();

785 
√w_li°
->
d©a
 = data ;

786 
√w_li°
->
√xt
 = 
NULL
 ;

788 if(
NULL
 !
li°
)

790 
œ°
 = 
	`°_¶i°_œ°
 (
li°
);

792 
œ°
->
√xt
 = 
√w_li°
;

794  
li°
;

798  
√w_li°
 ;

800 
	}
}

802 
STSLi°
* 
	$°_¶i°_mîge_2_li°
(
STSLi°
 *
hód1
, STSLi° *
hód2
)

804 
STSLi°
 *
hód
,*
èû
,*
p
 = 
hód1
,*
q
 = 
hód2
,*
s
;

806 if–
NULL
 =
p
 )

807  
q
;

808 if–
NULL
 =
q
 )

809  
p
;

811 
èû
 = 
p
;

812 if–
p
->
d©a
 > 
q
->data)

813 
èû
 = 
q
;

814 
hód
 = 
èû
;

816  
NULL
 !
p
 && NULL !
q
 )

818 if(
p
->
d©a
 <
q
->data )

823 
s
 = 
p
;

824 
p
 =Ö->
√xt
;

828 
s
 = 
q
;

829 
q
 = q->
√xt
;

831 
èû
->
√xt
 = 
s
;

832 
èû
 = 
s
;

835 if–
NULL
 =
p
 )

836 
p
 = 
q
;

837 
s
 = 
p
;

838 
èû
->
√xt
 = 
s
;

840  
hód
;

841 
	}
}

844 
STSLi°
* 
	$°_¶i°_ªcursive_mîge_2_li°
(
STSLi°
 *
hód1
, STSLi° *
hód2
)

846 
STSLi°
 *
hód
 = 
NULL
 ;

848 i‡–
hód1
 =
NULL
 )

849  
hód2
 ;

850 i‡–
hód2
 =
NULL
)

851  
hód1
 ;

853 i‡–
hód1
->
d©a
 < 
hód2
->data )

855 
hód
 = 
hód1
 ;

856 
hód
->
√xt
 = 
	`°_¶i°_ªcursive_mîge_2_li°
(
hód1
->√xt,
hód2
);

860 
hód
 = 
hód2
 ;

861 
hód
->
√xt
 = 
	`°_¶i°_ªcursive_mîge_2_li°
(
hód1
,
hód2
->next);

863  
hód
 ;

864 
	}
}

880 
	$°_¶i°_‰ì
(
STSLi°
 *
li°
)

882 
STSLi°
 *
ãmp
 = 
NULL
 ;

884 if(
NULL
 !
li°
)

888 
ãmp
 = 
li°
 ;

889 
li°
 =Üi°->
√xt
 ;

890 
	`‰ì
(
ãmp
);

891 
ãmp
 = 
NULL
 ;

892 }
NULL
 !
li°
);

894 
	}
}

909 
STSLi°
 *
	$°_¶i°_Æloc
()

911  
	`mÆloc
((
STSLi°
));

912 
	}
}

914 
	$°_dump_li°
(
STSLi°
 *
hód
)

916 
STSLi°
 *
p
;

918 
p
 = 
hód
;

919 if(
hód
 !
NULL
)

921 
	`¥ötf
("hód i†%o\n", (
°uöt
)
hód
);

924 
	`¥ötf
("%ÿ %d %o\n", (
°uöt
)
p
, (
°öt
Ì->
d©a
, (°uötÌ->
√xt
);

925 
p
 =Ö->
√xt
;

927 
p
 !
NULL
);

929 
	}
}

976 
STSLi°
* 
	$°_¶i°_dúe˘_ö£π_s‹t
(
STSLi°
* 
hód
)

978 
STSLi°
 *
fú°
 ;

979 
STSLi°
 *
iNode
 ;

980 
STSLi°
 *
p
;

981 
STSLi°
 *
q
;

983 
fú°
 = 
hód
->
√xt
 ;

984 
hód
->
√xt
 = 
NULL
 ;

986 
NULL
 !
fú°
)

993 
iNode
 = 
fú°
, 
q
 = 
hód
 ; (
NULL
 !qË&& (q->
d©a
 < iNode->d©aË; 
p
 = q, q = q->
√xt
);

997 
fú°
 = fú°->
√xt
 ;

999 if(
q
 =
hód
)

1001 
hód
 = 
iNode
 ;

1005 
p
->
√xt
 = 
iNode
 ;

1007 
iNode
->
√xt
 = 
q
 ;

1011  
hód
 ;

1012 
	}
}

1055 
STSLi°
* 
	$°_¶i°_£À˘_s‹t
(
STSLi°
* 
hód
)

1057 
STSLi°
 *
fú°
;

1058 
STSLi°
 *
èû
;

1059 
STSLi°
 *
p_mö
;

1060 
STSLi°
 *
mö
;

1061 
STSLi°
 *
p
;

1063 
fú°
 = 
NULL
 ;

1065 
NULL
 !
hód
)

1069 
p
=
hód
, 
mö
=hód ;Ö->
√xt
 !
NULL
 ;Ö=p->next)

1071 if(
p
->
√xt
->
d©a
 < 
mö
->data)

1073 
p_mö
 = 
p
 ;

1074 
mö
 = 
p
->
√xt
 ;

1079 if(
NULL
 =
fú°
)

1081 
fú°
 = 
mö
 ;

1082 
èû
 = 
mö
 ;

1086 
èû
->
√xt
 = 
mö
 ;

1087 
èû
 = 
mö
 ;

1091 if(
mö
 =
hód
)

1093 
hód
 = hód->
√xt
 ;

1097 
p_mö
->
√xt
 = 
mö
->next ;

1102 if(
NULL
 !
fú°
)

1103 
èû
->
√xt
 = 
NULL
 ;

1105 
hód
 = 
fú°
 ;

1107  
hód
 ;

1108 
	}
}

1110 
	$my_sw≠
(
°öt
 **
a
,°öà**
b
)

1112 
°öt
 
ãmp
;

1113 
ãmp
=*
a
;

1114 *
a
=*
b
;

1115 *
b
=
ãmp
;

1116 
	}
}

1118 
STSLi°
* 
	$°_¶i°_quick_s‹t
(
STSLi°
* 
phód
, STSLi° *
≥nd
)

1120 
STSLi°
 *
p¶ow
=
phód
;

1121 
STSLi°
 *
pÁ°
=
phód
->
√xt
;

1122 
STSLi°
 *
±emp
=
phód
;

1124 if(
phód
==
NULL
 || 
≥nd
==NULL)

1126 if(
phód
==
≥nd
)

1129 
pÁ°
)

1131 if(
pÁ°
->
d©a
<
phód
->data)

1133 
±emp
=
p¶ow
;

1134 
p¶ow
ı¶ow->
√xt
;

1136 
	`my_sw≠
(&
p¶ow
->
d©a
,&
pÁ°
->data);

1139 
pÁ°
ıÁ°->
√xt
;

1142 
	`my_sw≠
(&
p¶ow
->
d©a
,&
phód
->data);

1144 
	`°_¶i°_quick_s‹t
(
phód
,
±emp
);

1145 
	`°_¶i°_quick_s‹t
(
p¶ow
->
√xt
,
≥nd
);

1147  
phód
 ;

1148 
	}
}

1151 
	$°_¶i°_quick_s‹t2
(
STSLi°
 **
hód
, STSLi° *
íd
)

1153 
STSLi°
 *
right
;

1154 
STSLi°
 **
À·_wÆk
, **
right_wÆk
;

1155 
STSLi°
 *
pivŸ
, *
ﬁd
;

1156 
°öt
 
cou¡
, 
À·_cou¡
, 
right_cou¡
;

1157 i‡(*
hód
 =
íd
)

1161 
pivŸ
 = *
hód
;

1162 
À·_wÆk
 = 
hód
;

1163 
right_wÆk
 = &
right
;

1164 
À·_cou¡
 = 
right_cou¡
 = 0;

1167 
ﬁd
 = (*
hód
)->
√xt
; old !
íd
; old = old->next)

1169 i‡(
ﬁd
->
d©a
 < 
pivŸ
->data)

1172 ++
À·_cou¡
;

1173 *
À·_wÆk
 = 
ﬁd
;

1174 
À·_wÆk
 = &(
ﬁd
->
√xt
);

1178 ++
right_cou¡
;

1179 *
right_wÆk
 = 
ﬁd
;

1180 
right_wÆk
 = &(
ﬁd
->
√xt
);

1184 *
right_wÆk
 = 
íd
;

1185 *
À·_wÆk
 = 
pivŸ
;

1186 
pivŸ
->
√xt
 = 
right
;

1188 if(
À·_wÆk
 > 
right_wÆk
)

1190 
	`°_¶i°_quick_s‹t2
(&(
pivŸ
->
√xt
), 
íd
);

1191 
íd
 = 
pivŸ
;

1192 
cou¡
 = 
À·_cou¡
;

1196 
	`°_¶i°_quick_s‹t2
(
hód
, 
pivŸ
);

1197 
hód
 = &(
pivŸ
->
√xt
);

1198 
cou¡
 = 
right_cou¡
;

1201 
cou¡
 > 1);

1202 
	}
}

1208 
°öt
 
	$gëNodeNum
(
STSLi°
* 
h
)

1210 
n
=0;

1211 
h
)

1213 
n
++;

1214 
h
=h->
√xt
;

1216  
n
;

1217 
	}
}

1222 
	$move
(
STSLi°
** 
h
,
°öt
 
n
)

1224 
°öt
 
i
;

1225 
i
=0;i<
n
;i++)

1227 *
h
=(*h)->
√xt
;

1229 
	}
}

1231 
	$°_¶i°_shñl_s‹t
(
STSLi°
* 
li°
)

1233 
°öt
 
i
=0;

1234 
°öt
 
Êag
=0;

1235 
STSLi°
* 
h1
;

1236 
STSLi°
* 
h2
;

1237 
STSLi°
* 
h3
;

1238 
°öt
 
n
=0;

1239 
°öt
 
t
;

1241 
n
=
	`gëNodeNum
(
li°
);

1243 
t
=
n
/2;t>0;t=t/2)

1245 
h2
=
h3
=
li°
;

1246 
	`move
(&
h3
,
t
-1);

1247 
	`move
(&
h2
,
t
);

1249 
h2
)

1251 
h1
=
li°
;

1252 
Êag
=0;

1253 
Êag
==0)

1255 if((
h1
->
√xt
->
d©a
Ë> (
h2
->data))

1257 
h3
->
√xt
=
h2
->next;

1258 
h2
->
√xt
=
h1
->next;

1259 
h1
->
√xt
=
h2
;

1260 
h2
=
h3
->
√xt
;

1264 
i
=0 ; i<
t
 ; i++)

1266 
h1
=h1->
√xt
;

1267 if((
h1
==
h2
)||(h1==
NULL
))

1269 
Êag
=1;

1275 if((
Êag
==1)&&(
h2
!=
NULL
))

1277 
h2
=h2->
√xt
;

1278 
h3
=h3->
√xt
;

1282 
	}
}

1336 
STSLi°
* 
	$°_¶i°_bubbÀ_s‹t
(
STSLi°
* 
hód
)

1338 
STSLi°
 *
íd±
;

1339 
STSLi°
 *
p
;

1340 
STSLi°
 *
p1
;

1341 
STSLi°
 *
p2
;

1343 
p1
 = (
STSLi°
 *)
	`mÆloc
((STSList));

1344 
p1
->
√xt
 = 
hód
;

1345 
hód
 = 
p1
;

1347 
íd±
=
NULL
;Énd±!=
hód
;Énd±=
p
)

1349 
p
=
p1
=
hód
;Ö1->
√xt
->√xt!=
íd±
;Ö1=p1->next)

1351 i‡(
p1
->
√xt
->
d©a
 >Ö1->next->next->data)

1353 
p2
 = 
p1
->
√xt
->next;

1354 
p1
->
√xt
->√xà
p2
->next;

1355 
p2
->
√xt
 = 
p1
->next;

1356 
p1
->
√xt
 = 
p2
;

1357 
p
 = 
p1
->
√xt
->next;

1362 
p1
 = 
hód
;

1363 
hód
 = hód->
√xt
;

1364 
	`‰ì
(
p1
);

1365 
p1
 = 
NULL
;

1367  
hód
;

1368 
	}
}

1371 
STSLi°
** 
	$Di°ribuãL
(
STSLi°
* 
p
, 
keyNum
, STSLi° ** 
∑
, 
°öt
 
NUM
)

1373 
°öt
 
¨r
[10]= {0};

1374 
°öt
 
k
;

1376 
p
)

1378 
k
 = (
°öt
)
p
->
d©a
/
keyNum
%10;

1380 if(
NULL
 =
∑
[
k
])

1382 
∑
[
k
] = (
STSLi°
*)
	`mÆloc
((STSLi°)*
NUM
);

1383 
∑
[
k
][
¨r
[k]] = *
p
;

1384 
∑
[
k
][
¨r
[k]].
√xt
 = 
NULL
;

1385 ++
¨r
[
k
];

1389 
∑
[
k
][
¨r
[k]] = *
p
;

1390 
∑
[
k
][
¨r
[k]].
√xt
 = 
NULL
;

1391 
∑
[
k
][
¨r
[k]-1].
√xt
 = &pa[k][arr[k]];

1392 ++
¨r
[
k
];

1394 
p
 =Ö->
√xt
;

1397  
∑
;

1399 
	}
}

1401 
STSLi°
* 
	$CﬁÀ˘L
(
STSLi°
* 
p
, STSLi° ** 
∑
, 
°öt
 
NUM
)

1403 
°öt
 
cou¡
;

1404 
°öt
 
i
 = 0;

1405 
STSLi°
* 
pc
;

1406 
STSLi°
* 
µ
 = 
p
;

1408 
cou¡
 = 0; cou¡ < 
NUM
; ++count)

1410 
pc
 = 
∑
[
cou¡
];

1412 
NULL
 !
∑
[
cou¡
])

1414 
p
[
i
] = *
∑
[
cou¡
];

1415 
∑
[
cou¡
] =Öa[cou¡]->
√xt
;

1416 if((
NUM
-1Ë=
i
)

1418 
p
[
i
].
√xt
 = 
NULL
;

1422 
p
[
i
].
√xt
 = &p[i+1];

1425 ++
i
;

1429 
∑
[
cou¡
] = 
pc
;

1431 if(
NULL
 !
∑
[
cou¡
])

1432 
	`‰ì
(
∑
[
cou¡
]);

1436  
µ
;

1438 
	}
}

1441 
STSLi°
* 
	$°_¶i°_ødix_s‹t
(
STSLi°
* 
li°
, 
°öt
 
ødix
)

1443 
°öt
 
key
 = 1;

1444 
°öt
 
i
;

1445 
°öt
 
j
;

1446 
STSLi°
* 
h
[10] = {0};

1447 
°öt
 
NUM
 ;

1449 
NUM
 = 
	`gëNodeNum
(
li°
);

1450 
i
 = 0; i < 
ødix
; ++i, 
key
 *= 10)

1452 
	`Di°ribuãL
(
li°
, 
key
, 
h
, 
NUM
);

1454 
li°
 = 
	`CﬁÀ˘L
((
STSLi°
*Ói°, 
h
, 
NUM
);

1456 
j
 = 0; j < 
NUM
; ++j)

1457 
h
[
j
] = 
NULL
;

1463  
li°
 ;

1464 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_splaytree.c

1 
	~<°dio.h
>

2 
	~<mÆloc.h
>

3 
	~"°_•œyåì.h
"

4 
	~"°_log.h
"

9 
SPYNode
 * 
NuŒNode
 ;

13 
SPYNode
 * 
sögÀRŸ©eWôhLe·
 (SPYNodê* c⁄° 
posôi⁄
) ;

14 
SPYNode
 * 
sögÀRŸ©eWôhRight
 (SPYNodê* c⁄° 
posôi⁄
) ;

15 
upD©aLe·SubTªeCou¡
 (
SPYNode
 * c⁄° 
hódîRight
) ;

16 
upD©aRightSubTªeCou¡
 (
SPYNode
 * c⁄° 
hódîLe·
) ;

17 
SPYNode
 * 
•œy
 (SPYNodê* 
roŸ
, c⁄° 
SPYIãm
 * c⁄° 
pi
) ;

18 
ªÀa£
 (
SPYNode
 * c⁄° 
roŸ
) ;

26 
°boﬁ
 
	$°_•œy_åì_¸óã
 (
S∂ayTªe
 * c⁄° 
p°
)

28 
NuŒNode
 = (
SPYNode
 *Ë
	`mÆloc
 ( (SPYNode)) ;

29 i‡(
NULL
 =
NuŒNode
)

30  
FALSE
 ;

31 *
p°
 = (
S∂ayTªe
Ë
	`mÆloc
 ( (
S∂ayNode
)) ;

32 i‡(
NULL
 =*
p°
)

34 
	`‰ì
 (
NuŒNode
) ;

35 
NuŒNode
 = 
NULL
 ;

36  
FALSE
 ;

40 
NuŒNode
->
À·
 = NuŒNode->
right
 = NullNode ;

41 
NuŒNode
->
À·SubTªeCou¡
 = NuŒNode->
rightSubTªeCou¡
 = 0 ;

42 (*
p°
)->
roŸ
 = 
NuŒNode
 ;

43 (*
p°
)->
cuºít
 = 0 ;

44  
TRUE
 ;

46 
	}
}

53 
°boﬁ
 
	$°_•œy_åì_em±y
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
)

55 i‡(
NuŒNode
 =(*
p°
)->
roŸ
)

56  
TRUE
 ;

58  
FALSE
 ;

59 
	}
}

68 
°boﬁ
 
	$°_•œy_åì_ö£π
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, c⁄° 
SPYIãm
 * c⁄° 
pi
)

70 
SPYNode
 * 
√wNode
 = 
NULL
 ;

71 
SPYNode
 * 
roŸ
 ;

75 i‡(
NULL
 =
√wNode
)

77 
√wNode
 = (
SPYNode
 *Ë
	`mÆloc
 ( (SPYNode)) ;

78 i‡(
NULL
 =
√wNode
)

79  
FALSE
 ;

81 
√wNode
->
ôem
 = *
pi
 ;

83 i‡(
NuŒNode
 =(*
p°
)->
roŸ
)

85 
√wNode
->
À·
 =ÇewNode->
right
 = 
NuŒNode
 ;

86 
√wNode
->
À·SubTªeCou¡
 =ÇewNode->
rightSubTªeCou¡
 = 0 ;

87 (*
p°
)->
roŸ
 = 
√wNode
 ;

91 (*
p°
)->
roŸ
 = 
	`•œy
((*p°)->roŸ, 
pi
) ;

92 
roŸ
 = (*
p°
)->root ;

93 i‡(*
pi
 < 
roŸ
->
ôem
)

95 
√wNode
->
À·SubTªeCou¡
 = 
roŸ
->leftSubTreeCount ;

96 
√wNode
->
À·
 = 
roŸ
->left ;

97 
roŸ
->
À·SubTªeCou¡
 = 0 ;

98 
roŸ
->
À·
 = 
NuŒNode
 ;

99 
√wNode
->
rightSubTªeCou¡
 = 
roŸ
->rightSubTreeCount + 1 ;

100 
√wNode
->
right
 = 
roŸ
 ;

101 (*
p°
)->
roŸ
 = 
√wNode
 ;

103 i‡(*
pi
 > (*
p°
)->
roŸ
->
ôem
)

105 
√wNode
->
rightSubTªeCou¡
 = 
roŸ
->rightSubTreeCount ;

106 
√wNode
->
right
 = 
roŸ
->right ;

107 
roŸ
->
rightSubTªeCou¡
 = 0 ;

108 
roŸ
->
right
 = 
NuŒNode
 ;

109 
√wNode
->
À·SubTªeCou¡
 = 
roŸ
->leftSubTreeCount + 1 ;

110 
√wNode
->
À·
 = 
roŸ
 ;

111 (*
p°
)->
roŸ
 = 
√wNode
 ;

115  
FALSE
 ;

119 
√wNode
 = 
NULL
 ;

121 (*
p°
)->
cuºít
++ ;

122  
TRUE
 ;

123 
	}
}

132 
SPYNode
 * 
	$°_•œy_åì_ªåõve
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
)

134 i‡(
	`°_•œy_åì_em±y
 (
p°
))

135  
NULL
 ;

137  (*
p°
)->
roŸ
 ;

138 
	}
}

147 
°boﬁ
 
	$°_•œy_åì_föd
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, c⁄° 
SPYIãm
 * c⁄° 
pi
)

149 
	`•œy
 ((*
p°
)->
roŸ
, 
pi
) ;

150 i‡(*
pi
 =(*
p°
)->
roŸ
->
ôem
)

151  
TRUE
 ;

153  
FALSE
 ;

154 
	}
}

161 
SPYNode
 * 
	$°_•œy_åì_föd_kthmö
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, 
k
)

163 
SPYNode
 * 
sˇn
 ;

165 i‡(
k
 > (*
p°
)->
cuºít
 || k <= 0)

166  
NULL
 ;

167 
sˇn
 = (*
p°
)->
roŸ
 ;

171 i‡(
sˇn
->
À·SubTªeCou¡
 + 1 =
k
)

173 i‡(
sˇn
->
À·SubTªeCou¡
 >
k
)

174 
sˇn
 = sˇn->
À·
 ;

177 
k
 = k - 
sˇn
->
À·SubTªeCou¡
 - 1 ;

178 
sˇn
 = sˇn->
right
 ;

182 (*
p°
)->
roŸ
 = 
	`•œy
 ((*p°)->roŸ, &
sˇn
->
ôem
) ;

184  
sˇn
 ;

185 
	}
}

193 
SPYNode
 * 
	$°_•œy_åì_föd_kthmax
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, 
k
)

195 
SPYNode
 * 
sˇn
 ;

197 i‡(
k
 > (*
p°
)->
cuºít
 || k <= 0)

198  
NULL
 ;

199 
sˇn
 = (*
p°
)->
roŸ
 ;

203 i‡(
sˇn
->
rightSubTªeCou¡
 + 1 =
k
)

205 i‡(
sˇn
->
rightSubTªeCou¡
 >
k
)

206 
sˇn
 = sˇn->
right
 ;

209 
k
 = k - 
sˇn
->
rightSubTªeCou¡
 - 1 ;

210 
sˇn
 = sˇn->
À·
 ;

213 (*
p°
)->
roŸ
 = 
	`•œy
 ((*p°)->roŸ, &
sˇn
->
ôem
) ;

215  
sˇn
 ;

216 
	}
}

223 
SPYNode
 * 
	$°_•œy_åì_föd_mö
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
)

225 
SPYNode
 * 
sˇn
 = (*
p°
)->
roŸ
 ;

227 
sˇn
->
À·
 !
NuŒNode
)

228 
sˇn
 = sˇn->
À·
 ;

230  
sˇn
 ;

231 
	}
}

238 
SPYNode
 * 
	$°_•œy_åì_föd_max
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
)

240 
SPYNode
 * 
sˇn
 = (*
p°
)->
roŸ
 ;

242 
sˇn
->
right
 !
NuŒNode
)

243 
sˇn
 = sˇn->
right
 ;

245  
sˇn
 ;

246 
	}
}

253 
°boﬁ
 
	$°_•œy_åì_dñëe
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
, c⁄° 
SPYIãm
 * c⁄° 
pi
)

255 
SPYNode
 * 
roŸ
 ;

257 i‡(
	`°_•œy_åì_em±y
 (
p°
))

258  
FALSE
 ;

259 (*
p°
)->
roŸ
 = 
	`•œy
 ((*p°)->roŸ, 
pi
) ;

260 
roŸ
 = (*
p°
)->root ;

261 i‡(*
pi
 =
roŸ
->
ôem
)

264 i‡(
NuŒNode
 =
roŸ
->
À·
)

265 (*
p°
)->
roŸ
 =ÑoŸ->
right
 ;

268 (*
p°
)->
roŸ
 =ÑoŸ->
À·
 ;

270 (*
p°
)->
roŸ
 = 
	`•œy
 ((*p°)->roŸ, 
pi
) ;

271 (*
p°
)->
roŸ
->
right
 =Ñoot->right ;

273 
	`‰ì
 (
roŸ
) ;

274 (*
p°
)->
cuºít
-- ;

275  
TRUE
 ;

278  
FALSE
 ;

279 
	}
}

286 
°_•œy_åì_åavî£
 (c⁄° 
SPYNode
 * c⁄° 
¥
, (* 
pfun
Ë(c⁄° SPYNodê* c⁄° 
≤
))

288 i‡(
¥
 !
NuŒNode
)

290 
	`°_•œy_åì_åavî£
 (
¥
->
À·
, 
pfun
) ;

291 (* 
pfun
Ë(
¥
) ;

292 
	`°_•œy_åì_åavî£
 (
¥
->
right
, 
pfun
) ;

294 
	}
}

301 
	$°_•œy_åì_ªÀa£
 (c⁄° 
S∂ayTªe
 * c⁄° 
p°
)

303 
	`ªÀa£
 ((*
p°
)->
roŸ
) ;

304 
	`‰ì
 (*
p°
) ;

305 
	`‰ì
 (
NuŒNode
) ;

306 
	}
}

310 
SPYNode
 * 
	$sögÀRŸ©eWôhLe·
 (
SPYNode
 * c⁄° 
posôi⁄
)

312 
SPYNode
 * 
chûd
 ;

314 
chûd
 = 
posôi⁄
->
À·
 ;

315 
posôi⁄
->
À·SubTªeCou¡
 = 
chûd
->
rightSubTªeCou¡
 ;

316 
posôi⁄
->
À·
 = 
chûd
->
right
 ;

318 
chûd
->
rightSubTªeCou¡
 = 
posôi⁄
->
À·SubTªeCou¡
 +Öosition->rightSubTreeCount + 1 ;

319 
chûd
->
right
 = 
posôi⁄
 ;

321  
chûd
 ;

322 
	}
}

324 
SPYNode
 * 
	$sögÀRŸ©eWôhRight
 (
SPYNode
 * c⁄° 
posôi⁄
)

326 
SPYNode
 * 
chûd
 ;

328 
chûd
 = 
posôi⁄
->
right
 ;

329 
posôi⁄
->
rightSubTªeCou¡
 = 
chûd
->
À·SubTªeCou¡
 ;

330 
posôi⁄
->
right
 = 
chûd
->
À·
 ;

331 
chûd
->
À·SubTªeCou¡
 = 
posôi⁄
->À·SubTªeCou¡ +Öosôi⁄->
rightSubTªeCou¡
 + 1 ;

332 
chûd
->
À·
 = 
posôi⁄
 ;

334  
chûd
 ;

335 
	}
}

337 
	$upD©aLe·SubTªeCou¡
 (
SPYNode
 * c⁄° 
hódîRight
)

339 i‡(
hódîRight
 !
NuŒNode
)

341 i‡(
hódîRight
->
À·
 !
NuŒNode
)

343 
	`upD©aLe·SubTªeCou¡
 (
hódîRight
->
À·
) ;

344 
hódîRight
->
À·SubTªeCou¡
 = hódîRight->
À·
->À·SubTªeCou¡ + hódîRight->À·->
rightSubTªeCou¡
 + 1 ;

347 
hódîRight
->
À·SubTªeCou¡
 = 0 ;

349 
	}
}

351 
	$upD©aRightSubTªeCou¡
 (
SPYNode
 * c⁄° 
hódîLe·
)

353 i‡(
hódîLe·
 !
NuŒNode
)

355 i‡(
hódîLe·
->
right
 !
NuŒNode
)

357 
	`upD©aRightSubTªeCou¡
 (
hódîLe·
->
right
) ;

358 
hódîLe·
->
rightSubTªeCou¡
 = hódîLe·->
right
->
À·SubTªeCou¡
 + headerLeft->right->rightSubTreeCount + 1 ;

361 
hódîLe·
->
rightSubTªeCou¡
 = 0 ;

363 
	}
}

366 
SPYNode
 * 
	$•œy
 (
SPYNode
 * 
roŸ
, c⁄° 
SPYIãm
 * c⁄° 
pi
)

368 
SPYNode
 
hódî
 ;

369 
SPYNode
 * 
À·_åì_max
, * 
right_åì_mö
 ;

371 
hódî
.
À·
 = hódî.
right
 = 
NuŒNode
 ;

372 
À·_åì_max
 = 
right_åì_mö
 = &
hódî
 ;

373 
NuŒNode
->
ôem
 = *
pi
 ;

375 *
pi
 !
roŸ
->
ôem
)

377 i‡(*
pi
 < 
roŸ
->
ôem
)

379 i‡(*
pi
 < 
roŸ
->
À·
->
ôem
)

380 
roŸ
 = 
	`sögÀRŸ©eWôhLe·
 (root) ;

381 i‡(
NuŒNode
 =
roŸ
->
À·
)

384 
right_åì_mö
->
À·
 = 
roŸ
 ;

385 
right_åì_mö
 = 
roŸ
 ;

386 
roŸ
 =ÑoŸ->
À·
 ;

390 i‡(*
pi
 > 
roŸ
->
right
->
ôem
)

391 
roŸ
 = 
	`sögÀRŸ©eWôhRight
 (root) ;

392 i‡(
NuŒNode
 =
roŸ
->
right
)

395 
À·_åì_max
->
right
 = 
roŸ
 ;

396 
À·_åì_max
 = 
roŸ
 ;

397 
roŸ
 =ÑoŸ->
right
 ;

401 
À·_åì_max
->
right
 = 
roŸ
->
À·
 ;

402 
right_åì_mö
->
À·
 = 
roŸ
->
right
 ;

403 
roŸ
->
À·
 = 
hódî
.
right
 ;

404 
roŸ
->
right
 = 
hódî
.
À·
 ;

405 
	`upD©aLe·SubTªeCou¡
 (
roŸ
->
right
) ;

406 
	`upD©aRightSubTªeCou¡
 (
roŸ
->
À·
) ;

407 i‡(
roŸ
->
À·
 !
NuŒNode
)

408 
roŸ
->
À·SubTªeCou¡
 =ÑoŸ->
À·
->À·SubTªeCou¡ +ÑoŸ->À·->
rightSubTªeCou¡
 + 1 ;

410 
roŸ
->
À·SubTªeCou¡
 = 0 ;

411 i‡(
roŸ
->
right
 !
NuŒNode
)

412 
roŸ
->
rightSubTªeCou¡
 =ÑoŸ->
right
->
À·SubTªeCou¡
 +Ñoot->right->rightSubTreeCount + 1 ;

414 
roŸ
->
rightSubTªeCou¡
 = 0 ;

416  
roŸ
 ;

417 
	}
}

419 
	$ªÀa£
 (
SPYNode
 * c⁄° 
roŸ
)

421 i‡(
roŸ
 !
NuŒNode
)

423 
	`ªÀa£
 (
roŸ
->
À·
) ;

424 
	`ªÀa£
 (
roŸ
->
right
) ;

425 
	`‰ì
 (
roŸ
) ;

427 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_stack.c

1 
	~<°dio.h
>

2 
	~<mÆloc.h
>

3 
	~"°_°ack.h
"

11 
ST_STACK_LIST
* 
	$°_°ack_li°_Æloc
()

13 
ST_STACK_LIST
* 
°ack
 = 
NULL
 ;

15 
°ack
 = (
ST_STACK_LIST
*)
	`mÆloc
((ST_STACK_LIST)) ;

16 if(
NULL
 =
°ack
)

18 
	`__îr
("alloc meme for stack failed !\n") ;

19 
	`exô
(1) ;

21 
°ack
->
pD©a
 = 
	`°_¶i°_Æloc
() ;

22 
°ack
->
t›
 = 0 ;

24  
°ack
 ;

25 
	}
}

29 
	$°_°ack_li°_‰ì
(
ST_STACK_LIST
* 
°ack
)

31 if(
NULL
 =
°ack
 || NULL =°ack->
pD©a
)

34 
	`°_¶i°_‰ì
(
°ack
->
pD©a
);

35 
	`‰ì
(
°ack
) ;

36 
°ack
 = 
NULL
 ;

37 
	}
}

41 
°boﬁ
 
	$°_°ack_li°_push
(
ST_STACK_LIST
* 
°ack
, 
°öt
 
d©a
)

44 
STSLi°
* 
_S
 = 
NULL
 ;

46 
°ack
->
pD©a
 = 
	`°_¶i°_¥ïíd
(°ack->pD©a, 
d©a
) ;

47 
°ack
->
t›
++ ;

49  
TRUE
 ;

50 
	}
}

54 
°öt
 
	$°_°ack_li°_p›
(
ST_STACK_LIST
* 
°ack
)

56 
STSLi°
* 
li°
 = 
NULL
 ;

57 
°öt
 
d©a
 ;

59 if(0 =
°ack
->
t›
)

61 
	`__msg
("the stack is NULL !\n");

62  
FALSE
 ;

66 
°ack
->
t›
-- ;

67 
li°
 = 
°ack
->
pD©a
 ;

68 
d©a
 = (
°öt
)
li°
->data ;

69 
°ack
->
pD©a
 = sèck->pD©a->
√xt
 ;

70 
	`‰ì
(
li°
) ;

71 
li°
 = 
NULL
 ;

72  
d©a
 ;

74 
	}
}

87 
ST_STACK_NODE
* 
	$°_°ack_Æloc
(
°öt
 
num
)

89 
ST_STACK_NODE
* 
pSèckNode
 = 
NULL
 ;

90 if(0 =
num
)

91  
NULL
 ;

93 
pSèckNode
 = (
ST_STACK_NODE
 *)
	`mÆloc
((ST_STACK_NODE)) ;

94 if(
NULL
 =
pSèckNode
)

96 
	`__îr
("alloc mem for stack fail! \n");

97 
	`exô
(1);

99 
	`mem£t
(
pSèckNode
, 0, (
ST_STACK_NODE
));

101 
pSèckNode
->
pD©a
 = (
°öt
 *)
	`mÆloc
(
num
*(stint));

102 if(
NULL
 =
pSèckNode
->
pD©a
)

104 
	`‰ì
(
pSèckNode
) ;

105 
pSèckNode
 = 
NULL
 ;

106  
NULL
 ;

109 
	`mem£t
(
pSèckNode
->
pD©a
, 0, (
°öt
)*
num
);

110 
pSèckNode
->
Àngth
 = 
num
 ;

111 
pSèckNode
->
t›
 = 0 ;

113  
pSèckNode
 ;

114 
	}
}

118 
°boﬁ
 *
	$°_°ack_‰ì
(c⁄° 
ST_STACK_NODE
* 
pSèckNode
)

120 if(
NULL
 =
pSèckNode
)

121  
FALSE
 ;

123 if(
NULL
 =
pSèckNode
->
pD©a
)

124  
FALSE
 ;

126 
	`‰ì
(
pSèckNode
->
pD©a
) ;

127 
	`‰ì
(
pSèckNode
) ;

129 
pSèckNode
 = 
NULL
 ;

131  
TRUE
 ;

132 
	}
}

137 
°boﬁ
 *
	$°_°ack_push
(
ST_STACK_NODE
* 
pSèckNode
, 
°öt
 
d©a
)

139 if(
NULL
 =
pSèckNode
 ||ÖSèckNode->
Àngth
 =pSèckNode->
t›
)

140  
FALSE
 ;

142 
pSèckNode
->
pD©a
[pSèckNode->
t›
++] = 
d©a
 ;

143  
TRUE
 ;

144 
	}
}

149 
°boﬁ
 *
	$°_°ack_p›
(
ST_STACK_NODE
* 
pSèckNode
, 
°öt
* 
d©a
)

151 if(
NULL
 =
pSèckNode
 || NULL =
d©a
)

152  
FALSE
 ;

154 if(0 =
pSèckNode
->
t›
)

155  
FALSE
 ;

157 *
d©a
 = 
pSèckNode
->
pD©a
[--pSèckNode->
t›
] ;

159  
TRUE
 ;

160 
	}
}

164 
°öt
 
	$°_cou¡_°ack
(
ST_STACK_NODE
* 
pSèckNode
)

166  
pSèckNode
->
t›
 ;

167 
	}
}

173 
	$°_°ack_dump
(
ST_STACK_NODE
* 
pSèckNode
)

175 
°öt
 
i
 ;

177 if(
NULL
 =
pSèckNode
 || 0 =pSèckNode->
t›
)

178 
FAIL
 ;

180 
i
 = 0 ; i < 
pSèckNode
->
t›
 ; i++)

182 
	`¥ötf
("%d ", 
pSèckNode
->
pD©a
[
i
]) ;

184 
	`¥ötf
("\n") ;

188 
FAIL
:

191 
	}
}

	@/media/programs/workdir/stlib/trunk/src/st_treaptree.c

1 
	~<°dio.h
>

2 
	~<mÆloc.h
>

3 
	~"°_åó±ªe.h
"

4 
	~"°_log.h
"

7 
	#Inföôy
 32767

	)

10 
Posôi⁄
 
	gTRNuŒNode
 = 
NULL
;

11 
Posôi⁄
 
SögÀRŸ©eWôhLe·
–Posôi⁄ 
K2
 ) ;

12 
Posôi⁄
 
SögÀRŸ©eWôhRight
–Posôi⁄ 
K1
 ) ;

16 
R™dom
( ) ;

20 
Tª≠


21 
	$°_åóp_åì_öô
( )

23 if–
TRNuŒNode
 =
NULL
 )

25 
TRNuŒNode
 = 
	`mÆloc
––
Tª≠Node
 ) );

26 if–
TRNuŒNode
 =
NULL
 )

27 
	`__îr
( "Out of space!!!" );

28 
TRNuŒNode
->
Le·
 = TRNuŒNode->
Right
 = TRNullNode;

29 
TRNuŒNode
->
Pri‹ôy
 = 
Inföôy
;

31  
TRNuŒNode
;

32 
	}
}

34 
Tª≠


35 
	$°_åóp_åì_de°roy
–
Tª≠
 
T
 )

37 if–
T
 !
TRNuŒNode
 )

39 
	`°_åóp_åì_de°roy
–
T
->
Le·
 );

40 
	`°_åóp_åì_de°roy
–
T
->
Right
 );

41 
	`‰ì
–
T
 );

43  
TRNuŒNode
;

44 
	}
}

47 
Posôi⁄


48 
	$°_åóp_åì_föd
–
TREÀmTy≥
 
X
, 
Tª≠
 
T
 )

50 if–
T
 =
TRNuŒNode
 )

51  
TRNuŒNode
;

52 if–
X
 < 
T
->
EÀmít
 )

53  
	`°_åóp_åì_föd
–
X
, 
T
->
Le·
 );

55 if–
X
 > 
T
->
EÀmít
 )

56  
	`°_åóp_åì_föd
–
X
, 
T
->
Right
 );

58  
T
;

59 
	}
}

62 
Posôi⁄


63 
	$°_åóp_åì_föd_mö
–
Tª≠
 
T
 )

65 if–
T
 =
TRNuŒNode
 )

66  
TRNuŒNode
;

68 if–
T
->
Le·
 =
TRNuŒNode
 )

69  
T
;

71  
	`°_åóp_åì_föd_mö
–
T
->
Le·
 );

72 
	}
}

75 
Posôi⁄


76 
	$°_åóp_åì_föd_max
–
Tª≠
 
T
 )

78 if–
T
 !
TRNuŒNode
 )

79  
T
->
Right
 !
TRNuŒNode
 )

80 
T
 = T->
Right
;

82  
T
;

83 
	}
}

86 
Tª≠


87 
	$°_åóp_åì_ö£π
–
TREÀmTy≥
 
Iãm
, 
Tª≠
 
T
 )

89 if–
T
 =
TRNuŒNode
 )

92 
T
 = 
	`mÆloc
––
Tª≠Node
 ) );

93 if–
T
 =
NULL
 )

94 
	`__îr
( "Out of space!!!" );

97 
T
->
EÀmít
 = 
Iãm
; T->
Pri‹ôy
 = 
	`R™dom
( );

98 
T
->
Le·
 = T->
Right
 = 
TRNuŒNode
;

102 if–
Iãm
 < 
T
->
EÀmít
 )

104 
T
->
Le·
 = 
	`°_åóp_åì_ö£π
–
Iãm
, T->Left );

105 if–
T
->
Le·
->
Pri‹ôy
 < T->Priority )

106 
T
 = 
	`SögÀRŸ©eWôhLe·
( T );

109 if–
Iãm
 > 
T
->
EÀmít
 )

111 
T
->
Right
 = 
	`°_åóp_åì_ö£π
–
Iãm
, T->Right );

112 if–
T
->
Right
->
Pri‹ôy
 < T->Priority )

113 
T
 = 
	`SögÀRŸ©eWôhRight
( T );

118  
T
;

119 
	}
}

123 
Tª≠


124 
	$°_åóp_åì_ªmove
–
TREÀmTy≥
 
Iãm
, 
Tª≠
 
T
 )

126 if–
T
 !
TRNuŒNode
 )

128 if–
Iãm
 < 
T
->
EÀmít
 )

129 
T
->
Le·
 = 
	`°_åóp_åì_ªmove
–
Iãm
, T->Left );

131 if–
Iãm
 > 
T
->
EÀmít
 )

132 
T
->
Right
 = 
	`°_åóp_åì_ªmove
–
Iãm
, T->Right );

136 if–
T
->
Le·
->
Pri‹ôy
 < T->
Right
->Priority )

137 
T
 = 
	`SögÀRŸ©eWôhLe·
( T );

139 
T
 = 
	`SögÀRŸ©eWôhRight
( T );

141 if–
T
 !
TRNuŒNode
 )

142 
T
 = 
	`°_åóp_åì_ªmove
–
Iãm
, T );

146 
	`‰ì
–
T
->
Le·
 );

147 
T
->
Le·
 = 
TRNuŒNode
;

151  
T
;

152 
	}
}

155 
TREÀmTy≥


156 
	$°_åóp_åì_ªåõve
–
Posôi⁄
 
P
 )

158  
P
->
EÀmít
;

159 
	}
}

163 
	$°_åóp_åì_åavî£
–
Tª≠
 
T
 )

165 if–
T
 !
TRNuŒNode
 )

167 
	`°_åóp_åì_åavî£
–
T
->
Le·
 );

168 
	`¥ötf
–"%d ", 
T
->
EÀmít
 );

169 
	`°_åóp_åì_åavî£
–
T
->
Right
 );

171 
	}
}

176 
°öt
 
	$R™dom
( )

178  
	`ønd
( ) - 1;

179 
	}
}

186 
Posôi⁄


187 
	$SögÀRŸ©eWôhLe·
–
Posôi⁄
 
K2
 )

189 
Posôi⁄
 
K1
;

191 
K1
 = 
K2
->
Le·
;

192 
K2
->
Le·
 = 
K1
->
Right
;

193 
K1
->
Right
 = 
K2
;

195  
K1
;

196 
	}
}

202 
Posôi⁄


203 
	$SögÀRŸ©eWôhRight
–
Posôi⁄
 
K1
 )

205 
Posôi⁄
 
K2
;

207 
K2
 = 
K1
->
Right
 ;

208 
K1
->
Right
 = 
K2
->
Le·
 ;

209 
K2
->
Le·
 = 
K1
 ;

211  
K2
;

212 
	}
}

	@/media/programs/workdir/stlib/trunk/test/stlibtest.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<as£π.h
>

6 
	~"°lib.h
"

7 
	~"°_¶i°.h
"

8 
	~"°_dli°.h
"

9 
	~"°_log.h
"

10 
	~"°_dæi°.h
"

11 
	~"°_quíe.h
"

12 
	~"°_°ack.h
"

13 
	~"°_båì.h
"

14 
	~"°_av…ªe.h
"

15 
	~"°_•œyåì.h
"

16 
	~"°_gåì.h
"

17 
	~"°_rbåì.h
"

18 
	~"°_rbåì_lk.h
"

19 #i‡!
deföed
(
WIN32
)

20 
	~"°_rbåì_bsd.h
"

22 
	~"°_åó±ªe.h
"

23 
	~"°_qs‹t.h
"

26 
	#MAX_SIZE
 8

	)

29 
	sã°


31 
°öt
 
	ma
;

32 
°öt8
 
	mb
;

34 
	sts_hli°


36 
°_li°_hód
 
	mmembî1
;

37 
°öt
 
	mmembî2
;

38 
°öt8
 
	mmembî3
;

39 
°doubÀ
 
	mmembî4
;

44 
ts_hli°
 
	ghñlŸs
;

45 
ts_hli°
 * 
	grs
;

47 
ST_LIST_HEAD
(
hñlﬁi°
);

51 
STSLi°
 *
	$öô_li°
(
°öt
 
size
, stöà*
¨øy
)

53 
°öt
 
i
 ;

54 
STSLi°
 *
¶i°
 = 
NULL
 ;

56 
i
 = 0; i < 
MAX_SIZE
; i++)

58 
¶i°
 = 
	`°_¶i°_≠≥nd
(¶i°, (
°poöãr
)(
¨øy
[
i
]));

61  
¶i°
 ;

62 
	}
}

64 
°öt


65 
	$s‹t
 (
°c⁄°poöãr
 
p1
, stc⁄°poöã∏
p2
)

67 
°öt
 
a
, 
b
;

69 
a
 = (
°öt
)(
p1
);

70 
b
 = (
°öt
)(
p2
);

72  (
a
 > 
b
 ? +1 :á == b ? 0 : -1);

73 
	}
}

75 
	$°¶i°_ã°
()

77 
STSLi°
 *
¶i°
 = 
NULL
 ;

78 
STSLi°
 *
ãmp
 = 
NULL
 ;

79 
STSLi°
 *
≥nd
 = 
NULL
 ;

81 
°öt
 
¨øy
[
MAX_SIZE
] = {444, 666, 154, 556, 244, 966, 224, 456};

83 
¶i°
 = 
	`öô_li°
(
MAX_SIZE
, 
¨øy
);

84 
	`°_dump_li°
(
¶i°
);

87 
ãmp
 = 
	`°_¶i°_s‹t
 (
¶i°
, 
s‹t
);

88 
	`°_dump_li°
(
ãmp
);

90 
ãmp
 = 
	`°_¶i°_dúe˘_ö£π_s‹t
(
¶i°
);

91 
	`°_dump_li°
(
ãmp
);

93 
ãmp
 = 
	`°_¶i°_£À˘_s‹t
(
¶i°
);

94 
	`°_dump_li°
(
ãmp
);

96 
ãmp
 = 
	`°_¶i°_bubbÀ_s‹t
(
¶i°
);

97 
	`°_dump_li°
(
ãmp
);

99 
≥nd
 = 
	`°_¶i°_œ°
(
¶i°
);

100 
ãmp
 = 
	`°_¶i°_quick_s‹t
(
¶i°
, 
≥nd
);

101 
	`°_dump_li°
(
ãmp
);

103 
	`°_¶i°_quick_s‹t2
(&
¶i°
, 
NULL
);

104 
	`°_dump_li°
(
¶i°
);

106 
	`°_¶i°_shñl_s‹t
(
¶i°
);

107 
	`°_dump_li°
(
¶i°
);

109 
ãmp
 = 
	`°_¶i°_ødix_s‹t
(
¶i°
, 3);

110 
	`°_dump_li°
(
¶i°
);

112 
	}
}

115 
	$°¨øy_ã°
()

117 
°öt
 
¨øy
[
MAX_SIZE
] = {444, 666, 154, 556, 244, 966, 224, 456};

119 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

122 
	`°_¨ry_ªcursive_mîge_s‹t
(
¨øy
, 0, 
MAX_SIZE
 - 1);

123 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

125 
	`°_¨ry_hód_s‹t
(
¨øy
, 
MAX_SIZE
);

126 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

128 
	`°_¨ry_qs‹t
(
¨øy
, 0, 
MAX_SIZE
-1);

129 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

131 
	`°_¨ry_shñl_s‹t
(
¨øy
, 
MAX_SIZE
);

132 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

134 
	`°_¨ry_£À˘_s‹t
(
¨øy
, 
MAX_SIZE
);

135 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

137 
	`°_¨ry_bubbÀ_s‹t
(
¨øy
, 
MAX_SIZE
);

138 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

140 
	`°_¨ry_ö£π_s‹t
(
¨øy
, 
MAX_SIZE
);

141 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

143 
	`°_¨ry_bö¨y_ö£π_s‹t
(
¨øy
, 
MAX_SIZE
);

144 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

146 
	`°_¨ry_ødix_s‹t
(
¨øy
, 
MAX_SIZE
);

147 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

149 
	`°_¨ry_tou∫amít_s‹t
(
¨øy
, 10);

150 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

152 
	`°_¨ry_ôî©i⁄_mîge_s‹t
(
¨øy
, 10);

153 
	`°_dump_¨øy
(
¨øy
, 
MAX_SIZE
);

155 
	}
}

160 
	$°dæi°_ã°
()

163 
°öt8
 *
pch¨
 = "testok" ;

164 
°öt
 
i
=0;

165 
°öt
 
j
=0;

166 
ã°
 
t1
;

167 
t1
.
a
=8;

168 
t1
.
b
='z';

170 
	`__msg
("length of int:%d char:%d double:%dÜong:%d\n",(),(),(),());

171 
	`__msg
("Addªs†o‡t1 is:%p\nddd membî o‡®is:%d\¿membî o‡b is:%c\n",&
t1
,t1.
a
,t1.
b
);

172 
	`__msg
("Addªs†o‡pch¨ is:%p\nvÆuêo‡pch¨ is:%s\n",
pch¨
,pchar);

173 ;
i
<
	`°æí
(
pch¨
);i++)

175 
	`__msg
("Addªs†o‡membî o‡pch¨ i¿po†%d i†%∞ ,vÆuêo‡pch¨ i¿pos%d is:%c\n",
i
,
pch¨
+i,i,pchar[i]);

177 
	`__msg
("addªs†ba£=0\n,th™Åhêaddªs†o‡a:%d\«ddªs†o‡b:%d\n", &((
ã°
 *)0)->
a
,&((ã° *)0)->
b
) ;

180 
	`__msg
("IfÅhe NULL structás 0 ofÅs_hlist is given,thenÅhe size of 0based willbe:likeÅhis:\n\n\n\n");

181 
	`__msg
(" structÅs_hlistás NULL \n");

182 
	`__msg
("%u --->|__________|\n",&–((
ts_hli°
 *)0)->
membî1
) );

183 
	`__msg
(" |__________|\n");

184 
	`__msg
(" |__________|\n");

185 
	`__msg
(" |__________|\n");

186 
	`__msg
(" |__________|\n");

187 
	`__msg
(" |__________|\n");

188 
	`__msg
(" |__________|\n");

189 
	`__msg
(" |__________|\n");

190 
	`__msg
("%u --->|__________|\n",&–((
ts_hli°
 *)0)->
membî2
) );

191 
	`__msg
(" |__________|\n");

192 
	`__msg
(" |__________|\n");

193 
	`__msg
(" |__________|\n");

194 
	`__msg
("%u--->|__________|\n",&–((
ts_hli°
 *)0)->
membî3
) );

195 
	`__msg
(" |__________|\n");

196 
	`__msg
(" |__________|\n");

197 
	`__msg
(" |__________|\n");

198 
	`__msg
("%u--->|__________|\n",&–((
ts_hli°
 *)0)->
membî4
) );

199 
	`__msg
(" |__________|\n");

200 
	`__msg
(" |__________|\n");

201 
	`__msg
(" |__________|\n");

202 
	`__msg
(" |__________|\n");

203 
	`__msg
(" |__________|\n");

204 
	`__msg
(" |__________|\n");

205 
	`__msg
(" |__________|\n");

207 
	`__msg
(" \n\n");

208 
	`__msg
(" structÅs_hlistásállocate space\n");

211 
	`__msg
(" sizêo‡Ås_hli° såu˘ i†%d\n",(
ts_hli°
));

212 ;
j
<(
ts_hli°
);j++)

214 
	`__msg
(" |__________|<--%p\n",&
hñlŸs
+(
°uöt32
)
j
);

216 
	`__msg
("Åhêaddªs†o‡hód—y≥ o‡°_hód_li°Ëis:%p\n",
hñlﬁi°
);

218 
hñlŸs
.
membî2
=3;

219 
hñlŸs
.
membî3
='A';

220 
hñlŸs
.
membî4
=44.33;

221 
	`°_li°_add_èû
(&
hñlŸs
.
membî1
,&
hñlﬁi°
);

222 #if !
	`deföed
(
WIN32
)

223 
rs
=
	`°_li°_íåy
(&
hñlŸs
.
membî1
, 
ts_hli°
, member1);

225 
	`__msg
("Åhêaddªs†o‡membî1 is: %p\n",&
hñlŸs
+(
°uöt32
)&–((
ts_hli°
 *)0)->
membî1
) );

226 
	`__msg
("Åhêaddªs†o‡membî2 is: %p\n",&
hñlŸs
+(
°uöt32
)&–((
ts_hli°
 *)0)->
membî2
) );

227 
	`__msg
("Åhêaddªs†o‡membî3 is: %p\n",&
hñlŸs
+(
°uöt32
)&–((
ts_hli°
 *)0)->
membî3
) );

228 
	`__msg
("Åhêaddªs†o‡membî4 is: %p\n",&
hñlŸs
+(
°uöt32
)&–((
ts_hli°
 *)0)->
membî4
) );

229 
	`__msg
(" Now we'llÅestÅhe valueárea ofÅs_hlist>>>>>\n");

230 
	`__msg
(" membî2 o‡r†is:%d\n", 
rs
->
membî2
);

231 
	`__msg
(" membî3 o‡r†is:%c\n", 
rs
->
membî3
);

232 
	`__msg
(" membî4 o‡r†is:%g\n", 
rs
->
membî4
);

233 
	}
}

237 
	$°_¨øy_queue_ã°
()

239 
STQueueA
* 
queue
 = 
NULL
 ;

240 
queue
 = 
	`°_¨øy_queue_√w
() ;

241 
__hîe__
 ;

242 
	`°_¨øy_queue_dy«mic_öô
(
queue
, 10);

243 
__hîe__
 ;

244 
	`°_¨øy_queue_push
(
queue
, 3) ;

245 
__hîe__
 ;

246 
	`°_¨øy_queue_push
(
queue
, 34) ;

247 
__hîe__
 ;

248 
	`°_¨øy_queue_push
(
queue
, 32) ;

249 
	`°_¨øy_queue_push
(
queue
, 4) ;

250 
	`°_¨øy_queue_p›
(
queue
);

251 
	`°_¨øy_queue_dump
(
queue
);

252 
	`°_¨øy_queue_push
(
queue
, 55) ;

253 
	`°_¨øy_queue_dump
(
queue
);

255 
	`__msg
("À¿[%d] fr⁄à[%d]Ñó∏[%d]\n", 
queue
->
Àngth
, queue->
‰⁄t
, queue->
ª¨
);

257 
queue
->
ª¨
 != -1)

259 
°öt
 
p›_num
 = 0 ;

260 
p›_num
 = 
	`°_¨øy_queue_p›
(
queue
);

261 
	`¥ötf
("%d ", 
queue
->
pD©a
[
p›_num
]);

263 
	`¥ötf
("\n");

264 
	}
}

267 
	$°_¨øy_°ack_ã°
()

269 
ST_STACK_NODE
* 
°ack
 ;

270 
°öt
 
d©a
 ;

272 
°ack
 = 
	`°_°ack_Æloc
(10) ;

273 
	`°_°ack_push
(
°ack
, 78) ;

274 
	`°_°ack_push
(
°ack
, 44) ;

275 
	`°_°ack_push
(
°ack
, 32) ;

276 
	`°_°ack_push
(
°ack
, 45) ;

277 
	`__msg
("°ack cou¡ [%d]\n", 
	`°_cou¡_°ack
(
°ack
));

278 
	`°_°ack_p›
(
°ack
, &
d©a
) ;

279 
	`__msg
("°ack cou¡ [%d],Ö› [%d]\n", 
	`°_cou¡_°ack
(
°ack
), 
d©a
);

280 
	`°_°ack_dump
(
°ack
);

281 
	}
}

283 
	$°_°ack_li°_ã°
()

285 
ST_STACK_LIST
* 
°ack
 = 
NULL
 ;

287 
°ack
 = 
	`°_°ack_li°_Æloc
();

289 
	`°_°ack_li°_push
(
°ack
, 6);

290 
	`°_°ack_li°_push
(
°ack
, 2);

291 
	`°_°ack_li°_push
(
°ack
, 5);

292 
	`°_°ack_li°_push
(
°ack
, 4);

293 
	`°_°ack_li°_push
(
°ack
, 3);

295 
	`__msg
("p› [%d]\n", 
	`°_°ack_li°_p›
(
°ack
));

296 
	`__msg
("p› [%d]\n", 
	`°_°ack_li°_p›
(
°ack
));

297 
	`__msg
("p› [%d]\n", 
	`°_°ack_li°_p›
(
°ack
));

298 
	`__msg
("p› [%d]\n", 
	`°_°ack_li°_p›
(
°ack
));

299 
	`__msg
("p› [%d]\n", 
	`°_°ack_li°_p›
(
°ack
));

300 
	`__msg
("p› [%d]\n", 
	`°_°ack_li°_p›
(
°ack
));

301 
	}
}

303 
°öt
 
	$visôT
(
TEÀmTy≥
 
e
)

305 
	`¥ötf
("%¯",
e
);

307 
	}
}

309 
	$°_båì_ã°
()

311 
°öt
 
i
;

312 
ST_BTREE
 
T
, 
p
, 
c
;

313 
TEÀmTy≥
 
e1
, 
e2
;

315 
	`°_båì_öô
(&
T
);

316 
	`__msg
("¸óãá NULLÅªe,i†thêåì NULL? %d(1:ye†0:no),Åhêdïth o‡åì = [%d]\n", 
	`°_båì_em±y
(
T
), 
	`°_båì_dïth
(T)) ;

317 
e1
 = 
	`°_båì_roŸ
(
T
);

318 if(
e1
!=' ')

319 
	`__msg
("thêroŸ o‡åì : %c\n",
e1
);

321 
	`__msg
("theÅree is NULL,ÇoÑoot\n");

322 
	`__msg
("please inputÅheÅree(ep:ab withÅhree space meaná isÑoot,ánd b isÜeft child\n") ;

323 
	`°_båì_¸óã
(&
T
);

324 
	`__msg
("¸óãá NULLÅªe,i†thêåì NULL? %d(1:ye†0:no),Åhêdïth o‡åì = [%d]\n", 
	`°_båì_em±y
(
T
), 
	`°_båì_dïth
(T)) ;

325 
e1
=
	`°_båì_roŸ
(
T
);

326 if(
e1
!=' ')

327 
	`¥ötf
("thêroŸ o‡åì: %c\n",
e1
);

329 
	`¥ötf
("theÅree is NULL,ÇoÑoot\n");

331 
	`¥ötf
("middle orderÅraverseÅheÅree:\n");

332 
	`°_båì_mid‹dî_åavî£
(
T
,
visôT
);

333 
	`¥ötf
("\nmiddle orderÅraverseÅheÅree with stack:\n");

334 
	`°_båì_mid‹dî_ôî_åavî£
(
T
,
visôT
);

335 
	`¥ötf
("middle orderÅraverseÅheÅree with stack(other):\n");

336 
	`°_båì_mid‹dî_ôî_åavî£2
(
T
,
visôT
);

338 
	`__msg
("exchangeÅheÅree's LR child\n");

339 
	`°_båì_exch™ge_LR
(
T
);

340 
	`__msg
("cou¡Åh∏Àave†num [%d]\n", 
	`°_båì_Àaves_num
(
T
));

342 
	`__msg
("iterationÖrev orderÅraverseÅheÅree\n");

343 
	`°_båì_¥e‹dî_åavî£_ôî©i⁄
(
T
,
visôT
);

344 
	`__msg
("iteration middle orderÅraverseÅheÅree\n");

345 
	`°_båì_mid‹dî_åavî£_ôî©i⁄
(
T
,
visôT
);

346 
	`__msg
("iterationÖost orderÅraverseÅheÅree\n");

347 
	`°_båì_pos‹dî_åavî£_ôî©i⁄
(
T
,
visôT
);

349 
	`¥ötf
("\npost orderÅraverseÅheÅree:\n");

350 
	`°_båì_pos‹dî_åavî£
(
T
,
visôT
);

352 
	`¥ötf
("\nlevel orderÅraverseÅheÅree:\n");

353 
	`°_båì_Àvñ_‹dî_åavî£
(
T
,
visôT
);

355 
	`¥ötf
("please inputá value ofÇode: ");

356 
	`sˇnf
("%*c%c",&
e1
);

357 
p
=
	`°_båì_poöt
(
T
,
e1
);

358 
	`¥ötf
("thênodêvÆuêi†%c\n",
	`°_båì_vÆue
(
p
));

359 
	`¥ötf
("inputá valueÅo changeÅheÇode: ");

360 
	`sˇnf
("%*c%c%*c",&
e2
);

361 
	`°_båì_assign
(
p
,
e2
);

362 
	`¥ötf
("level orderÅraverseÅheÅree:\n");

363 
	`°_båì_Àvñ_‹dî_åavî£
(
T
,
visôT
);

364 
	`__msg
("############################\n");

365 
e1
=
	`°_båì_∑ª¡
(
T
,
e2
);

366 if(
e1
!=' ')

367 
	`¥ötf
("%¯Áthî i†%c\n",
e2
,
e1
);

369 
	`¥ötf
("%¯havênÿ∑ª¡ \n",
e2
);

370 
e1
=
	`°_båì_À·_chûd
(
T
,
e2
);

371 if(
e1
!=' ')

372 
	`¥ötf
("%¯À· chûd i†%c\n",
e2
,
e1
);

374 
	`¥ötf
("%¯nÿÀ· chûd \n",
e2
);

375 
e1
=
	`°_båì_right_chûd
(
T
,
e2
);

376 if(
e1
!=' ')

377 
	`¥ötf
("%¯righàchûd i†%c\n",
e2
,
e1
);

379 
	`¥ötf
("%¯nÿrighàchûd \n",
e2
);

380 
e1
=
	`°_båì_À·_siblög
(
T
,
e2
);

381 if(
e1
!=' ')

382 
	`¥ötf
("%¯À· brŸhî i†%c\n",
e2
,
e1
);

384 
	`¥ötf
("%¯nÿÀ· brŸhî \n",
e2
);

385 
e1
=
	`°_båì_right_siblög
(
T
,
e2
);

386 if(
e1
!=' ')

387 
	`¥ötf
("%¯righàbrŸhî i†%c\n",
e2
,
e1
);

389 
	`¥ötf
("%¯nÿrighàbrŸhî \n",
e2
);

391 
	`°_båì_öô
(&
c
);

392 
	`¥ötf
("createá NULLÑight subtree c:\n");

393 
	`¥ötf
("please inputÅheÅree(ep:ab withÅhree space meaná isÑoot,ánd b isÜeft child)\n");

394 
	`°_båì_¸óã
(&
c
);

396 
	`¥ötf
("prev orderÅraverseÅheÅree c:\n");

397 
	`°_båì_¥e‹dî_åavî£
(
c
,
visôT
);

399 
	`¥ötf
("\ninsertÅheÅree cÅoÅree T,please inputÅheÖarent ofÅree c cÜeft (0)"

401 
	`sˇnf
("%*c%c%d",&
e1
,&
i
);

402 
p
=
	`°_båì_poöt
(
T
,
e1
);

403 
	`°_båì_ö£π_chûd
(
p
,
i
,
c
);

405 
	`¥ötf
("prev orderÅheÅree:\n");

406 
	`°_båì_¥e‹dî_åavî£
(
T
,
visôT
);

407 
	`¥ötf
("\ndeleteÅhe subtree,please inputÅheÖarentÇode whitch will delete L (0) or R (1): ");

408 
	`sˇnf
("%*c%c%d",&
e1
,&
i
);

409 
p
=
	`°_båì_poöt
(
T
,
e1
);

410 
	`°_båì_dñëe_chûd
(
p
,
i
);

411 
	`¥ötf
("prev orderÅheÅree:\n");

412 
	`°_båì_¥e‹dî_åavî£
(
T
,
visôT
);

413 
	`¥ötf
("\n");

414 
	`°_båì_de°roy
(&
T
);

416 
	}
}

418 
	$visôBST
(
BSTEÀmTy≥
 
c
)

420 
	`¥ötf
("(%d,%dË",
c
.
key
,c.
Ÿhîs
);

421 
	}
}

423 
	$°_b°ªe_ã°
()

425 
BSTªe
 
dt
,
p
;

426 
°öt
 
i
;

427 
BSTKeyTy≥
 
j
;

429 
BSTEÀmTy≥
 
r
[10] =

434 
	`°_b°ªe_öô
(&
dt
);

435 
i
=0 ; i<10 ; i++)

436 
	`°_b°ªe_ö£π
(&
dt
, 
r
[
i
]);

438 
	`°_b°ªe_dñëe_åavî£
(
dt
, 
visôBST
);

439 
	`¥ötf
("\nplease inputÅhe keyÅo file: ");

440 
	`sˇnf
("%d",&
j
);

441 
p
=
	`°_b°ªe_£¨ch
(
dt
, 
j
);

442 if(
p
)

444 
	`¥ötf
("thêåìÉxi°Åhêkey[%d].", 
p
->
d©a
.
key
);

445 
	`°_b°ªe_dñëe_key
(&
dt
,
j
);

446 
	`¥ötf
("™d dñëêthêkey [%d]:\n", 
j
);

447 
	`°_b°ªe_dñëe_åavî£
(
dt
,
visôBST
);

448 
	`¥ötf
("\n");

452 
	`¥ötf
("the ket don'tÉxist\n");

454 
	`°_b°ªe_de°roy
(&
dt
);

456 
	}
}

458 
	$°_av…ªe_ã°
()

460 
°öt
 
i
,
j
;

461 
AVLTªe
 
pRoŸ
 = 
NULL
;

463 
	`§™d
((
AVLEÀmTy≥
)
	`time
(
NULL
));

465 
i
 = 0; i < 6; ++i)

467 
j
 = 
	`ønd
()%100;

468 
	`¥ötf
("%d\n", 
j
);

469 
pRoŸ
 = 
	`°_av…ªe_ö£π
(
j
,ÖRoot);

471 
	`¥ötf
("\n\n");

474 
pRoŸ
 = 
	`°_av…ªe_ö£π
(1,ÖRoot);

475 
pRoŸ
 = 
	`°_av…ªe_ö£π
(2,ÖRoot);

476 
pRoŸ
 = 
	`°_av…ªe_ö£π
(3,ÖRoot);

477 
pRoŸ
 = 
	`°_av…ªe_ö£π
(4,ÖRoot);

478 
pRoŸ
 = 
	`°_av…ªe_ö£π
(5,ÖRoot);

482 
	`°_av…ªe_åavî£
(
pRoŸ
);

484 
	`°_av…ªe_de°roy
(&
pRoŸ
);

486 
	}
}

489 
	$visôSPYT
(c⁄° 
SPYNode
 * c⁄° 
≤
)

491 
	`¥ötf
("%d ",
≤
->
ôem
);

492 
	}
}

494 
	$°_•œy_åì_ã°
()

496 
°öt
 
i
, 
j
 ;

497 
S∂ayTªe
 
•œy
 ;

498 
SPYNode
* 
ãmp
 ;

500 
	`°_•œy_åì_¸óã
(&
•œy
) ;

502 
	`§™d
((
SPYIãm
)
	`time
(
NULL
));

504 
i
 = 0; i < 6; ++i)

506 
j
 = 
	`ønd
()%100;

507 
	`¥ötf
("%d\n", 
j
);

508 
	`°_•œy_åì_ö£π
 (&
•œy
, &
j
) ;

511 
	`¥ötf
("roŸÇodê[%d]\n", 
•œy
->
roŸ
->
ôem
);

512 
	`¥ötf
("\n");

513 
	`°_•œy_åì_åavî£
 (
•œy
->
roŸ
,
visôSPYT
) ;

514 
ãmp
 = 
	`°_•œy_åì_föd_mö
(&
•œy
);

515 
	`¥ötf
("thêmö vÆu£[%d]\n", 
ãmp
->
ôem
);

519 
SPYNode
* 
N
 ;

520 
°öt
 
i
 = 2 ;

521 
	`¥ötf
("[%d][%d][%d]\n", 
•œy
->
roŸ
->
ôem
, s∂ay->roŸ->
À·SubTªeCou¡
, s∂ay->roŸ->
rightSubTªeCou¡
);

522 
N
 = 
	`°_•œy_åì_föd_kthmö
(&
•œy
, 
i
++);

523 
	`¥ötf
("[%d][%d][%d]\n", 
•œy
->
roŸ
->
ôem
, s∂ay->roŸ->
À·SubTªeCou¡
, s∂ay->roŸ->
rightSubTªeCou¡
);

524 
	`¥ötf
("[%d][%d][%d]\n\n", 
N
->
ôem
, N->
À·SubTªeCou¡
, N->
rightSubTªeCou¡
);

528 
	`¥ötf
("\n");

529 
	}
}

533 
°poöãr
 
	gde°royed_key
 = 
NULL
;

534 
°poöãr
 
	gde°royed_vÆue
 = 
NULL
;

536 
°öt8
 
	gch¨s
[] =

541 
°öt8
 
	gch¨s2
[] =

545 
°öt


546 
	$my_com∑ª
 (
°c⁄°poöãr
 
a
,

547 
°c⁄°poöãr
 
b
)

549 c⁄° 
°öt8
 *
cha
 = 
a
;

550 c⁄° 
°öt8
 *
chb
 = 
b
;

552  *
cha
 - *
chb
;

553 
	}
}

555 
°öt


556 
	$my_£¨ch
 (
°c⁄°poöãr
 
a
,

557 
°c⁄°poöãr
 
b
)

559  
	`my_com∑ª
 (
b
, 
a
);

560 
	}
}

563 
	$my_key_de°roy
 (
°poöãr
 
key
)

565 
de°royed_key
 = 
key
;

566 
	}
}

569 
	$my_vÆue_de°roy
 (
°poöãr
 
vÆue
)

571 
de°royed_vÆue
 = 
vÆue
;

572 
	}
}

574 
°öt


575 
	$my_åavî£
 (
°poöãr
 
key
,

576 
°poöãr
 
vÆue
,

577 
°poöãr
 
d©a
)

579 
°öt8
 *
ch
 = 
key
;

580 
	`°_as£π
 ((*
ch
) > 0);

582  
FALSE
;

583 
	}
}

585 
°öt


586 
	$my_åavî£1
 (
°poöãr
 
key
,

587 
°poöãr
 
vÆue
,

588 
°poöãr
 
d©a
)

590 
°öt8
 *
ch
 = 
key
;

591 
	`¥ötf
("%¯\n", 
vÆue
);

592  
FALSE
 ;

593 
	}
}

595 
°öt


596 
	$check_‹dî
 (
°poöãr
 
key
,

597 
°poöãr
 
vÆue
,

598 
°poöãr
 
d©a
)

600 
°öt8
 **
p
 = 
d©a
;

601 
°öt8
 *
ch
 = 
key
;

603 
	`°_as£π
 (**
p
 =*
ch
);

605 (*
p
)++;

607  
FALSE
;

608 
	}
}

610 
	$°_gåì_ã°
()

612 
°öt
 
i
 ;

613 
STGTªe
* 
åì
 = 
NULL
 ;

614 
°öt8
 *
p
 ;

615 
°boﬁ
 
ªmoved
 ;

616 
°öt8
 
c
, 
d
;

618 
åì
 = 
	`°_åì_√w
 (
my_com∑ª
);

619 
i
 = 0; 
ch¨s
[i]; i++)

620 
	`°_åì_ö£π
 (
åì
, &
ch¨s
[
i
], &chars[i]);

623 
	`°_åì_f‹óch
 (
åì
, 
my_åavî£
, 
NULL
);

624 
	`__msg
("\n\n");

626 
	`°_as£π
 (
	`°_åì_¬odes
 (
åì
Ë=
	`°æí
 (
ch¨s
));

627 
	`°_as£π
 (
	`°_åì_height
 (
åì
) == 6);

629 
p
 = 
ch¨s
 ;

630 
	`°_åì_f‹óch
 (
åì
, 
check_‹dî
, &
p
);

632 
i
 = 0; i < 26; i++)

634 
ªmoved
 = 
	`°_åì_ªmove
 (
åì
, &
ch¨s
[
i
 + 10]);

635 
	`°_as£π
 (
ªmoved
);

638 
c
 = '\0';

639 
ªmoved
 = 
	`°_åì_ªmove
 (
åì
, &
c
);

640 
	`°_as£π
 (
ªmoved
 =
FALSE
);

642 
	`°_åì_f‹óch
 (
åì
, 
my_åavî£
, 
NULL
);

643 
	`°_as£π
 (
	`°_åì_¬odes
 (
åì
Ë=
	`°æí
 (
ch¨s2
));

644 
	`°_as£π
 (
	`°_åì_height
 (
åì
) == 6);

646 
p
 = 
ch¨s2
;

647 
	`°_åì_f‹óch
 (
åì
, 
check_‹dî
, &
p
);

649 
i
 = 25; i >= 0; i--)

650 
	`°_åì_ö£π
 (
åì
, &
ch¨s
[
i
 + 10], &chars[i + 10]);

653 
p
 = 
ch¨s
;

654 
	`°_åì_f‹óch
 (
åì
, 
check_‹dî
, &
p
);

656 
c
 = '0';

657 
p
 = 
	`°_åì_lookup
 (
åì
, &
c
);

658 
	`°_as£π
 (
p
 && *∞=
c
);

660 
c
 = '!';

661 
p
 = 
	`°_åì_lookup
 (
åì
, &
c
);

662 
	`°_as£π
 (
p
 =
NULL
);

664 
c
 = '|';

665 
p
 = 
	`°_åì_lookup
 (
åì
, &
c
);

666 
	`°_as£π
 (
p
 =
NULL
);

668 
c
 = '0';

669 
p
 = 
	`°_åì_£¨ch
 (
åì
, 
my_£¨ch
, &
c
);

670 
	`°_as£π
 (
p
 && *∞=
c
);

672 
	`°_åì_de°roy
 (
åì
);

674 
åì
 = 
	`°_åì_√w_fuŒ
 ((
STCom∑ªD©aFunc
)
my_com∑ª
, 
NULL
,

675 
my_key_de°roy
,

676 
my_vÆue_de°roy
);

678 
i
 = 0; 
ch¨s
[i]; i++)

679 
	`°_åì_ö£π
 (
åì
, &
ch¨s
[
i
], &chars[i]);

681 
c
 = '0';

682 
	`°_åì_ö£π
 (
åì
, &
c
, &c);

683 
	`°_as£π
 (
de°royed_key
 =&
c
);

684 
	`°_as£π
 (
de°royed_vÆue
 =&
ch¨s
[0]);

685 
de°royed_key
 = 
NULL
;

686 
de°royed_vÆue
 = 
NULL
;

688 
d
 = '1';

689 
	`°_åì_ª∂a˚
 (
åì
, &
d
, &d);

690 
	`°_as£π
 (
de°royed_key
 =&
ch¨s
[1]);

691 
	`°_as£π
 (
de°royed_vÆue
 =&
ch¨s
[1]);

692 
de°royed_key
 = 
NULL
;

693 
de°royed_vÆue
 = 
NULL
;

695 
c
 = '2';

696 
ªmoved
 = 
	`°_åì_ªmove
 (
åì
, &
c
);

697 
	`°_as£π
 (
ªmoved
);

698 
	`°_as£π
 (
de°royed_key
 =&
ch¨s
[2]);

699 
	`°_as£π
 (
de°royed_vÆue
 =&
ch¨s
[2]);

700 
de°royed_key
 = 
NULL
;

701 
de°royed_vÆue
 = 
NULL
;

703 
c
 = '3';

704 
ªmoved
 = 
	`°_åì_°ól
 (
åì
, &
c
);

705 
	`°_as£π
 (
ªmoved
);

706 
	`°_as£π
 (
de°royed_key
 =
NULL
);

707 
	`°_as£π
 (
de°royed_vÆue
 =
NULL
);

709 
	}
}

715 
	$visôRBT
(c⁄° 
RBNode
 * c⁄° 
≤
)

717 
	`¥ötf
("%d ",
≤
->
ôem
);

718 
	}
}

721 
	$°_rbåì_ã°
()

723 
°öt
 
i
, 
j
 ;

724 
pRBTªe
 
rb
 ;

725 
°öt
 
nodes
[14] = {30, 15, 70, 10, 20, 60, 85, 5, 50, 65, 80, 90, 40, 55} ;

727 
	`°_rbåì_¸óã
(&
rb
) ;

728 
	`§™d
((
RBIãm
)
	`time
(
NULL
));

729 
i
 = 0; i < 14; ++i)

731 
j
 = 
	`ønd
()%100;

734 
	`°_rbåì_ö£π
 (&
rb
, 
j
) ;

736 
	`°_rbåì_åavî£
 (&
rb
,
visôRBT
) ;

737 
	`¥ötf
("\n");

738 
	`__msg
("roŸÇodêi†[%d]\n", 
rb
->
roŸ
->
ôem
);

739 
	`¥ötf
("\n");

740 
	`¥ötf
("insertÅheÇode [10]\n");

741 
	`°_rbåì_ö£π
(&
rb
, 100) ;

742 
	`°_rbåì_åavî£
 (&
rb
,
visôRBT
) ;

743 
	`¥ötf
("\n");

744 
	`__msg
("roŸÇodêi†[%d]\n", 
rb
->
roŸ
->
ôem
);

745 
	`¥ötf
("\n");

746 
	`°_rbåì_ªÀa£
(&
rb
);

747 
	}
}

754 
	$°_åóp_åì_ã°
()

756 
°öt
 
i
, 
j
 ;

757 
Tª≠
 
T
 ;

758 
T
 = 
	`°_åóp_åì_öô
() ;

760 
	`§™d
((
TREÀmTy≥
)
	`time
(
NULL
));

762 
i
 = 0; i < 10; ++i)

764 
j
 = 
	`ønd
()%100;

765 
	`¥ötf
("%d\n", 
j
);

766 
T
 = 
	`°_åóp_åì_ö£π
 (
j
, T);

768 
	`¥ötf
("\n");

769 
	`¥ötf
("", 
T
->
EÀmít
);

770 
	`°_åóp_åì_åavî£
(
T
);

771 
	`¥ötf
("\n");

772 
	`¥ötf
("", 
T
->
EÀmít
);

774 
	`°_åóp_åì_de°roy
(
T
);

775 
	}
}

779 
	$°_rbåì_dow¬2up_ã°
()

781 
°öt
 
i
, 
cou¡
 = 14;

782 
RBKey_t
 
key
;

784 
rb_node_t
* 
roŸ
 = 
NULL
, *
node
 = NULL;

785 
°öt
 
nodes
[14] = {30, 15, 70, 10, 20, 60, 85, 5, 50, 65, 80, 90, 40, 55} ;

790 
i
 = 1; i <
cou¡
; ++i)

793 i‡((
roŸ
 = 
	`°_rbt_ö£π
(
nodes
[
i
-1], i,Ñoot)))

795 
	`¥ötf
("[ò%d] in£π key %d suc˚ss!\n", 
i
, 
nodes
[i-1]);

799 
	`¥ötf
("[ò%d] in£π key %dÉº‹!\n", 
i
, 
nodes
[i-1]);

800 
	`exô
(-1);

804 i‡((
node
 = 
	`°_rbt_£¨ch
(
key
, 
roŸ
)))

808 
	`¥ötf
("[ò%d] sórch key %d suc˚ss!\n", 
i
, 
key
);

816 
	`¥ötf
("[ò%d] sórch key %dÉº‹!\n", 
i
, 
key
);

818 
	`exô
(-1);

822 i‡(!(
i
 % 10))

826 i‡((
roŸ
 = 
	`°_rbt_îa£
(
key
,Ñoot)))

830 
	`¥ötf
("[ò%d]Éø£ key %d suc˚ss\n", 
i
, 
key
);

838 
	`¥ötf
("[ò%d]Éø£ key %dÉº‹\n", 
i
, 
key
);

847 
	`rb_åavî£
(
roŸ
);

848 
	`¥ötf
("\n");

849 
	`¥ötf
("roŸÇodê[%d]\n", 
roŸ
->
key
);

854 
	}
}

858 
°öt


859 
	$mys‹t1
 (
°c⁄°poöãr
 
a
, stc⁄°poöã∏
b
, 
°poöãr
 
u£r_d©a
)

861  *(
°uöt32
*)
a
 < *(°uöt32*)
b
 ? -1 : 1;

862 
	}
}

864 
°öt


865 
	$mys‹t2
 (
°c⁄°poöãr
 
a
, stc⁄°poöã∏
b
)

867  *(
°uöt32
*)
a
 < *(°uöt32*)
b
 ? -1 : 1;

868 
	}
}

870 
	$°_qs‹t_ã°
()

872 
	#SIZE
 10

	)

873 
i
;

874 
°uöt32
 
¨øy
[
SIZE
];

876 
	`§™d
((
TREÀmTy≥
)
	`time
(
NULL
));

878 
i
 = 0; i < 
SIZE
; i++)

879 
¨øy
[
i
] = 
	`ønd
()%
SIZE
;

881 
	`°_qs‹t_wôh_d©a
 (
¨øy
, 
SIZE
,  (
°uöt32
), 
mys‹t1
, 
NULL
);

883 
i
 = 0 ; i < 
SIZE
 ; i++)

885 
	`¥ötf
("%d ", 
¨øy
[
i
]);

888 
i
 = 0; i < 
SIZE
 - 1; i++)

889 
	`°_as£π
(
¨øy
[
i
] <=árray[i+1]);

892 
	`°_qs‹t_wôh_d©a
 (
¨øy
, 0,  (
°uöt32
), 
mys‹t1
, 
NULL
);

894 
	}
}

897 
°öt
 
	$maö
()

899 
	`Ârötf
(
°dîr
, "------------slistÅest------------\n");

900 
	`__msg
("------------slistÅest------------\n");

902 
	`°_exã∫Æ_log
("------------slistÅest------------\n");

903 
	`°¶i°_ã°
();

905 
	`Ârötf
(
°dîr
, "------------arrayÅest------------\n");

906 
	`°¨øy_ã°
();

908 
	`__msg
("------------doubleÑoundÜinkÜistÅest------------\n");

909 
	`°dæi°_ã°
();

911 
	`__msg
("------------arrayÑound queueÅest------------\n");

912 
	`°_¨øy_queue_ã°
();

914 
	`__msg
("------------array stackÅest------------\n");

916 
	`°_°ack_li°_ã°
();

918 
	`__msg
("------------btreeÅest------------\n");

920 
	`°_b°ªe_ã°
();

922 
	`__msg
("------------avlÅreeÅest------------\n");

923 
	`°_av…ªe_ã°
();

925 
	`__msg
("------------splayÅreeÅest------------\n");

926 
	`°_•œy_åì_ã°
();

928 
	`__msg
("------------st gÅreeÅest------------\n");

929 
	`°_gåì_ã°
();

931 
	`__msg
("------------stÑbÅreeÅest------------\n");

933 
	`°_rbåì_dow¬2up_ã°
();

935 
	`__msg
("------------stÅreapÅreeÅest------------\n");

936 
	`°_åóp_åì_ã°
() ;

938 
	`__msg
("------------st qsortÅreeÅest------------\n");

939 
	`°_qs‹t_ã°
();

941 
	`Ârötf
(
°dîr
, "------------testÉnd------------\n");

945 
	}
}

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

21 #i‚de‡
_MALLOC_H


22 
	#_MALLOC_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<°ddef.h
>

26 
	~<°dio.h
>

27 
	#__mÆloc_±r_t
 *

	)

30 
	#__mÆloc_size_t
 
size_t


	)

31 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

33 #ifde‡
__GNUC__


35 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

38 
	#__MALLOC_PMT
(
¨gs
Ë
	)
¨gs

42 
	#__MALLOC_P
(
¨gs
Ë
	)
¨gs

43 
	#__MALLOC_PMT
(
¨gs
Ë
	)
¨gs

48 
__BEGIN_DECLS


51 *
mÆloc
 
__MALLOC_P
 ((
size_t
 
__size
)Ë
__©åibuã_mÆloc__
 
__wur
;

54 *
ˇŒoc
 
__MALLOC_P
 ((
size_t
 
__nmemb
, size_à
__size
))

55 
__©åibuã_mÆloc__
 
__wur
;

62 *
ªÆloc
 
__MALLOC_P
 ((*
__±r
, 
size_t
 
__size
))

63 
__©åibuã_w¨n_unu£d_ªsu…__
;

66 
‰ì
 
__MALLOC_P
 ((*
__±r
));

69 
c‰ì
 
__MALLOC_P
 ((*
__±r
));

72 *
memÆign
 
__MALLOC_P
 ((
size_t
 
__Æignmít
, size_à
__size
))

73 
__©åibuã_mÆloc__
 
__wur
;

76 *
vÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

77 
__©åibuã_mÆloc__
 
__wur
;

81 * 
pvÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

82 
__©åibuã_mÆloc__
 
__wur
;

86 *(*
__m‹ec‹e
Ë
__MALLOC_PMT
 ((
±rdiff_t
 
__size
));

89 *
__deÁu…_m‹ec‹e
 
__MALLOC_P
 ((
±rdiff_t
 
__size
))

90 
__©åibuã_mÆloc__
;

94 
	smÆlöfo
 {

95 
	m¨ía
;

96 
	m‹dblks
;

97 
	msmblks
;

98 
	mhblks
;

99 
	mhblkhd
;

100 
	musmblks
;

101 
	mfsmblks
;

102 
	mu‹dblks
;

103 
	mf‹dblks
;

104 
	mkìpco°
;

108 
mÆlöfo
 mÆlöfÿ
__MALLOC_P
 (());

111 #i‚de‡
M_MXFAST


112 
	#M_MXFAST
 1

	)

114 #i‚de‡
M_NLBLKS


115 
	#M_NLBLKS
 2

	)

117 #i‚de‡
M_GRAIN


118 
	#M_GRAIN
 3

	)

120 #i‚de‡
M_KEEP


121 
	#M_KEEP
 4

	)

125 
	#M_TRIM_THRESHOLD
 -1

	)

126 
	#M_TOP_PAD
 -2

	)

127 
	#M_MMAP_THRESHOLD
 -3

	)

128 
	#M_MMAP_MAX
 -4

	)

129 
	#M_CHECK_ACTION
 -5

	)

130 
	#M_PERTURB
 -6

	)

131 
	#M_ARENA_TEST
 -7

	)

132 
	#M_ARENA_MAX
 -8

	)

135 
mÆl›t
 
__MALLOC_P
 ((
__∑øm
, 
__vÆ
));

139 
mÆloc_åim
 
__MALLOC_P
 ((
size_t
 
__∑d
));

143 
size_t
 
mÆloc_ußbÀ_size
 
__MALLOC_P
 ((*
__±r
));

146 
mÆloc_°©s
 
__MALLOC_P
 (());

149 
mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
);

152 *
mÆloc_gë_°©e
 
__MALLOC_P
 (());

156 
mÆloc_£t_°©e
 
__MALLOC_P
 ((*
__±r
));

161 (*
__mÆloc_öôülize_hook
Ë
	`__MALLOC_PMT
 (());

163 (*
__‰ì_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
,

164 
__c⁄°
 
__mÆloc_±r_t
));

165 *(*
__mÆloc_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__size
,

166 
__c⁄°
 
__mÆloc_±r_t
));

167 *(*
__ªÆloc_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
, 
size_t
 
__size
,

168 
__c⁄°
 
__mÆloc_±r_t
));

169 *(*
__memÆign_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__Æignmít
,

170 
size_t
 
__size
,

171 
__c⁄°
 
__mÆloc_±r_t
));

172 (*
__a·î_m‹ec‹e_hook
Ë
	`__MALLOC_PMT
 (());

175 
__mÆloc_check_öô
 
	`__MALLOC_P
 (());

178 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
f˘

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
f˘

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
f˘

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
¨gs

75 
	#__PMT
(
¨gs
Ë
	)
¨gs

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
˙ame

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
¥Ÿo

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
¥Ÿo

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
115
4129
/media/programs/workdir/stlib/trunk/include/st_arry.h
/media/programs/workdir/stlib/trunk/include/st_asyncqueue.h
/media/programs/workdir/stlib/trunk/include/st_avltree.h
/media/programs/workdir/stlib/trunk/include/st_btree.h
/media/programs/workdir/stlib/trunk/include/st_dlist.h
/media/programs/workdir/stlib/trunk/include/st_drlist.h
/media/programs/workdir/stlib/trunk/include/st_gtree.h
/media/programs/workdir/stlib/trunk/include/st_hash.h
/media/programs/workdir/stlib/trunk/include/st_huffmantree.h
/media/programs/workdir/stlib/trunk/include/st_log.h
/media/programs/workdir/stlib/trunk/include/st_qsort.h
/media/programs/workdir/stlib/trunk/include/st_quene.h
/media/programs/workdir/stlib/trunk/include/st_rbtree.h
/media/programs/workdir/stlib/trunk/include/st_rbtree_bsd.h
/media/programs/workdir/stlib/trunk/include/st_rbtree_lk.h
/media/programs/workdir/stlib/trunk/include/st_slist.h
/media/programs/workdir/stlib/trunk/include/st_splaytree.h
/media/programs/workdir/stlib/trunk/include/st_stack.h
/media/programs/workdir/stlib/trunk/include/st_treaptree.h
/media/programs/workdir/stlib/trunk/include/stlib.h
/media/programs/workdir/stlib/trunk/src/st_arry.c
/media/programs/workdir/stlib/trunk/src/st_asyncqueue.c
/media/programs/workdir/stlib/trunk/src/st_avltree.c
/media/programs/workdir/stlib/trunk/src/st_btree.c
/media/programs/workdir/stlib/trunk/src/st_dlist.c
/media/programs/workdir/stlib/trunk/src/st_gtree.c
/media/programs/workdir/stlib/trunk/src/st_hash.c
/media/programs/workdir/stlib/trunk/src/st_huffmantree.c
/media/programs/workdir/stlib/trunk/src/st_log.c
/media/programs/workdir/stlib/trunk/src/st_qsort.c
/media/programs/workdir/stlib/trunk/src/st_quene.c
/media/programs/workdir/stlib/trunk/src/st_rbtree.c
/media/programs/workdir/stlib/trunk/src/st_rbtree_lk.c
/media/programs/workdir/stlib/trunk/src/st_slist.c
/media/programs/workdir/stlib/trunk/src/st_splaytree.c
/media/programs/workdir/stlib/trunk/src/st_stack.c
/media/programs/workdir/stlib/trunk/src/st_treaptree.c
/media/programs/workdir/stlib/trunk/test/stlibtest.c
/usr/include/assert.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/alloca.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/limits.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/errno.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/bits/sched.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/linux/errno.h
/usr/include/sys/ucontext.h
/usr/include/asm/errno.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
